{"id":"1d365e9bd427275a68f886dc3271c115","_format":"hh-sol-build-info-1","solcVersion":"0.8.16","solcLongVersion":"0.8.16+commit.07a7930e","input":{"language":"Solidity","sources":{"src/CoWSwapEthFlow.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\nimport \"./libraries/EthFlowOrder.sol\";\nimport \"./interfaces/ICoWSwapSettlement.sol\";\nimport \"./interfaces/ICoWSwapEthFlow.sol\";\nimport \"./interfaces/IWrappedNativeToken.sol\";\nimport \"./mixins/CoWSwapOnchainOrders.sol\";\nimport \"./vendored/GPv2EIP1271.sol\";\n\n/// @title CoW Swap ETH Flow\n/// @author CoW Swap Developers\ncontract CoWSwapEthFlow is\n    CoWSwapOnchainOrders,\n    EIP1271Verifier,\n    ICoWSwapEthFlow\n{\n    using EthFlowOrder for EthFlowOrder.Data;\n    using GPv2Order for GPv2Order.Data;\n    using GPv2Order for bytes;\n\n    /// @dev The address of the CoW Swap settlement contract that will be used to settle orders created by this\n    /// contract.\n    ICoWSwapSettlement public immutable cowSwapSettlement;\n\n    /// @dev The address of the contract representing the default native token in the current chain (e.g., WETH for\n    /// Ethereum mainnet).\n    IWrappedNativeToken public immutable wrappedNativeToken;\n\n    /// @dev Each ETH flow order as described in [`EthFlowOrder.Data`] can be converted to a CoW Swap order. Distinct\n    /// CoW Swap orders have non-colliding order hashes. This mapping associates some extra data to a specific CoW Swap\n    /// order. This data is stored onchain and is used to verify the ownership and validity of an ETH flow order.\n    /// An ETH flow order can be settled onchain only if converting it to a CoW Swap order and hashing yields valid\n    /// onchain data.\n    mapping(bytes32 => EthFlowOrder.OnchainData) public orders;\n\n    /// @param _cowSwapSettlement The CoW Swap settlement contract.\n    /// @param _wrappedNativeToken The default native token in the current chain (e.g., WETH on mainnet).\n    constructor(\n        ICoWSwapSettlement _cowSwapSettlement,\n        IWrappedNativeToken _wrappedNativeToken\n    ) CoWSwapOnchainOrders(address(_cowSwapSettlement)) {\n        cowSwapSettlement = _cowSwapSettlement;\n        wrappedNativeToken = _wrappedNativeToken;\n\n        _wrappedNativeToken.approve(\n            cowSwapSettlement.vaultRelayer(),\n            type(uint256).max\n        );\n    }\n\n    // The contract needs to be able to receive native tokens when unwrapping.\n    // solhint-disable-next-line no-empty-blocks\n    receive() external payable {}\n\n    /// @inheritdoc ICoWSwapEthFlow\n    function wrapAll() external {\n        wrap(address(this).balance);\n    }\n\n    /// @inheritdoc ICoWSwapEthFlow\n    function wrap(uint256 amount) public {\n        // The fallback implementation of the standard WETH9 contract just calls `deposit`. Using the fallback instead\n        // of directly calling `deposit` is slightly cheaper in terms of gas.\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, ) = payable(address(wrappedNativeToken)).call{\n            value: amount\n        }(\"\");\n        // The success value is intentionally disregarded. The callback of the standard WETH9 contract has no revert\n        // path in the code, so it could only revert if the internal call runs out of gas. This is not considered a\n        // security risk since a reverting internal call would just mean that calling this function has no effect.\n        success;\n    }\n\n    /// @inheritdoc ICoWSwapEthFlow\n    function unwrap(uint256 amount) external {\n        wrappedNativeToken.withdraw(amount);\n    }\n\n    /// @inheritdoc ICoWSwapEthFlow\n    function createOrder(EthFlowOrder.Data calldata order)\n        external\n        payable\n        returns (bytes32 orderHash)\n    {\n        if (msg.value != order.sellAmount + order.feeAmount) {\n            revert IncorrectEthAmount();\n        }\n\n        if (0 == order.sellAmount) {\n            revert NotAllowedZeroSellAmount();\n        }\n\n        // solhint-disable-next-line not-rely-on-time\n        if (order.validTo < block.timestamp) {\n            revert OrderIsAlreadyExpired();\n        }\n\n        EthFlowOrder.OnchainData memory onchainData = EthFlowOrder.OnchainData(\n            msg.sender,\n            order.validTo\n        );\n\n        OnchainSignature memory signature = OnchainSignature(\n            OnchainSigningScheme.Eip1271,\n            abi.encodePacked(address(this))\n        );\n\n        // The data event field includes extra information needed to settle orders with the CoW Swap API.\n        bytes memory data = abi.encodePacked(\n            order.quoteId,\n            onchainData.validTo\n        );\n\n        orderHash = broadcastOrder(\n            onchainData.owner,\n            order.toCoWSwapOrder(wrappedNativeToken),\n            signature,\n            data\n        );\n\n        if (orders[orderHash].owner != EthFlowOrder.NO_OWNER) {\n            revert OrderIsAlreadyOwned(orderHash);\n        }\n\n        orders[orderHash] = onchainData;\n    }\n\n    /// @inheritdoc ICoWSwapEthFlow\n    function invalidateOrdersIgnoringNotAllowed(\n        EthFlowOrder.Data[] calldata orderArray\n    ) external {\n        for (uint256 i = 0; i < orderArray.length; i++) {\n            _invalidateOrder(orderArray[i], false);\n        }\n    }\n\n    /// @inheritdoc ICoWSwapEthFlow\n    function invalidateOrder(EthFlowOrder.Data calldata order) public {\n        _invalidateOrder(order, true);\n    }\n\n    /// @dev Performs the same tasks as `invalidateOrder` (see documentation in `ICoWSwapEthFlow`), but also allows the\n    /// caller to ignore the revert condition `NotAllowedToInvalidateOrder`. Instead of reverting, it stops execution\n    /// without causing any state change.\n    ///\n    /// @param order order to be invalidated.\n    /// @param revertOnInvalidDeletion controls whether the function call should revert or just return.\n    function _invalidateOrder(\n        EthFlowOrder.Data calldata order,\n        bool revertOnInvalidDeletion\n    ) internal {\n        GPv2Order.Data memory cowSwapOrder = order.toCoWSwapOrder(\n            wrappedNativeToken\n        );\n        bytes32 orderHash = cowSwapOrder.hash(cowSwapDomainSeparator);\n\n        EthFlowOrder.OnchainData memory orderData = orders[orderHash];\n\n        // solhint-disable-next-line not-rely-on-time\n        bool isTradable = orderData.validTo >= block.timestamp;\n        if (\n            orderData.owner == EthFlowOrder.INVALIDATED_OWNER ||\n            orderData.owner == EthFlowOrder.NO_OWNER ||\n            (isTradable && orderData.owner != msg.sender)\n        ) {\n            if (revertOnInvalidDeletion) {\n                revert NotAllowedToInvalidateOrder(orderHash);\n            } else {\n                return;\n            }\n        }\n\n        orders[orderHash].owner = EthFlowOrder.INVALIDATED_OWNER;\n\n        bytes memory orderUid = new bytes(GPv2Order.UID_LENGTH);\n        orderUid.packOrderUidParams(\n            orderHash,\n            address(this),\n            cowSwapOrder.validTo\n        );\n\n        // solhint-disable-next-line not-rely-on-time\n        if (isTradable) {\n            // Order is valid but its owner decided to invalidate it.\n            emit OrderInvalidation(orderUid);\n        } else {\n            // The order cannot be traded anymore, so this transaction is likely triggered to get back the ETH. We are\n            // interested in knowing who is the source of the refund.\n            emit OrderRefund(orderUid, msg.sender);\n        }\n\n        uint256 filledAmount = cowSwapSettlement.filledAmount(orderUid);\n\n        // This comment argues that a CoW Swap trader does not pay more fees if a partially fillable order is\n        // (partially) settled in multiple batches rather than in one single batch of the combined size.\n        // This also means that we can refund the user assuming the worst case of settling the filled amount in a single\n        // batch without risking giving out more funds than available in the contract because of rounding issues.\n        // A CoW Swap trader is always charged exactly the amount of fees that is proportional to the filled amount\n        // rounded down to the smaller integer. The code is here:\n        // https://github.com/cowprotocol/contracts/blob/d4e0fcd58367907bf1aff54d182222eeaee793dd/src/contracts/GPv2Settlement.sol#L385-L387\n        // We show that a trader pays less in fee to CoW Swap when settiling a partially fillable order in two\n        // executions rather than a single one for the combined amount; by induction this proves our original statement.\n        // Our previous statement is equivalent to `floor(a/c) + floor(b/c) ≤ floor((a+b)/c)`. Writing a and b in terms\n        // of reminders (`a = ad*c+ar`, `b = bd*c+br`) the equation becomes `ad + bd ≤ ad + bd + floor((ar+br)/c)`,\n        // which is immediately true.\n        uint256 refundAmount;\n        unchecked {\n            // - Multiplication overflow: since this smart contract never invalidates orders on CoW Swap,\n            //   `filledAmount <= sellAmount`. Also, `feeAmount + sellAmount` is an amount of native tokens that was\n            //   originally sent by the user. As such, it cannot be larger than the amount of native tokens available,\n            //   which is smaller than 2¹²⁸/10¹⁸ ≈ 10²⁰ in all networks supported by CoW Swap so far. Since both values\n            //    are smaller than 2¹²⁸, their product does not overflow a uint256.\n            // - Subtraction underflow: again `filledAmount ≤ sellAmount`, meaning:\n            //   feeAmount * filledAmount / sellAmount ≤ feeAmount\n            uint256 feeRefundAmount = cowSwapOrder.feeAmount -\n                ((cowSwapOrder.feeAmount * filledAmount) /\n                    cowSwapOrder.sellAmount);\n\n            // - Subtraction underflow: as noted before, filledAmount ≤ sellAmount.\n            // - Addition overflow: as noted before, the user already sent feeAmount + sellAmount native tokens, which\n            //   did not overflow.\n            refundAmount =\n                cowSwapOrder.sellAmount -\n                filledAmount +\n                feeRefundAmount;\n        }\n\n        // If not enough native token is available in the contract, unwrap the needed amount.\n        if (address(this).balance < refundAmount) {\n            uint256 withdrawAmount;\n            unchecked {\n                withdrawAmount = refundAmount - address(this).balance;\n            }\n            wrappedNativeToken.withdraw(withdrawAmount);\n        }\n\n        // Using low level calls to perform the transfer avoids setting arbitrary limits to the amount of gas used in a\n        // call. Reentrancy is avoided thanks to the `nonReentrant` function modifier.\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, ) = payable(orderData.owner).call{value: refundAmount}(\n            \"\"\n        );\n        if (!success) {\n            revert EthTransferFailed();\n        }\n    }\n\n    /// @inheritdoc ICoWSwapEthFlow\n    function isValidSignature(bytes32 orderHash, bytes memory)\n        external\n        view\n        override(EIP1271Verifier, ICoWSwapEthFlow)\n        returns (bytes4)\n    {\n        // Note: the signature parameter is ignored since all information needed to verify the validity of the order is\n        // already available onchain.\n        EthFlowOrder.OnchainData memory orderData = orders[orderHash];\n        if (\n            (orderData.owner != EthFlowOrder.NO_OWNER) &&\n            (orderData.owner != EthFlowOrder.INVALIDATED_OWNER) &&\n            // solhint-disable-next-line not-rely-on-time\n            (orderData.validTo >= block.timestamp)\n        ) {\n            return GPv2EIP1271.MAGICVALUE;\n        } else {\n            return bytes4(type(uint32).max);\n        }\n    }\n}\n"},"src/interfaces/ICoWSwapEthFlow.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\nimport \"../libraries/EthFlowOrder.sol\";\n\n/// @title CoW Swap ETH Flow Event Interface\n/// @author CoW Swap Developers\ninterface ICoWSwapEthFlowEvents {\n    /// @dev Event emitted to notify that an order was refunded. Note that this event is not fired every time the order\n    /// is invalidated (even though the user receives all unspent ETH back). This is because we want to differenciate\n    /// the case where the user invalidates a valid order and when the user receives back the funds from an expired\n    /// order.\n    ///\n    /// @param orderUid CoW Swap's unique order identifier of the order that has been invalidated (and refunded).\n    /// @param refunder The address that triggered the order refund.\n    event OrderRefund(bytes orderUid, address indexed refunder);\n}\n\n/// @title CoW Swap ETH Flow Interface\n/// @author CoW Swap Developers\ninterface ICoWSwapEthFlow is ICoWSwapEthFlowEvents {\n    /// @dev Error thrown when trying to create a new order whose order hash is the same as an order hash that was\n    /// already assigned.\n    error OrderIsAlreadyOwned(bytes32 orderHash);\n\n    /// @dev Error thrown when trying to create an order that would be expired at the time of creation\n    error OrderIsAlreadyExpired();\n\n    /// @dev Error thrown when trying to create an order without sending the expected amount of ETH to this contract.\n    error IncorrectEthAmount();\n\n    /// @dev Error thrown when trying to create an order with a sell amount == 0\n    error NotAllowedZeroSellAmount();\n\n    /// @dev Error thrown if trying to invalidate an order while not allowed.\n    error NotAllowedToInvalidateOrder(bytes32 orderHash);\n\n    /// @dev Error thrown when unsuccessfully sending ETH to an address.\n    error EthTransferFailed();\n\n    /// @dev Function that creates and broadcasts an ETH flow order that sells native ETH. The order is paid for when\n    /// the caller sends out the transaction. The caller takes ownership of the new order.\n    ///\n    /// @param order The data describing the order to be created. See [`EthFlowOrder.Data`] for extra information on\n    /// each parameter.\n    /// @return orderHash The hash of the CoW Swap order that is created to settle the new ETH order.\n    function createOrder(EthFlowOrder.Data calldata order)\n        external\n        payable\n        returns (bytes32 orderHash);\n\n    /// @dev Marks existing ETH-flow orders as invalid and, for each order, refunds the ETH that hasn't been traded yet.\n    /// The function call will not revert, if some orders are not refundable. It will silently ignore these orders.\n    /// Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\n    ///\n    /// @param orderArray Array of orders to be invalidated.\n    function invalidateOrdersIgnoringNotAllowed(\n        EthFlowOrder.Data[] calldata orderArray\n    ) external;\n\n    /// @dev Marks an existing ETH-flow order as invalid and refunds the ETH that hasn't been traded yet.\n    /// Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\n    ///\n    /// @param order Order to be invalidated.\n    function invalidateOrder(EthFlowOrder.Data calldata order) external;\n\n    /// @dev EIP1271-compliant onchain signature verification function.\n    /// This function is used by the CoW Swap settlement contract to determine if an order that is signed with an\n    /// EIP1271 signature is valid. As this contract has approved the vault relayer contract, a valid signature for an\n    /// order means that the order can be traded on CoW Swap.\n    ///\n    /// @param orderHash Hash of the order to be signed. This is the EIP-712 signing hash for the specified order as\n    /// defined in the CoW Swap settlement contract.\n    /// @param signature Signature byte array. This parameter is unused since as all information needed to verify if an\n    /// order is already available onchain.\n    /// @return magicValue Either the EIP-1271 \"magic value\" indicating success (0x1626ba7e) or a different value\n    /// indicating failure (0xffffffff).\n    function isValidSignature(bytes32 orderHash, bytes memory signature)\n        external\n        view\n        returns (bytes4 magicValue);\n\n    /// @dev This function reads the  chain's native token balance of this contract (e.g., ETH for mainnet) and converts\n    // the entire amount to its wrapped version (e.g., WETH).\n    function wrapAll() external;\n\n    /// @dev This function takes the specified amount of the chain's native token (e.g., ETH for mainnet) stored by this\n    /// contract and converts it to its wrapped version (e.g., WETH).\n    ///\n    /// @param amount The amount of native tokens to convert to wrapped native tokens.\n    function wrap(uint256 amount) external;\n\n    /// @dev This function takes the specified amount of the chain's wrapped native token (e.g., WETH for mainnet)\n    /// and converts it to its unwrapped version (e.g., ETH).\n    ///\n    /// @param amount The amount of wrapped native tokens to convert to native tokens.\n    function unwrap(uint256 amount) external;\n}\n"},"src/interfaces/ICoWSwapOnchainOrders.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\nimport \"../vendored/GPv2Order.sol\";\n\n/// @title CoW Swap Onchain Order Creator Interface\n/// @author CoW Swap Developers\ninterface ICoWSwapOnchainOrders {\n    /// @dev List of signature schemes that are supported by this contract to create orders onchain.\n    enum OnchainSigningScheme {\n        Eip1271,\n        PreSign\n    }\n\n    /// @dev Struct containing information on the signign scheme used plus the corresponding signature.\n    struct OnchainSignature {\n        /// @dev The signing scheme used by the signature data.\n        OnchainSigningScheme scheme;\n        /// @dev The data used as an order signature.\n        bytes data;\n    }\n\n    /// @dev Event emitted to broadcast an order onchain.\n    ///\n    /// @param sender The user who triggered the creation of the order. Note that this address does *not* need to be\n    /// the actual owner of the order and does not need to be related to the order or signature in any way.\n    /// For example, if a smart contract creates orders on behalf of the user, then the sender would be the user who\n    /// triggers the creation of the order, while the actual owner of the order would be the smart contract that\n    /// creates it.\n    /// @param order Information on the order that is created in this transacion. The order is expected to be a valid\n    /// order for the CoW Swap settlement contract and contain all information needed to settle it in a batch.\n    /// @param signature The signature that can be used to verify the newly created order. Note that it is always\n    /// possible to recover the owner of the order from a valid signature.\n    /// @param data Any extra data that should be passed along with the order. This will be used by the services that\n    /// collects onchain orders and no specific encoding is enforced on this field. It is supposed to encode extra\n    /// information that is not included in the order data so that it can be passed along when decoding an onchain\n    /// order. As an example, a contract that creates orders on behalf of a user could set a different expiration date\n    /// than the one specified in the order.\n    event OrderPlacement(\n        address indexed sender,\n        GPv2Order.Data order,\n        OnchainSignature signature,\n        bytes data\n    );\n\n    /// @dev Event emitted to notify that an order was invalidated.\n    ///\n    /// @param orderUid CoW Swap's unique order identifier of the order that has been invalidated.\n    event OrderInvalidation(bytes orderUid);\n}\n"},"src/interfaces/ICoWSwapSettlement.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\n/// @title CoW Swap Settlement Contract Interface\n/// @author CoW Swap Developers\n/// @dev This interface collects the functions of the CoW Swap settlement contract that are used by the ETH flow\n/// contract.\ninterface ICoWSwapSettlement {\n    /// @dev Map each user order by UID to the amount that has been filled so\n    /// far. If this amount is larger than or equal to the amount traded in the\n    /// order (amount sold for sell orders, amount bought for buy orders) then\n    /// the order cannot be traded anymore. If the order is fill or kill, then\n    /// this value is only used to determine whether the order has already been\n    /// executed.\n    /// @param orderUid The uinique identifier to use to retrieve the filled amount.\n    function filledAmount(bytes memory orderUid) external returns (uint256);\n\n    /// @dev The address of the vault relayer: the contract that handles withdrawing tokens from the user to the\n    /// settlement contract. A user who wants to sell a token on CoW Swap must approve this contract to spend the token.\n    function vaultRelayer() external returns (address);\n}\n"},"src/interfaces/IWrappedNativeToken.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\nimport \"../vendored/IERC20.sol\";\n\n/// @title CoW Swap Wrapped Native Token Interface\n/// @author CoW Swap Developers\ninterface IWrappedNativeToken is IERC20 {\n    /// @dev Deposit native token in exchange for wrapped netive tokens.\n    function deposit() external payable;\n\n    /// @dev Burn wrapped native tokens in exchange for native tokens.\n    /// @param amount Amount of wrapped tokens to exchange for native tokens.\n    function withdraw(uint256 amount) external;\n}\n"},"src/libraries/CoWSwapEip712.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\n/// @title CoW Swap EIP-712 Encoding Library\n/// @author CoW Swap Developers\n/// @dev The code in this contract was largely taken from:\n/// <https://raw.githubusercontent.com/cowprotocol/contracts/v1.0.0/src/contracts/mixins/GPv2Signing.sol>\nlibrary CoWSwapEip712 {\n    /// @dev The EIP-712 domain type hash used for computing the domain separator.\n    bytes32 private constant DOMAIN_TYPE_HASH =\n        keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n\n    /// @dev The EIP-712 domain name used for computing the domain separator.\n    bytes32 private constant DOMAIN_NAME = keccak256(\"Gnosis Protocol\");\n\n    /// @dev The EIP-712 domain version used for computing the domain separator.\n    bytes32 private constant DOMAIN_VERSION = keccak256(\"v2\");\n\n    /// @dev Computes the EIP-712 domain separator of the CoW Swap settlement contract on the current network.\n    ///\n    /// @param cowSwapAddress The address of the CoW Swap settlement contract for which to compute the domain separator.\n    /// Note that there are no checks to verify that the input address points to an actual contract.\n    /// @return The domain separator of the settlement contract for the input address as computed by the settlement\n    /// contract internally.\n    function domainSeparator(address cowSwapAddress)\n        internal\n        view\n        returns (bytes32)\n    {\n        // NOTE: Currently, the only way to get the chain ID in solidity is using assembly.\n        uint256 chainId;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            chainId := chainid()\n        }\n\n        return\n            keccak256(\n                abi.encode(\n                    DOMAIN_TYPE_HASH,\n                    DOMAIN_NAME,\n                    DOMAIN_VERSION,\n                    chainId,\n                    cowSwapAddress\n                )\n            );\n    }\n}\n"},"src/libraries/EthFlowOrder.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\nimport \"../vendored/GPv2Order.sol\";\nimport \"../vendored/IERC20.sol\";\n\n/// @title CoW Swap ETH Flow Order Library\n/// @author CoW Swap Developers\nlibrary EthFlowOrder {\n    /// @dev Struct collecting all parameters of an ETH flow order that need to be stored onchain.\n    struct OnchainData {\n        /// @dev The address of the user whom the order belongs to.\n        address owner;\n        /// @dev The latest timestamp in seconds when the order can be settled.\n        uint32 validTo;\n    }\n\n    /// @dev Data describing all parameters of an ETH flow order.\n    struct Data {\n        /// @dev The address of the token that should be bought for ETH. It follows the same format as in the CoW Swap\n        /// contracts, meaning that the token GPv2Transfer.BUY_ETH_ADDRESS (0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE)\n        /// represents native ETH (and should most likely not be used in this context).\n        IERC20 buyToken;\n        /// @dev The address that should receive the proceeds from the order. Note that using the address\n        /// GPv2Order.RECEIVER_SAME_AS_OWNER (i.e., the zero address) as the receiver is not allowed.\n        address receiver;\n        /// @dev The exact amount of ETH that should be sold in this order.\n        uint256 sellAmount;\n        /// @dev The minimum amount of buyToken that should be received to settle this order.\n        uint256 buyAmount;\n        /// @dev Extra data to include in the order. It is used by the CoW Swap infrastructure as extra information on\n        /// the order and has no direct effect on on-chain execution.\n        bytes32 appData;\n        /// @dev The exact amount of ETH that should be paid by the user to the CoW Swap contract after the order is\n        /// settled.\n        uint256 feeAmount;\n        /// @dev The last timestamp in seconds from which the order can be settled (order cannot resolve after this timestamp).\n        uint32 validTo;\n        /// @dev Flag indicating whether the order is fill-or-kill or can be filled partially.\n        bool partiallyFillable;\n        /// @dev quoteId The quote id obtained from the CoW Swap API to lock in the current price. It is not directly\n        /// used by any onchain component but is part of the information emitted onchain on order creation and may be\n        /// required for an order to be automatically picked up by the CoW Swap orderbook.\n        int64 quoteId;\n    }\n\n    /// @dev An order that is owned by this address is an order that has not yet been assigned.\n    address internal constant NO_OWNER = address(0);\n\n    /// @dev An order that is owned by this address is an order that has been invalidated. Note that this address cannot\n    /// be directly used to create orders.\n    address internal constant INVALIDATED_OWNER = address(type(uint160).max);\n\n    /// @dev Error returned if the receiver of the ETH flow order is unspecified (`GPv2Order.RECEIVER_SAME_AS_OWNER`).\n    error ReceiverMustBeSet();\n\n    /// @dev Transforms an ETH flow order into the CoW Swap order that can be settled by the ETH flow contract.\n    ///\n    /// @param order The ETH flow order to be converted.\n    /// @param wrappedNativeToken The address of the wrapped native token for the current network (e.g., WETH for\n    /// Ethereum mainet).\n    /// @return The CoW Swap order data that represents the user order in the ETH flow contract.\n    function toCoWSwapOrder(Data memory order, IERC20 wrappedNativeToken)\n        internal\n        pure\n        returns (GPv2Order.Data memory)\n    {\n        if (order.receiver == GPv2Order.RECEIVER_SAME_AS_OWNER) {\n            // The receiver field specified which address is going to receive the proceeds from the orders. If using\n            // `RECEIVER_SAME_AS_OWNER`, then the receiver is implicitly assumed by the CoW Swap Protocol to be the\n            // same as the order owner.\n            // However, the owner of an ETH flow order is always the ETH flow smart contract, and any ERC20 tokens sent\n            // to this contract would be lost.\n            revert ReceiverMustBeSet();\n        }\n\n        // Note that not all fields from `order` are used in creating the corresponding CoW Swap order.\n        // For example, validTo and quoteId are ignored.\n        return\n            GPv2Order.Data(\n                wrappedNativeToken, // IERC20 sellToken\n                order.buyToken, // IERC20 buyToken\n                order.receiver, // address receiver\n                order.sellAmount, // uint256 sellAmount\n                order.buyAmount, // uint256 buyAmount\n                // This CoW Swap order is not allowed to expire. If it expired, then any solver of CoW Swap contract\n                // would be allowed to clear the `filledAmount` for this order using `freeFilledAmountStorage`, making\n                // it impossible to detect if the order has been previously filled.\n                // Note that order.validTo is disregarded in building the CoW Swap order.\n                type(uint32).max, // uint32 validTo\n                order.appData, // bytes32 appData\n                order.feeAmount, // uint256 feeAmount\n                // Only sell orders are allowed. In a buy order, any leftover ETH would stay in the ETH flow contract\n                // and would need to be sent back to the user, whose extra gas cost is usually not worth it.\n                GPv2Order.KIND_SELL, // bytes32 kind\n                order.partiallyFillable, // bool partiallyFillable\n                // We do not currently support interacting with the Balancer vault.\n                GPv2Order.BALANCE_ERC20, // bytes32 sellTokenBalance\n                GPv2Order.BALANCE_ERC20 // bytes32 buyTokenBalance\n            );\n    }\n}\n"},"src/mixins/CoWSwapOnchainOrders.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\nimport \"../vendored/GPv2Order.sol\";\nimport \"../interfaces/ICoWSwapOnchainOrders.sol\";\nimport \"../libraries/CoWSwapEip712.sol\";\n\n/// @title CoW Swap Onchain Order Creator Event Emitter\n/// @author CoW Swap Developers\ncontract CoWSwapOnchainOrders is ICoWSwapOnchainOrders {\n    using GPv2Order for GPv2Order.Data;\n    using GPv2Order for bytes;\n\n    /// @dev The domain separator for the CoW Swap settlement contract.\n    bytes32 internal immutable cowSwapDomainSeparator;\n\n    /// @param settlementContractAddress The address of CoW Swap's settlement contract on the chain where this contract\n    /// is deployed.\n    constructor(address settlementContractAddress) {\n        cowSwapDomainSeparator = CoWSwapEip712.domainSeparator(\n            settlementContractAddress\n        );\n    }\n\n    /// @dev Emits an event with all information needed to execute an order onchain and returns the corresponding order\n    /// hash.\n    ///\n    /// See [`ICoWSwapOnchainOrders.OrderPlacement`] for details on the meaning of each parameter.\n    /// @return The EIP-712 hash of the order data as computed by the CoW Swap settlement contract.\n    function broadcastOrder(\n        address sender,\n        GPv2Order.Data memory order,\n        OnchainSignature memory signature,\n        bytes memory data\n    ) internal returns (bytes32) {\n        emit OrderPlacement(sender, order, signature, data);\n        return order.hash(cowSwapDomainSeparator);\n    }\n}\n"},"src/vendored/GPv2EIP1271.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8;\n\n// Vendored from GPv2 contracts v1.0.0, see:\n// <https://raw.githubusercontent.com/cowprotocol/contracts/main/src/contracts/interfaces/GPv2EIP1271.sol>\n// The following changes were made:\n// - Bumped up Solidity version.\n\nlibrary GPv2EIP1271 {\n    /// @dev Value returned by a call to `isValidSignature` if the signature\n    /// was verified successfully. The value is defined in EIP-1271 as:\n    /// bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n    bytes4 internal constant MAGICVALUE = 0x1626ba7e;\n}\n\n/// @title EIP1271 Interface\n/// @dev Standardized interface for an implementation of smart contract\n/// signatures as described in EIP-1271. The code that follows is identical to\n/// the code in the standard with the exception of formatting and syntax\n/// changes to adapt the code to our Solidity version.\ninterface EIP1271Verifier {\n    /// @dev Should return whether the signature provided is valid for the\n    /// provided data\n    /// @param _hash      Hash of the data to be signed\n    /// @param _signature Signature byte array associated with _data\n    ///\n    /// MUST return the bytes4 magic value 0x1626ba7e when function passes.\n    /// MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for\n    /// solc > 0.5)\n    /// MUST allow external calls\n    ///\n    function isValidSignature(bytes32 _hash, bytes memory _signature)\n        external\n        view\n        returns (bytes4 magicValue);\n}\n"},"src/vendored/GPv2Order.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-or-later\n\n// Vendored from GPv2 contracts v1.0.0, see:\n// <https://raw.githubusercontent.com/cowprotocol/contracts/v1.0.0/src/contracts/libraries/GPv2Order.sol>\n// The following changes were made:\n// - Bumped up Solidity version.\n// - Vendored imports.\n\npragma solidity ^0.8;\n\nimport \"./IERC20.sol\";\n\n/// @title Gnosis Protocol v2 Order Library\n/// @author Gnosis Developers\nlibrary GPv2Order {\n    /// @dev The complete data for a Gnosis Protocol order. This struct contains\n    /// all order parameters that are signed for submitting to GP.\n    struct Data {\n        IERC20 sellToken;\n        IERC20 buyToken;\n        address receiver;\n        uint256 sellAmount;\n        uint256 buyAmount;\n        uint32 validTo;\n        bytes32 appData;\n        uint256 feeAmount;\n        bytes32 kind;\n        bool partiallyFillable;\n        bytes32 sellTokenBalance;\n        bytes32 buyTokenBalance;\n    }\n\n    /// @dev The order EIP-712 type hash for the [`GPv2Order.Data`] struct.\n    ///\n    /// This value is pre-computed from the following expression:\n    /// ```\n    /// keccak256(\n    ///     \"Order(\" +\n    ///         \"address sellToken,\" +\n    ///         \"address buyToken,\" +\n    ///         \"address receiver,\" +\n    ///         \"uint256 sellAmount,\" +\n    ///         \"uint256 buyAmount,\" +\n    ///         \"uint32 validTo,\" +\n    ///         \"bytes32 appData,\" +\n    ///         \"uint256 feeAmount,\" +\n    ///         \"string kind,\" +\n    ///         \"bool partiallyFillable\" +\n    ///         \"string sellTokenBalance\" +\n    ///         \"string buyTokenBalance\" +\n    ///     \")\"\n    /// )\n    /// ```\n    bytes32 internal constant TYPE_HASH =\n        hex\"d5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e489\";\n\n    /// @dev The marker value for a sell order for computing the order struct\n    /// hash. This allows the EIP-712 compatible wallets to display a\n    /// descriptive string for the order kind (instead of 0 or 1).\n    ///\n    /// This value is pre-computed from the following expression:\n    /// ```\n    /// keccak256(\"sell\")\n    /// ```\n    bytes32 internal constant KIND_SELL =\n        hex\"f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775\";\n\n    /// @dev The OrderKind marker value for a buy order for computing the order\n    /// struct hash.\n    ///\n    /// This value is pre-computed from the following expression:\n    /// ```\n    /// keccak256(\"buy\")\n    /// ```\n    bytes32 internal constant KIND_BUY =\n        hex\"6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc\";\n\n    /// @dev The TokenBalance marker value for using direct ERC20 balances for\n    /// computing the order struct hash.\n    ///\n    /// This value is pre-computed from the following expression:\n    /// ```\n    /// keccak256(\"erc20\")\n    /// ```\n    bytes32 internal constant BALANCE_ERC20 =\n        hex\"5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9\";\n\n    /// @dev The TokenBalance marker value for using Balancer Vault external\n    /// balances (in order to re-use Vault ERC20 approvals) for computing the\n    /// order struct hash.\n    ///\n    /// This value is pre-computed from the following expression:\n    /// ```\n    /// keccak256(\"external\")\n    /// ```\n    bytes32 internal constant BALANCE_EXTERNAL =\n        hex\"abee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea0632\";\n\n    /// @dev The TokenBalance marker value for using Balancer Vault internal\n    /// balances for computing the order struct hash.\n    ///\n    /// This value is pre-computed from the following expression:\n    /// ```\n    /// keccak256(\"internal\")\n    /// ```\n    bytes32 internal constant BALANCE_INTERNAL =\n        hex\"4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce\";\n\n    /// @dev Marker address used to indicate that the receiver of the trade\n    /// proceeds should the owner of the order.\n    ///\n    /// This is chosen to be `address(0)` for gas efficiency as it is expected\n    /// to be the most common case.\n    address internal constant RECEIVER_SAME_AS_OWNER = address(0);\n\n    /// @dev The byte length of an order unique identifier.\n    uint256 internal constant UID_LENGTH = 56;\n\n    /// @dev Returns the actual receiver for an order. This function checks\n    /// whether or not the [`receiver`] field uses the marker value to indicate\n    /// it is the same as the order owner.\n    ///\n    /// @return receiver The actual receiver of trade proceeds.\n    function actualReceiver(Data memory order, address owner)\n        internal\n        pure\n        returns (address receiver)\n    {\n        if (order.receiver == RECEIVER_SAME_AS_OWNER) {\n            receiver = owner;\n        } else {\n            receiver = order.receiver;\n        }\n    }\n\n    /// @dev Return the EIP-712 signing hash for the specified order.\n    ///\n    /// @param order The order to compute the EIP-712 signing hash for.\n    /// @param domainSeparator The EIP-712 domain separator to use.\n    /// @return orderDigest The 32 byte EIP-712 struct hash.\n    function hash(Data memory order, bytes32 domainSeparator)\n        internal\n        pure\n        returns (bytes32 orderDigest)\n    {\n        bytes32 structHash;\n\n        // NOTE: Compute the EIP-712 order struct hash in place. As suggested\n        // in the EIP proposal, noting that the order struct has 10 fields, and\n        // including the type hash `(12 + 1) * 32 = 416` bytes to hash.\n        // <https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md#rationale-for-encodedata>\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let dataStart := sub(order, 32)\n            let temp := mload(dataStart)\n            mstore(dataStart, TYPE_HASH)\n            structHash := keccak256(dataStart, 416)\n            mstore(dataStart, temp)\n        }\n\n        // NOTE: Now that we have the struct hash, compute the EIP-712 signing\n        // hash using scratch memory past the free memory pointer. The signing\n        // hash is computed from `\"\\x19\\x01\" || domainSeparator || structHash`.\n        // <https://docs.soliditylang.org/en/v0.8.16/internals/layout_in_memory.html#layout-in-memory>\n        // <https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md#specification>\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let freeMemoryPointer := mload(0x40)\n            mstore(freeMemoryPointer, \"\\x19\\x01\")\n            mstore(add(freeMemoryPointer, 2), domainSeparator)\n            mstore(add(freeMemoryPointer, 34), structHash)\n            orderDigest := keccak256(freeMemoryPointer, 66)\n        }\n    }\n\n    /// @dev Packs order UID parameters into the specified memory location. The\n    /// result is equivalent to `abi.encodePacked(...)` with the difference that\n    /// it allows re-using the memory for packing the order UID.\n    ///\n    /// This function reverts if the order UID buffer is not the correct size.\n    ///\n    /// @param orderUid The buffer pack the order UID parameters into.\n    /// @param orderDigest The EIP-712 struct digest derived from the order\n    /// parameters.\n    /// @param owner The address of the user who owns this order.\n    /// @param validTo The epoch time at which the order will stop being valid.\n    function packOrderUidParams(\n        bytes memory orderUid,\n        bytes32 orderDigest,\n        address owner,\n        uint32 validTo\n    ) internal pure {\n        require(orderUid.length == UID_LENGTH, \"GPv2: uid buffer overflow\");\n\n        // NOTE: Write the order UID to the allocated memory buffer. The order\n        // parameters are written to memory in **reverse order** as memory\n        // operations write 32-bytes at a time and we want to use a packed\n        // encoding. This means, for example, that after writing the value of\n        // `owner` to bytes `20:52`, writing the `orderDigest` to bytes `0:32`\n        // will **overwrite** bytes `20:32`. This is desirable as addresses are\n        // only 20 bytes and `20:32` should be `0`s:\n        //\n        //        |           1111111111222222222233333333334444444444555555\n        //   byte | 01234567890123456789012345678901234567890123456789012345\n        // -------+---------------------------------------------------------\n        //  field | [.........orderDigest..........][......owner.......][vT]\n        // -------+---------------------------------------------------------\n        // mstore |                         [000000000000000000000000000.vT]\n        //        |                     [00000000000.......owner.......]\n        //        | [.........orderDigest..........]\n        //\n        // Additionally, since Solidity `bytes memory` are length prefixed,\n        // 32 needs to be added to all the offsets.\n        //\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            mstore(add(orderUid, 56), validTo)\n            mstore(add(orderUid, 52), owner)\n            mstore(add(orderUid, 32), orderDigest)\n        }\n    }\n\n    /// @dev Extracts specific order information from the standardized unique\n    /// order id of the protocol.\n    ///\n    /// @param orderUid The unique identifier used to represent an order in\n    /// the protocol. This uid is the packed concatenation of the order digest,\n    /// the validTo order parameter and the address of the user who created the\n    /// order. It is used by the user to interface with the contract directly,\n    /// and not by calls that are triggered by the solvers.\n    /// @return orderDigest The EIP-712 signing digest derived from the order\n    /// parameters.\n    /// @return owner The address of the user who owns this order.\n    /// @return validTo The epoch time at which the order will stop being valid.\n    function extractOrderUidParams(bytes calldata orderUid)\n        internal\n        pure\n        returns (\n            bytes32 orderDigest,\n            address owner,\n            uint32 validTo\n        )\n    {\n        require(orderUid.length == UID_LENGTH, \"GPv2: invalid uid\");\n\n        // Use assembly to efficiently decode packed calldata.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            orderDigest := calldataload(orderUid.offset)\n            owner := shr(96, calldataload(add(orderUid.offset, 32)))\n            validTo := shr(224, calldataload(add(orderUid.offset, 52)))\n        }\n    }\n}\n"},"src/vendored/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// Vendored from OpenZeppelin Contracts v4.4.0, see:\n// <https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v4.4.0/contracts/token/ERC20/IERC20.sol>\n\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"src/CoWSwapEthFlow.sol":{"ast":{"absolutePath":"src/CoWSwapEthFlow.sol","exportedSymbols":{"CoWSwapEip712":[748],"CoWSwapEthFlow":[545],"CoWSwapOnchainOrders":[927],"EIP1271Verifier":[946],"EthFlowOrder":[865],"GPv2EIP1271":[934],"GPv2Order":[1102],"ICoWSwapEthFlow":[633],"ICoWSwapEthFlowEvents":[557],"ICoWSwapOnchainOrders":[667],"ICoWSwapSettlement":[685],"IERC20":[1180],"IWrappedNativeToken":[702]},"id":546,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:0"},{"absolutePath":"src/libraries/EthFlowOrder.sol","file":"./libraries/EthFlowOrder.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":546,"sourceUnit":866,"src":"69:38:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/interfaces/ICoWSwapSettlement.sol","file":"./interfaces/ICoWSwapSettlement.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":546,"sourceUnit":686,"src":"108:45:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/interfaces/ICoWSwapEthFlow.sol","file":"./interfaces/ICoWSwapEthFlow.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":546,"sourceUnit":634,"src":"154:42:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/interfaces/IWrappedNativeToken.sol","file":"./interfaces/IWrappedNativeToken.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":546,"sourceUnit":703,"src":"197:46:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/mixins/CoWSwapOnchainOrders.sol","file":"./mixins/CoWSwapOnchainOrders.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":546,"sourceUnit":928,"src":"244:43:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/vendored/GPv2EIP1271.sol","file":"./vendored/GPv2EIP1271.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":546,"sourceUnit":947,"src":"288:36:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9,"name":"CoWSwapOnchainOrders","nameLocations":["418:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"418:20:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"418:20:0"},{"baseName":{"id":11,"name":"EIP1271Verifier","nameLocations":["444:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":946,"src":"444:15:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"444:15:0"},{"baseName":{"id":13,"name":"ICoWSwapEthFlow","nameLocations":["465:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":633,"src":"465:15:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"465:15:0"}],"canonicalName":"CoWSwapEthFlow","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"326:61:0","text":"@title CoW Swap ETH Flow\n @author CoW Swap Developers"},"fullyImplemented":true,"id":545,"linearizedBaseContracts":[545,633,557,946,927,667],"name":"CoWSwapEthFlow","nameLocation":"396:14:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":18,"libraryName":{"id":15,"name":"EthFlowOrder","nameLocations":["493:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":865,"src":"493:12:0"},"nodeType":"UsingForDirective","src":"487:41:0","typeName":{"id":17,"nodeType":"UserDefinedTypeName","pathNode":{"id":16,"name":"EthFlowOrder.Data","nameLocations":["510:12:0","523:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"510:17:0"},"referencedDeclaration":789,"src":"510:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}}},{"global":false,"id":22,"libraryName":{"id":19,"name":"GPv2Order","nameLocations":["539:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"539:9:0"},"nodeType":"UsingForDirective","src":"533:35:0","typeName":{"id":21,"nodeType":"UserDefinedTypeName","pathNode":{"id":20,"name":"GPv2Order.Data","nameLocations":["553:9:0","563:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"553:14:0"},"referencedDeclaration":977,"src":"553:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_storage_ptr","typeString":"struct GPv2Order.Data"}}},{"global":false,"id":25,"libraryName":{"id":23,"name":"GPv2Order","nameLocations":["579:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"579:9:0"},"nodeType":"UsingForDirective","src":"573:26:0","typeName":{"id":24,"name":"bytes","nodeType":"ElementaryTypeName","src":"593:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":false,"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"605:125:0","text":"@dev The address of the CoW Swap settlement contract that will be used to settle orders created by this\n contract."},"functionSelector":"ec30bb88","id":29,"mutability":"immutable","name":"cowSwapSettlement","nameLocation":"771:17:0","nodeType":"VariableDeclaration","scope":545,"src":"735:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"},"typeName":{"id":28,"nodeType":"UserDefinedTypeName","pathNode":{"id":27,"name":"ICoWSwapSettlement","nameLocations":["735:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":685,"src":"735:18:0"},"referencedDeclaration":685,"src":"735:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}},"visibility":"public"},{"constant":false,"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"795:138:0","text":"@dev The address of the contract representing the default native token in the current chain (e.g., WETH for\n Ethereum mainnet)."},"functionSelector":"17fcb39b","id":33,"mutability":"immutable","name":"wrappedNativeToken","nameLocation":"975:18:0","nodeType":"VariableDeclaration","scope":545,"src":"938:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"},"typeName":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"IWrappedNativeToken","nameLocations":["938:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":702,"src":"938:19:0"},"referencedDeclaration":702,"src":"938:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}},"visibility":"public"},{"constant":false,"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"1000:485:0","text":"@dev Each ETH flow order as described in [`EthFlowOrder.Data`] can be converted to a CoW Swap order. Distinct\n CoW Swap orders have non-colliding order hashes. This mapping associates some extra data to a specific CoW Swap\n order. This data is stored onchain and is used to verify the ownership and validity of an ETH flow order.\n An ETH flow order can be settled onchain only if converting it to a CoW Swap order and hashing yields valid\n onchain data."},"functionSelector":"9c3f1e90","id":39,"mutability":"mutable","name":"orders","nameLocation":"1542:6:0","nodeType":"VariableDeclaration","scope":545,"src":"1490:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_OnchainData_$760_storage_$","typeString":"mapping(bytes32 => struct EthFlowOrder.OnchainData)"},"typeName":{"id":38,"keyType":{"id":35,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1498:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1490:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_OnchainData_$760_storage_$","typeString":"mapping(bytes32 => struct EthFlowOrder.OnchainData)"},"valueType":{"id":37,"nodeType":"UserDefinedTypeName","pathNode":{"id":36,"name":"EthFlowOrder.OnchainData","nameLocations":["1509:12:0","1522:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":760,"src":"1509:24:0"},"referencedDeclaration":760,"src":"1509:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage_ptr","typeString":"struct EthFlowOrder.OnchainData"}}},"visibility":"public"},{"body":{"id":76,"nodeType":"Block","src":"1893:230:0","statements":[{"expression":{"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":55,"name":"cowSwapSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1903:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":56,"name":"_cowSwapSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1923:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}},"src":"1903:38:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}},"id":58,"nodeType":"ExpressionStatement","src":"1903:38:0"},{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1951:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":60,"name":"_wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1972:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}},"src":"1951:40:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}},"id":62,"nodeType":"ExpressionStatement","src":"1951:40:0"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":66,"name":"cowSwapSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2043:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2061:12:0","memberName":"vaultRelayer","nodeType":"MemberAccess","referencedDeclaration":684,"src":"2043:30:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_address_$","typeString":"function () external returns (address)"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2043:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":71,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2094:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":69,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2089:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2089:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2103:3:0","memberName":"max","nodeType":"MemberAccess","src":"2089:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":63,"name":"_wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"2002:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2022:7:0","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1149,"src":"2002:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2002:114:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"ExpressionStatement","src":"2002:114:0"}]},"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"1555:169:0","text":"@param _cowSwapSettlement The CoW Swap settlement contract.\n @param _wrappedNativeToken The default native token in the current chain (e.g., WETH on mainnet)."},"id":77,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[{"id":51,"name":"_cowSwapSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1872:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}],"id":50,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1864:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"1864:7:0","typeDescriptions":{}}},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1864:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":53,"kind":"baseConstructorSpecifier","modifierName":{"id":48,"name":"CoWSwapOnchainOrders","nameLocations":["1843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":927,"src":"1843:20:0"},"nodeType":"ModifierInvocation","src":"1843:49:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"_cowSwapSettlement","nameLocation":"1769:18:0","nodeType":"VariableDeclaration","scope":77,"src":"1750:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"},"typeName":{"id":42,"nodeType":"UserDefinedTypeName","pathNode":{"id":41,"name":"ICoWSwapSettlement","nameLocations":["1750:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":685,"src":"1750:18:0"},"referencedDeclaration":685,"src":"1750:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"_wrappedNativeToken","nameLocation":"1817:19:0","nodeType":"VariableDeclaration","scope":77,"src":"1797:39:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"},"typeName":{"id":45,"nodeType":"UserDefinedTypeName","pathNode":{"id":44,"name":"IWrappedNativeToken","nameLocations":["1797:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":702,"src":"1797:19:0"},"referencedDeclaration":702,"src":"1797:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}},"visibility":"internal"}],"src":"1740:102:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"1893:0:0"},"scope":545,"src":"1729:394:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":80,"nodeType":"Block","src":"2284:2:0","statements":[]},"id":81,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"2264:2:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"2284:0:0"},"scope":545,"src":"2257:29:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[620],"body":{"id":93,"nodeType":"Block","src":"2356:44:0","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":88,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2379:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}],"id":87,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2371:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"2371:7:0","typeDescriptions":{}}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2385:7:0","memberName":"balance","nodeType":"MemberAccess","src":"2371:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":85,"name":"wrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2366:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2366:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"2366:27:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2292:31:0","text":"@inheritdoc ICoWSwapEthFlow"},"functionSelector":"4c84c1c8","id":94,"implemented":true,"kind":"function","modifiers":[],"name":"wrapAll","nameLocation":"2337:7:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2344:2:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"2356:0:0"},"scope":545,"src":"2328:72:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[626],"body":{"id":117,"nodeType":"Block","src":"2479:739:0","statements":[{"assignments":[101,null],"declarations":[{"constant":false,"id":101,"mutability":"mutable","name":"success","nameLocation":"2751:7:0","nodeType":"VariableDeclaration","scope":117,"src":"2746:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100,"name":"bool","nodeType":"ElementaryTypeName","src":"2746:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":114,"initialValue":{"arguments":[{"hexValue":"","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2843:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[{"id":106,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2780:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}],"id":105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2772:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"2772:7:0","typeDescriptions":{}}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2764:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"2764:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2764:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2801:4:0","memberName":"call","nodeType":"MemberAccess","src":"2764:41:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":110,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2826:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2764:78:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2764:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2745:101:0"},{"expression":{"id":115,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3204:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":116,"nodeType":"ExpressionStatement","src":"3204:7:0"}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"2406:31:0","text":"@inheritdoc ICoWSwapEthFlow"},"functionSelector":"ea598cb0","id":118,"implemented":true,"kind":"function","modifiers":[],"name":"wrap","nameLocation":"2451:4:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"amount","nameLocation":"2464:6:0","nodeType":"VariableDeclaration","scope":118,"src":"2456:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"2456:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2455:16:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"2479:0:0"},"scope":545,"src":"2442:776:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[632],"body":{"id":130,"nodeType":"Block","src":"3301:52:0","statements":[{"expression":{"arguments":[{"id":127,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3339:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":124,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"3311:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3330:8:0","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":701,"src":"3311:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"3311:35:0"}]},"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"3224:31:0","text":"@inheritdoc ICoWSwapEthFlow"},"functionSelector":"de0e9a3e","id":131,"implemented":true,"kind":"function","modifiers":[],"name":"unwrap","nameLocation":"3269:6:0","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"amount","nameLocation":"3284:6:0","nodeType":"VariableDeclaration","scope":131,"src":"3276:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"3276:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3275:16:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"3301:0:0"},"scope":545,"src":"3260:93:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[591],"body":{"id":242,"nodeType":"Block","src":"3523:1238:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":140,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3537:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3541:5:0","memberName":"value","nodeType":"MemberAccess","src":"3537:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":142,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3550:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3556:10:0","memberName":"sellAmount","nodeType":"MemberAccess","referencedDeclaration":770,"src":"3550:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":144,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3569:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:9:0","memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":779,"src":"3569:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3550:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3537:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":152,"nodeType":"IfStatement","src":"3533:105:0","trueBody":{"id":151,"nodeType":"Block","src":"3586:52:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":148,"name":"IncorrectEthAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3607:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3607:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"RevertStatement","src":"3600:27:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3652:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":154,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3657:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3663:10:0","memberName":"sellAmount","nodeType":"MemberAccess","referencedDeclaration":770,"src":"3657:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3652:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":161,"nodeType":"IfStatement","src":"3648:85:0","trueBody":{"id":160,"nodeType":"Block","src":"3675:58:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":157,"name":"NotAllowedZeroSellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"3696:24:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3696:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":159,"nodeType":"RevertStatement","src":"3689:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":162,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3801:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3807:7:0","memberName":"validTo","nodeType":"MemberAccess","referencedDeclaration":782,"src":"3801:13:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":164,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3817:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3823:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"3817:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3801:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":171,"nodeType":"IfStatement","src":"3797:92:0","trueBody":{"id":170,"nodeType":"Block","src":"3834:55:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":167,"name":"OrderIsAlreadyExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3855:21:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3855:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":169,"nodeType":"RevertStatement","src":"3848:30:0"}]}},{"assignments":[176],"declarations":[{"constant":false,"id":176,"mutability":"mutable","name":"onchainData","nameLocation":"3931:11:0","nodeType":"VariableDeclaration","scope":242,"src":"3899:43:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData"},"typeName":{"id":175,"nodeType":"UserDefinedTypeName","pathNode":{"id":174,"name":"EthFlowOrder.OnchainData","nameLocations":["3899:12:0","3912:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":760,"src":"3899:24:0"},"referencedDeclaration":760,"src":"3899:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage_ptr","typeString":"struct EthFlowOrder.OnchainData"}},"visibility":"internal"}],"id":184,"initialValue":{"arguments":[{"expression":{"id":179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3983:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3987:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3983:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":181,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"4007:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4013:7:0","memberName":"validTo","nodeType":"MemberAccess","referencedDeclaration":782,"src":"4007:13:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":177,"name":"EthFlowOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3945:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EthFlowOrder_$865_$","typeString":"type(library EthFlowOrder)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3958:11:0","memberName":"OnchainData","nodeType":"MemberAccess","referencedDeclaration":760,"src":"3945:24:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_OnchainData_$760_storage_ptr_$","typeString":"type(struct EthFlowOrder.OnchainData storage pointer)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3945:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"nodeType":"VariableDeclarationStatement","src":"3899:131:0"},{"assignments":[187],"declarations":[{"constant":false,"id":187,"mutability":"mutable","name":"signature","nameLocation":"4065:9:0","nodeType":"VariableDeclaration","scope":242,"src":"4041:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_memory_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature"},"typeName":{"id":186,"nodeType":"UserDefinedTypeName","pathNode":{"id":185,"name":"OnchainSignature","nameLocations":["4041:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":648,"src":"4041:16:0"},"referencedDeclaration":648,"src":"4041:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_storage_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature"}},"visibility":"internal"}],"id":199,"initialValue":{"arguments":[{"expression":{"id":189,"name":"OnchainSigningScheme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4107:20:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OnchainSigningScheme_$640_$","typeString":"type(enum ICoWSwapOnchainOrders.OnchainSigningScheme)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4128:7:0","memberName":"Eip1271","nodeType":"MemberAccess","referencedDeclaration":638,"src":"4107:28:0","typeDescriptions":{"typeIdentifier":"t_enum$_OnchainSigningScheme_$640","typeString":"enum ICoWSwapOnchainOrders.OnchainSigningScheme"}},{"arguments":[{"arguments":[{"id":195,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4174:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}],"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4166:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"4166:7:0","typeDescriptions":{}}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4166:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":191,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4149:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4153:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4149:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_OnchainSigningScheme_$640","typeString":"enum ICoWSwapOnchainOrders.OnchainSigningScheme"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":188,"name":"OnchainSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"4077:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_OnchainSignature_$648_storage_ptr_$","typeString":"type(struct ICoWSwapOnchainOrders.OnchainSignature storage pointer)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4077:113:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_memory_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature memory"}},"nodeType":"VariableDeclarationStatement","src":"4041:149:0"},{"assignments":[201],"declarations":[{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"4320:4:0","nodeType":"VariableDeclaration","scope":242,"src":"4307:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"4307:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":209,"initialValue":{"arguments":[{"expression":{"id":204,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"4357:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4363:7:0","memberName":"quoteId","nodeType":"MemberAccess","referencedDeclaration":788,"src":"4357:13:0","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"id":206,"name":"onchainData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"4384:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4396:7:0","memberName":"validTo","nodeType":"MemberAccess","referencedDeclaration":759,"src":"4384:19:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":202,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4327:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4331:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4327:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4327:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4307:106:0"},{"expression":{"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":210,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4424:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":212,"name":"onchainData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"4464:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4476:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"4464:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":216,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"4516:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}],"expression":{"id":214,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"4495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4501:14:0","memberName":"toCoWSwapOrder","nodeType":"MemberAccess","referencedDeclaration":864,"src":"4495:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Data_$789_memory_ptr_$_t_contract$_IERC20_$1180_$returns$_t_struct$_Data_$977_memory_ptr_$bound_to$_t_struct$_Data_$789_memory_ptr_$","typeString":"function (struct EthFlowOrder.Data memory,contract IERC20) pure returns (struct GPv2Order.Data memory)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4495:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},{"id":218,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"4549:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_memory_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature memory"}},{"id":219,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"4572:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"},{"typeIdentifier":"t_struct$_OnchainSignature_$648_memory_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":211,"name":"broadcastOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"4436:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Data_$977_memory_ptr_$_t_struct$_OnchainSignature_$648_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,struct GPv2Order.Data memory,struct ICoWSwapOnchainOrders.OnchainSignature memory,bytes memory) returns (bytes32)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4436:150:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4424:162:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":222,"nodeType":"ExpressionStatement","src":"4424:162:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":223,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"4601:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_OnchainData_$760_storage_$","typeString":"mapping(bytes32 => struct EthFlowOrder.OnchainData storage ref)"}},"id":225,"indexExpression":{"id":224,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4608:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4601:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage","typeString":"struct EthFlowOrder.OnchainData storage ref"}},"id":226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4619:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"4601:23:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":227,"name":"EthFlowOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"4628:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EthFlowOrder_$865_$","typeString":"type(library EthFlowOrder)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4641:8:0","memberName":"NO_OWNER","nodeType":"MemberAccess","referencedDeclaration":796,"src":"4628:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4601:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":235,"nodeType":"IfStatement","src":"4597:116:0","trueBody":{"id":234,"nodeType":"Block","src":"4651:62:0","statements":[{"errorCall":{"arguments":[{"id":231,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4692:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":230,"name":"OrderIsAlreadyOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"4672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4672:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":233,"nodeType":"RevertStatement","src":"4665:37:0"}]}},{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":236,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"4723:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_OnchainData_$760_storage_$","typeString":"mapping(bytes32 => struct EthFlowOrder.OnchainData storage ref)"}},"id":238,"indexExpression":{"id":237,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4730:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4723:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage","typeString":"struct EthFlowOrder.OnchainData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":239,"name":"onchainData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"4743:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"src":"4723:31:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage","typeString":"struct EthFlowOrder.OnchainData storage ref"}},"id":241,"nodeType":"ExpressionStatement","src":"4723:31:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"3359:31:0","text":"@inheritdoc ICoWSwapEthFlow"},"functionSelector":"322bba21","id":243,"implemented":true,"kind":"function","modifiers":[],"name":"createOrder","nameLocation":"3404:11:0","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"order","nameLocation":"3443:5:0","nodeType":"VariableDeclaration","scope":243,"src":"3416:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data"},"typeName":{"id":134,"nodeType":"UserDefinedTypeName","pathNode":{"id":133,"name":"EthFlowOrder.Data","nameLocations":["3416:12:0","3429:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"3416:17:0"},"referencedDeclaration":789,"src":"3416:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}},"visibility":"internal"}],"src":"3415:34:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"orderHash","nameLocation":"3508:9:0","nodeType":"VariableDeclaration","scope":243,"src":"3500:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3500:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3499:19:0"},"scope":545,"src":"3395:1366:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[599],"body":{"id":271,"nodeType":"Block","src":"4911:127:0","statements":[{"body":{"id":269,"nodeType":"Block","src":"4969:63:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":263,"name":"orderArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5000:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Data_$789_calldata_ptr_$dyn_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata[] calldata"}},"id":265,"indexExpression":{"id":264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"5011:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5000:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},{"hexValue":"66616c7365","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5015:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":262,"name":"_invalidateOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"4983:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$789_calldata_ptr_$_t_bool_$returns$__$","typeString":"function (struct EthFlowOrder.Data calldata,bool)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4983:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"ExpressionStatement","src":"4983:38:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"4941:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":256,"name":"orderArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4945:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Data_$789_calldata_ptr_$dyn_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata[] calldata"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:0","memberName":"length","nodeType":"MemberAccess","src":"4945:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4941:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":270,"initializationExpression":{"assignments":[252],"declarations":[{"constant":false,"id":252,"mutability":"mutable","name":"i","nameLocation":"4934:1:0","nodeType":"VariableDeclaration","scope":270,"src":"4926:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"4926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":254,"initialValue":{"hexValue":"30","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4938:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4926:13:0"},"loopExpression":{"expression":{"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4964:3:0","subExpression":{"id":259,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"4964:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":261,"nodeType":"ExpressionStatement","src":"4964:3:0"},"nodeType":"ForStatement","src":"4921:111:0"}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"4767:31:0","text":"@inheritdoc ICoWSwapEthFlow"},"functionSelector":"4cb76498","id":272,"implemented":true,"kind":"function","modifiers":[],"name":"invalidateOrdersIgnoringNotAllowed","nameLocation":"4812:34:0","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"orderArray","nameLocation":"4885:10:0","nodeType":"VariableDeclaration","scope":272,"src":"4856:39:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Data_$789_calldata_ptr_$dyn_calldata_ptr","typeString":"struct EthFlowOrder.Data[]"},"typeName":{"baseType":{"id":246,"nodeType":"UserDefinedTypeName","pathNode":{"id":245,"name":"EthFlowOrder.Data","nameLocations":["4856:12:0","4869:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"4856:17:0"},"referencedDeclaration":789,"src":"4856:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}},"id":247,"nodeType":"ArrayTypeName","src":"4856:19:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Data_$789_storage_$dyn_storage_ptr","typeString":"struct EthFlowOrder.Data[]"}},"visibility":"internal"}],"src":"4846:55:0"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"4911:0:0"},"scope":545,"src":"4803:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[606],"body":{"id":284,"nodeType":"Block","src":"5146:46:0","statements":[{"expression":{"arguments":[{"id":280,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"5173:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},{"hexValue":"74727565","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5180:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":279,"name":"_invalidateOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5156:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$789_calldata_ptr_$_t_bool_$returns$__$","typeString":"function (struct EthFlowOrder.Data calldata,bool)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5156:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":283,"nodeType":"ExpressionStatement","src":"5156:29:0"}]},"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"5044:31:0","text":"@inheritdoc ICoWSwapEthFlow"},"functionSelector":"7bc41b96","id":285,"implemented":true,"kind":"function","modifiers":[],"name":"invalidateOrder","nameLocation":"5089:15:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"order","nameLocation":"5132:5:0","nodeType":"VariableDeclaration","scope":285,"src":"5105:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data"},"typeName":{"id":275,"nodeType":"UserDefinedTypeName","pathNode":{"id":274,"name":"EthFlowOrder.Data","nameLocations":["5105:12:0","5118:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"5105:17:0"},"referencedDeclaration":789,"src":"5105:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}},"visibility":"internal"}],"src":"5104:34:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"5146:0:0"},"scope":545,"src":"5080:112:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":485,"nodeType":"Block","src":"5757:4968:0","statements":[{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"cowSwapOrder","nameLocation":"5789:12:0","nodeType":"VariableDeclaration","scope":485,"src":"5767:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data"},"typeName":{"id":297,"nodeType":"UserDefinedTypeName","pathNode":{"id":296,"name":"GPv2Order.Data","nameLocations":["5767:9:0","5777:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"5767:14:0"},"referencedDeclaration":977,"src":"5767:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_storage_ptr","typeString":"struct GPv2Order.Data"}},"visibility":"internal"}],"id":303,"initialValue":{"arguments":[{"id":301,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"5838:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}],"expression":{"id":299,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"5804:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data calldata"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5810:14:0","memberName":"toCoWSwapOrder","nodeType":"MemberAccess","referencedDeclaration":864,"src":"5804:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Data_$789_memory_ptr_$_t_contract$_IERC20_$1180_$returns$_t_struct$_Data_$977_memory_ptr_$bound_to$_t_struct$_Data_$789_memory_ptr_$","typeString":"function (struct EthFlowOrder.Data memory,contract IERC20) pure returns (struct GPv2Order.Data memory)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5804:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"nodeType":"VariableDeclarationStatement","src":"5767:99:0"},{"assignments":[305],"declarations":[{"constant":false,"id":305,"mutability":"mutable","name":"orderHash","nameLocation":"5884:9:0","nodeType":"VariableDeclaration","scope":485,"src":"5876:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5876:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":310,"initialValue":{"arguments":[{"id":308,"name":"cowSwapDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"5914:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":306,"name":"cowSwapOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5896:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5909:4:0","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":1057,"src":"5896:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Data_$977_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_struct$_Data_$977_memory_ptr_$","typeString":"function (struct GPv2Order.Data memory,bytes32) pure returns (bytes32)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5876:61:0"},{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"orderData","nameLocation":"5980:9:0","nodeType":"VariableDeclaration","scope":485,"src":"5948:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData"},"typeName":{"id":314,"nodeType":"UserDefinedTypeName","pathNode":{"id":313,"name":"EthFlowOrder.OnchainData","nameLocations":["5948:12:0","5961:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":760,"src":"5948:24:0"},"referencedDeclaration":760,"src":"5948:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage_ptr","typeString":"struct EthFlowOrder.OnchainData"}},"visibility":"internal"}],"id":319,"initialValue":{"baseExpression":{"id":316,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"5992:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_OnchainData_$760_storage_$","typeString":"mapping(bytes32 => struct EthFlowOrder.OnchainData storage ref)"}},"id":318,"indexExpression":{"id":317,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5999:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5992:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage","typeString":"struct EthFlowOrder.OnchainData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5948:61:0"},{"assignments":[321],"declarations":[{"constant":false,"id":321,"mutability":"mutable","name":"isTradable","nameLocation":"6079:10:0","nodeType":"VariableDeclaration","scope":485,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"6074:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":327,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":322,"name":"orderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6092:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6102:7:0","memberName":"validTo","nodeType":"MemberAccess","referencedDeclaration":759,"src":"6092:17:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":324,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6113:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6119:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6113:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6092:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6074:54:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":328,"name":"orderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6155:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6165:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"6155:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":330,"name":"EthFlowOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6174:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EthFlowOrder_$865_$","typeString":"type(library EthFlowOrder)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6187:17:0","memberName":"INVALIDATED_OWNER","nodeType":"MemberAccess","referencedDeclaration":807,"src":"6174:30:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6155:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":333,"name":"orderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6220:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6230:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"6220:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":335,"name":"EthFlowOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6239:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EthFlowOrder_$865_$","typeString":"type(library EthFlowOrder)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6252:8:0","memberName":"NO_OWNER","nodeType":"MemberAccess","referencedDeclaration":796,"src":"6239:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6220:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6155:105:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":339,"name":"isTradable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"6277:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":340,"name":"orderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6291:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6301:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"6291:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6310:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6314:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6310:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6277:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6276:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6155:166:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"6138:370:0","trueBody":{"id":357,"nodeType":"Block","src":"6332:176:0","statements":[{"condition":{"id":348,"name":"revertOnInvalidDeletion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"6350:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":355,"nodeType":"Block","src":"6459:39:0","statements":[{"functionReturnParameters":293,"id":354,"nodeType":"Return","src":"6477:7:0"}]},"id":356,"nodeType":"IfStatement","src":"6346:152:0","trueBody":{"id":353,"nodeType":"Block","src":"6375:78:0","statements":[{"errorCall":{"arguments":[{"id":350,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6428:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":349,"name":"NotAllowedToInvalidateOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"6400:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"RevertStatement","src":"6393:45:0"}]}}]}},{"expression":{"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":359,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"6518:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_OnchainData_$760_storage_$","typeString":"mapping(bytes32 => struct EthFlowOrder.OnchainData storage ref)"}},"id":361,"indexExpression":{"id":360,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6525:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6518:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage","typeString":"struct EthFlowOrder.OnchainData storage ref"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6536:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"6518:23:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":363,"name":"EthFlowOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6544:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EthFlowOrder_$865_$","typeString":"type(library EthFlowOrder)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6557:17:0","memberName":"INVALIDATED_OWNER","nodeType":"MemberAccess","referencedDeclaration":807,"src":"6544:30:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6518:56:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":366,"nodeType":"ExpressionStatement","src":"6518:56:0"},{"assignments":[368],"declarations":[{"constant":false,"id":368,"mutability":"mutable","name":"orderUid","nameLocation":"6598:8:0","nodeType":"VariableDeclaration","scope":485,"src":"6585:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":367,"name":"bytes","nodeType":"ElementaryTypeName","src":"6585:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":374,"initialValue":{"arguments":[{"expression":{"id":371,"name":"GPv2Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"6619:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GPv2Order_$1102_$","typeString":"type(library GPv2Order)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6629:10:0","memberName":"UID_LENGTH","nodeType":"MemberAccess","referencedDeclaration":1012,"src":"6619:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6609:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":369,"name":"bytes","nodeType":"ElementaryTypeName","src":"6613:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6609:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6585:55:0"},{"expression":{"arguments":[{"id":378,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6691:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":381,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6722:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}],"id":380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6714:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"6714:7:0","typeDescriptions":{}}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6714:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":383,"name":"cowSwapOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6741:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6754:7:0","memberName":"validTo","nodeType":"MemberAccess","referencedDeclaration":964,"src":"6741:20:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":375,"name":"orderUid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"6650:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6659:18:0","memberName":"packOrderUidParams","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"6650:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$_t_uint32_$returns$__$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes32,address,uint32) pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6650:121:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"ExpressionStatement","src":"6650:121:0"},{"condition":{"id":387,"name":"isTradable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"6840:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":399,"nodeType":"Block","src":"6985:252:0","statements":[{"eventCall":{"arguments":[{"id":394,"name":"orderUid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"7205:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":395,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7215:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7219:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7215:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":393,"name":"OrderRefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"7193:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7193:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"EmitStatement","src":"7188:38:0"}]},"id":400,"nodeType":"IfStatement","src":"6836:401:0","trueBody":{"id":392,"nodeType":"Block","src":"6852:127:0","statements":[{"eventCall":{"arguments":[{"id":389,"name":"orderUid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"6959:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":388,"name":"OrderInvalidation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6941:17:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6941:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"EmitStatement","src":"6936:32:0"}]}},{"assignments":[402],"declarations":[{"constant":false,"id":402,"mutability":"mutable","name":"filledAmount","nameLocation":"7255:12:0","nodeType":"VariableDeclaration","scope":485,"src":"7247:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"arguments":[{"id":405,"name":"orderUid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"7301:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":403,"name":"cowSwapSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"7270:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICoWSwapSettlement_$685","typeString":"contract ICoWSwapSettlement"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7288:12:0","memberName":"filledAmount","nodeType":"MemberAccess","referencedDeclaration":678,"src":"7270:30:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) external returns (uint256)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7270:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7247:63:0"},{"assignments":[409],"declarations":[{"constant":false,"id":409,"mutability":"mutable","name":"refundAmount","nameLocation":"8612:12:0","nodeType":"VariableDeclaration","scope":485,"src":"8604:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"8604:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":410,"nodeType":"VariableDeclarationStatement","src":"8604:20:0"},{"id":435,"nodeType":"UncheckedBlock","src":"8634:1280:0","statements":[{"assignments":[412],"declarations":[{"constant":false,"id":412,"mutability":"mutable","name":"feeRefundAmount","nameLocation":"9383:15:0","nodeType":"VariableDeclaration","scope":435,"src":"9375:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"9375:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":425,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":413,"name":"cowSwapOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9401:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9414:9:0","memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":968,"src":"9401:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":415,"name":"cowSwapOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9444:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9457:9:0","memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":968,"src":"9444:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":417,"name":"filledAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"9469:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9444:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9443:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":420,"name":"cowSwapOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9505:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9518:10:0","memberName":"sellAmount","nodeType":"MemberAccess","referencedDeclaration":960,"src":"9505:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9443:85:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9442:87:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9401:128:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9375:154:0"},{"expression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":426,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"9784:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":427,"name":"cowSwapOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9815:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9828:10:0","memberName":"sellAmount","nodeType":"MemberAccess","referencedDeclaration":960,"src":"9815:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":429,"name":"filledAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"9857:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9815:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":431,"name":"feeRefundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"9888:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9815:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9784:119:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ExpressionStatement","src":"9784:119:0"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":438,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10030:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}],"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10022:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"10022:7:0","typeDescriptions":{}}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10022:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10036:7:0","memberName":"balance","nodeType":"MemberAccess","src":"10022:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":441,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"10046:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10022:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"IfStatement","src":"10018:255:0","trueBody":{"id":463,"nodeType":"Block","src":"10060:213:0","statements":[{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"withdrawAmount","nameLocation":"10082:14:0","nodeType":"VariableDeclaration","scope":463,"src":"10074:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"10074:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":445,"nodeType":"VariableDeclarationStatement","src":"10074:22:0"},{"id":456,"nodeType":"UncheckedBlock","src":"10110:96:0","statements":[{"expression":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":446,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"10138:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"10155:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"arguments":[{"id":450,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10178:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoWSwapEthFlow_$545","typeString":"contract CoWSwapEthFlow"}],"id":449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:0","typeDescriptions":{}}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10184:7:0","memberName":"balance","nodeType":"MemberAccess","src":"10170:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10155:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10138:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":455,"nodeType":"ExpressionStatement","src":"10138:53:0"}]},{"expression":{"arguments":[{"id":460,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"10247:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":457,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"10219:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWrappedNativeToken_$702","typeString":"contract IWrappedNativeToken"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10238:8:0","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":701,"src":"10219:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10219:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"10219:43:0"}]}},{"assignments":[466,null],"declarations":[{"constant":false,"id":466,"mutability":"mutable","name":"success","nameLocation":"10555:7:0","nodeType":"VariableDeclaration","scope":485,"src":"10550:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":465,"name":"bool","nodeType":"ElementaryTypeName","src":"10550:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":477,"initialValue":{"arguments":[{"hexValue":"","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10632:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":469,"name":"orderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"10576:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10586:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"10576:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10568:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10568:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10568:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10593:4:0","memberName":"call","nodeType":"MemberAccess","src":"10568:29:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":473,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"10605:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10568:50:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10568:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10549:95:0"},{"condition":{"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10658:8:0","subExpression":{"id":478,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"10659:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":484,"nodeType":"IfStatement","src":"10654:65:0","trueBody":{"id":483,"nodeType":"Block","src":"10668:51:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"EthTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"10689:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10689:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":482,"nodeType":"RevertStatement","src":"10682:26:0"}]}}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"5198:433:0","text":"@dev Performs the same tasks as `invalidateOrder` (see documentation in `ICoWSwapEthFlow`), but also allows the\n caller to ignore the revert condition `NotAllowedToInvalidateOrder`. Instead of reverting, it stops execution\n without causing any state change.\n @param order order to be invalidated.\n @param revertOnInvalidDeletion controls whether the function call should revert or just return."},"id":486,"implemented":true,"kind":"function","modifiers":[],"name":"_invalidateOrder","nameLocation":"5645:16:0","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"order","nameLocation":"5698:5:0","nodeType":"VariableDeclaration","scope":486,"src":"5671:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data"},"typeName":{"id":288,"nodeType":"UserDefinedTypeName","pathNode":{"id":287,"name":"EthFlowOrder.Data","nameLocations":["5671:12:0","5684:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"5671:17:0"},"referencedDeclaration":789,"src":"5671:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"revertOnInvalidDeletion","nameLocation":"5718:23:0","nodeType":"VariableDeclaration","scope":486,"src":"5713:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":290,"name":"bool","nodeType":"ElementaryTypeName","src":"5713:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5661:86:0"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":545,"src":"5636:5089:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[616,945],"body":{"id":543,"nodeType":"Block","src":"10936:610:0","statements":[{"assignments":[503],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"orderData","nameLocation":"11136:9:0","nodeType":"VariableDeclaration","scope":543,"src":"11104:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData"},"typeName":{"id":502,"nodeType":"UserDefinedTypeName","pathNode":{"id":501,"name":"EthFlowOrder.OnchainData","nameLocations":["11104:12:0","11117:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":760,"src":"11104:24:0"},"referencedDeclaration":760,"src":"11104:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage_ptr","typeString":"struct EthFlowOrder.OnchainData"}},"visibility":"internal"}],"id":507,"initialValue":{"baseExpression":{"id":504,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"11148:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_OnchainData_$760_storage_$","typeString":"mapping(bytes32 => struct EthFlowOrder.OnchainData storage ref)"}},"id":506,"indexExpression":{"id":505,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"11155:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11148:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_storage","typeString":"struct EthFlowOrder.OnchainData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11104:61:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":508,"name":"orderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"11193:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11203:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"11193:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":510,"name":"EthFlowOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"11212:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EthFlowOrder_$865_$","typeString":"type(library EthFlowOrder)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11225:8:0","memberName":"NO_OWNER","nodeType":"MemberAccess","referencedDeclaration":796,"src":"11212:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11193:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11192:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":514,"name":"orderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"11251:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11261:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":756,"src":"11251:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":516,"name":"EthFlowOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"11270:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EthFlowOrder_$865_$","typeString":"type(library EthFlowOrder)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11283:17:0","memberName":"INVALIDATED_OWNER","nodeType":"MemberAccess","referencedDeclaration":807,"src":"11270:30:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11251:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11250:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11192:109:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":521,"name":"orderData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"11376:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainData_$760_memory_ptr","typeString":"struct EthFlowOrder.OnchainData memory"}},"id":522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11386:7:0","memberName":"validTo","nodeType":"MemberAccess","referencedDeclaration":759,"src":"11376:17:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":523,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11397:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11403:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"11397:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11376:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11375:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11192:221:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":541,"nodeType":"Block","src":"11484:56:0","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11517:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":535,"name":"uint32","nodeType":"ElementaryTypeName","src":"11517:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11512:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11512:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11525:3:0","memberName":"max","nodeType":"MemberAccess","src":"11512:16:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11505:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":532,"name":"bytes4","nodeType":"ElementaryTypeName","src":"11505:6:0","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11505:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":498,"id":540,"nodeType":"Return","src":"11498:31:0"}]},"id":542,"nodeType":"IfStatement","src":"11175:365:0","trueBody":{"id":531,"nodeType":"Block","src":"11424:54:0","statements":[{"expression":{"expression":{"id":528,"name":"GPv2EIP1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"11445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GPv2EIP1271_$934_$","typeString":"type(library GPv2EIP1271)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11457:10:0","memberName":"MAGICVALUE","nodeType":"MemberAccess","referencedDeclaration":933,"src":"11445:22:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":498,"id":530,"nodeType":"Return","src":"11438:29:0"}]}}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"10731:31:0","text":"@inheritdoc ICoWSwapEthFlow"},"functionSelector":"1626ba7e","id":544,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"10776:16:0","nodeType":"FunctionDefinition","overrides":{"id":495,"nodeType":"OverrideSpecifier","overrides":[{"id":493,"name":"EIP1271Verifier","nameLocations":["10873:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":946,"src":"10873:15:0"},{"id":494,"name":"ICoWSwapEthFlow","nameLocations":["10890:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":633,"src":"10890:15:0"}],"src":"10864:42:0"},"parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"orderHash","nameLocation":"10801:9:0","nodeType":"VariableDeclaration","scope":544,"src":"10793:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10793:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":544,"src":"10812:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":490,"name":"bytes","nodeType":"ElementaryTypeName","src":"10812:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10792:33:0"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":544,"src":"10924:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":496,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10924:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10923:8:0"},"scope":545,"src":"10767:779:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":546,"src":"387:11161:0","usedErrors":[565,568,571,574,579,582,810]}],"src":"46:11503:0"},"id":0},"src/interfaces/ICoWSwapEthFlow.sol":{"ast":{"absolutePath":"src/interfaces/ICoWSwapEthFlow.sol","exportedSymbols":{"EthFlowOrder":[865],"GPv2Order":[1102],"ICoWSwapEthFlow":[633],"ICoWSwapEthFlowEvents":[557],"IERC20":[1180]},"id":634,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":547,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:1"},{"absolutePath":"src/libraries/EthFlowOrder.sol","file":"../libraries/EthFlowOrder.sol","id":548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":634,"sourceUnit":866,"src":"69:39:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ICoWSwapEthFlowEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"110:77:1","text":"@title CoW Swap ETH Flow Event Interface\n @author CoW Swap Developers"},"fullyImplemented":true,"id":557,"linearizedBaseContracts":[557],"name":"ICoWSwapEthFlowEvents","nameLocation":"197:21:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"225:555:1","text":"@dev Event emitted to notify that an order was refunded. Note that this event is not fired every time the order\n is invalidated (even though the user receives all unspent ETH back). This is because we want to differenciate\n the case where the user invalidates a valid order and when the user receives back the funds from an expired\n order.\n @param orderUid CoW Swap's unique order identifier of the order that has been invalidated (and refunded).\n @param refunder The address that triggered the order refund."},"eventSelector":"195271068a288191e4b265c641a56b9832919f69e9e7d6c2f31ba40278aeb85a","id":556,"name":"OrderRefund","nameLocation":"791:11:1","nodeType":"EventDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"indexed":false,"mutability":"mutable","name":"orderUid","nameLocation":"809:8:1","nodeType":"VariableDeclaration","scope":556,"src":"803:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":551,"name":"bytes","nodeType":"ElementaryTypeName","src":"803:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":554,"indexed":true,"mutability":"mutable","name":"refunder","nameLocation":"835:8:1","nodeType":"VariableDeclaration","scope":556,"src":"819:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"802:42:1"},"src":"785:60:1"}],"scope":634,"src":"187:660:1","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":559,"name":"ICoWSwapEthFlowEvents","nameLocations":["949:21:1"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"949:21:1"},"id":560,"nodeType":"InheritanceSpecifier","src":"949:21:1"}],"canonicalName":"ICoWSwapEthFlow","contractDependencies":[],"contractKind":"interface","documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"849:71:1","text":"@title CoW Swap ETH Flow Interface\n @author CoW Swap Developers"},"fullyImplemented":false,"id":633,"linearizedBaseContracts":[633,557],"name":"ICoWSwapEthFlow","nameLocation":"930:15:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"977:136:1","text":"@dev Error thrown when trying to create a new order whose order hash is the same as an order hash that was\n already assigned."},"errorSelector":"56a1d2b2","id":565,"name":"OrderIsAlreadyOwned","nameLocation":"1124:19:1","nodeType":"ErrorDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"orderHash","nameLocation":"1152:9:1","nodeType":"VariableDeclaration","scope":565,"src":"1144:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1144:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1143:19:1"},"src":"1118:45:1"},{"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"1169:98:1","text":"@dev Error thrown when trying to create an order that would be expired at the time of creation"},"errorSelector":"89bb2601","id":568,"name":"OrderIsAlreadyExpired","nameLocation":"1278:21:1","nodeType":"ErrorDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"1299:2:1"},"src":"1272:30:1"},{"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"1308:113:1","text":"@dev Error thrown when trying to create an order without sending the expected amount of ETH to this contract."},"errorSelector":"8b6ebb4d","id":571,"name":"IncorrectEthAmount","nameLocation":"1432:18:1","nodeType":"ErrorDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"1450:2:1"},"src":"1426:27:1"},{"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"1459:76:1","text":"@dev Error thrown when trying to create an order with a sell amount == 0"},"errorSelector":"eaec5c9d","id":574,"name":"NotAllowedZeroSellAmount","nameLocation":"1546:24:1","nodeType":"ErrorDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"1570:2:1"},"src":"1540:33:1"},{"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"1579:73:1","text":"@dev Error thrown if trying to invalidate an order while not allowed."},"errorSelector":"f8cc70ce","id":579,"name":"NotAllowedToInvalidateOrder","nameLocation":"1663:27:1","nodeType":"ErrorDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"orderHash","nameLocation":"1699:9:1","nodeType":"VariableDeclaration","scope":579,"src":"1691:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1691:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1690:19:1"},"src":"1657:53:1"},{"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"1716:68:1","text":"@dev Error thrown when unsuccessfully sending ETH to an address."},"errorSelector":"6d963f88","id":582,"name":"EthTransferFailed","nameLocation":"1795:17:1","nodeType":"ErrorDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"1812:2:1"},"src":"1789:26:1"},{"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"1821:455:1","text":"@dev Function that creates and broadcasts an ETH flow order that sells native ETH. The order is paid for when\n the caller sends out the transaction. The caller takes ownership of the new order.\n @param order The data describing the order to be created. See [`EthFlowOrder.Data`] for extra information on\n each parameter.\n @return orderHash The hash of the CoW Swap order that is created to settle the new ETH order."},"functionSelector":"322bba21","id":591,"implemented":false,"kind":"function","modifiers":[],"name":"createOrder","nameLocation":"2290:11:1","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"order","nameLocation":"2329:5:1","nodeType":"VariableDeclaration","scope":591,"src":"2302:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data"},"typeName":{"id":585,"nodeType":"UserDefinedTypeName","pathNode":{"id":584,"name":"EthFlowOrder.Data","nameLocations":["2302:12:1","2315:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"2302:17:1"},"referencedDeclaration":789,"src":"2302:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}},"visibility":"internal"}],"src":"2301:34:1"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"orderHash","nameLocation":"2394:9:1","nodeType":"VariableDeclaration","scope":591,"src":"2386:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2386:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2385:19:1"},"scope":633,"src":"2281:124:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"2411:421:1","text":"@dev Marks existing ETH-flow orders as invalid and, for each order, refunds the ETH that hasn't been traded yet.\n The function call will not revert, if some orders are not refundable. It will silently ignore these orders.\n Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\n @param orderArray Array of orders to be invalidated."},"functionSelector":"4cb76498","id":599,"implemented":false,"kind":"function","modifiers":[],"name":"invalidateOrdersIgnoringNotAllowed","nameLocation":"2846:34:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"orderArray","nameLocation":"2919:10:1","nodeType":"VariableDeclaration","scope":599,"src":"2890:39:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Data_$789_calldata_ptr_$dyn_calldata_ptr","typeString":"struct EthFlowOrder.Data[]"},"typeName":{"baseType":{"id":594,"nodeType":"UserDefinedTypeName","pathNode":{"id":593,"name":"EthFlowOrder.Data","nameLocations":["2890:12:1","2903:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"2890:17:1"},"referencedDeclaration":789,"src":"2890:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}},"id":595,"nodeType":"ArrayTypeName","src":"2890:19:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Data_$789_storage_$dyn_storage_ptr","typeString":"struct EthFlowOrder.Data[]"}},"visibility":"internal"}],"src":"2880:55:1"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"2944:0:1"},"scope":633,"src":"2837:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2951:275:1","text":"@dev Marks an existing ETH-flow order as invalid and refunds the ETH that hasn't been traded yet.\n Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\n @param order Order to be invalidated."},"functionSelector":"7bc41b96","id":606,"implemented":false,"kind":"function","modifiers":[],"name":"invalidateOrder","nameLocation":"3240:15:1","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"order","nameLocation":"3283:5:1","nodeType":"VariableDeclaration","scope":606,"src":"3256:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_calldata_ptr","typeString":"struct EthFlowOrder.Data"},"typeName":{"id":602,"nodeType":"UserDefinedTypeName","pathNode":{"id":601,"name":"EthFlowOrder.Data","nameLocations":["3256:12:1","3269:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"3256:17:1"},"referencedDeclaration":789,"src":"3256:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}},"visibility":"internal"}],"src":"3255:34:1"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"3298:0:1"},"scope":633,"src":"3231:68:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3305:859:1","text":"@dev EIP1271-compliant onchain signature verification function.\n This function is used by the CoW Swap settlement contract to determine if an order that is signed with an\n EIP1271 signature is valid. As this contract has approved the vault relayer contract, a valid signature for an\n order means that the order can be traded on CoW Swap.\n @param orderHash Hash of the order to be signed. This is the EIP-712 signing hash for the specified order as\n defined in the CoW Swap settlement contract.\n @param signature Signature byte array. This parameter is unused since as all information needed to verify if an\n order is already available onchain.\n @return magicValue Either the EIP-1271 \"magic value\" indicating success (0x1626ba7e) or a different value\n indicating failure (0xffffffff)."},"functionSelector":"1626ba7e","id":616,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"4178:16:1","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"orderHash","nameLocation":"4203:9:1","nodeType":"VariableDeclaration","scope":616,"src":"4195:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4195:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"signature","nameLocation":"4227:9:1","nodeType":"VariableDeclaration","scope":616,"src":"4214:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4194:43:1"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"magicValue","nameLocation":"4292:10:1","nodeType":"VariableDeclaration","scope":616,"src":"4285:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":613,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4285:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4284:19:1"},"scope":633,"src":"4169:135:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"4310:116:1","text":"@dev This function reads the  chain's native token balance of this contract (e.g., ETH for mainnet) and converts"},"functionSelector":"4c84c1c8","id":620,"implemented":false,"kind":"function","modifiers":[],"name":"wrapAll","nameLocation":"4502:7:1","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"4509:2:1"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"4520:0:1"},"scope":633,"src":"4493:28:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"4527:281:1","text":"@dev This function takes the specified amount of the chain's native token (e.g., ETH for mainnet) stored by this\n contract and converts it to its wrapped version (e.g., WETH).\n @param amount The amount of native tokens to convert to wrapped native tokens."},"functionSelector":"ea598cb0","id":626,"implemented":false,"kind":"function","modifiers":[],"name":"wrap","nameLocation":"4822:4:1","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"amount","nameLocation":"4835:6:1","nodeType":"VariableDeclaration","scope":626,"src":"4827:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"4827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4826:16:1"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[],"src":"4851:0:1"},"scope":633,"src":"4813:39:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"4858:267:1","text":"@dev This function takes the specified amount of the chain's wrapped native token (e.g., WETH for mainnet)\n and converts it to its unwrapped version (e.g., ETH).\n @param amount The amount of wrapped native tokens to convert to native tokens."},"functionSelector":"de0e9a3e","id":632,"implemented":false,"kind":"function","modifiers":[],"name":"unwrap","nameLocation":"5139:6:1","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"amount","nameLocation":"5154:6:1","nodeType":"VariableDeclaration","scope":632,"src":"5146:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5146:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5145:16:1"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"5170:0:1"},"scope":633,"src":"5130:41:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":634,"src":"920:4253:1","usedErrors":[565,568,571,574,579,582]}],"src":"46:5128:1"},"id":1},"src/interfaces/ICoWSwapOnchainOrders.sol":{"ast":{"absolutePath":"src/interfaces/ICoWSwapOnchainOrders.sol","exportedSymbols":{"GPv2Order":[1102],"ICoWSwapOnchainOrders":[667],"IERC20":[1180]},"id":668,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":635,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:2"},{"absolutePath":"src/vendored/GPv2Order.sol","file":"../vendored/GPv2Order.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":1103,"src":"69:35:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ICoWSwapOnchainOrders","contractDependencies":[],"contractKind":"interface","documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"106:84:2","text":"@title CoW Swap Onchain Order Creator Interface\n @author CoW Swap Developers"},"fullyImplemented":true,"id":667,"linearizedBaseContracts":[667],"name":"ICoWSwapOnchainOrders","nameLocation":"200:21:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ICoWSwapOnchainOrders.OnchainSigningScheme","id":640,"members":[{"id":638,"name":"Eip1271","nameLocation":"365:7:2","nodeType":"EnumValue","src":"365:7:2"},{"id":639,"name":"PreSign","nameLocation":"382:7:2","nodeType":"EnumValue","src":"382:7:2"}],"name":"OnchainSigningScheme","nameLocation":"334:20:2","nodeType":"EnumDefinition","src":"329:66:2"},{"canonicalName":"ICoWSwapOnchainOrders.OnchainSignature","id":648,"members":[{"constant":false,"id":644,"mutability":"mutable","name":"scheme","nameLocation":"624:6:2","nodeType":"VariableDeclaration","scope":648,"src":"603:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OnchainSigningScheme_$640","typeString":"enum ICoWSwapOnchainOrders.OnchainSigningScheme"},"typeName":{"id":643,"nodeType":"UserDefinedTypeName","pathNode":{"id":642,"name":"OnchainSigningScheme","nameLocations":["603:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":640,"src":"603:20:2"},"referencedDeclaration":640,"src":"603:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_OnchainSigningScheme_$640","typeString":"enum ICoWSwapOnchainOrders.OnchainSigningScheme"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"data","nameLocation":"700:4:2","nodeType":"VariableDeclaration","scope":648,"src":"694:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":646,"name":"bytes","nodeType":"ElementaryTypeName","src":"694:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"OnchainSignature","nameLocation":"512:16:2","nodeType":"StructDefinition","scope":667,"src":"505:206:2","visibility":"public"},{"anonymous":false,"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"717:1466:2","text":"@dev Event emitted to broadcast an order onchain.\n @param sender The user who triggered the creation of the order. Note that this address does *not* need to be\n the actual owner of the order and does not need to be related to the order or signature in any way.\n For example, if a smart contract creates orders on behalf of the user, then the sender would be the user who\n triggers the creation of the order, while the actual owner of the order would be the smart contract that\n creates it.\n @param order Information on the order that is created in this transacion. The order is expected to be a valid\n order for the CoW Swap settlement contract and contain all information needed to settle it in a batch.\n @param signature The signature that can be used to verify the newly created order. Note that it is always\n possible to recover the owner of the order from a valid signature.\n @param data Any extra data that should be passed along with the order. This will be used by the services that\n collects onchain orders and no specific encoding is enforced on this field. It is supposed to encode extra\n information that is not included in the order data so that it can be passed along when decoding an onchain\n order. As an example, a contract that creates orders on behalf of a user could set a different expiration date\n than the one specified in the order."},"eventSelector":"cf5f9de2984132265203b5c335b25727702ca77262ff622e136baa7362bf1da9","id":661,"name":"OrderPlacement","nameLocation":"2194:14:2","nodeType":"EventDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2234:6:2","nodeType":"VariableDeclaration","scope":661,"src":"2218:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"2218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"indexed":false,"mutability":"mutable","name":"order","nameLocation":"2265:5:2","nodeType":"VariableDeclaration","scope":661,"src":"2250:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data"},"typeName":{"id":653,"nodeType":"UserDefinedTypeName","pathNode":{"id":652,"name":"GPv2Order.Data","nameLocations":["2250:9:2","2260:4:2"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"2250:14:2"},"referencedDeclaration":977,"src":"2250:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_storage_ptr","typeString":"struct GPv2Order.Data"}},"visibility":"internal"},{"constant":false,"id":657,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"2297:9:2","nodeType":"VariableDeclaration","scope":661,"src":"2280:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_memory_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"OnchainSignature","nameLocations":["2280:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":648,"src":"2280:16:2"},"referencedDeclaration":648,"src":"2280:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_storage_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"2322:4:2","nodeType":"VariableDeclaration","scope":661,"src":"2316:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":658,"name":"bytes","nodeType":"ElementaryTypeName","src":"2316:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2208:124:2"},"src":"2188:145:2"},{"anonymous":false,"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"2339:170:2","text":"@dev Event emitted to notify that an order was invalidated.\n @param orderUid CoW Swap's unique order identifier of the order that has been invalidated."},"eventSelector":"b8bad102ac8bbacfef31ff1c906ec6d951c230b4dce750bb0376b812ad35852a","id":666,"name":"OrderInvalidation","nameLocation":"2520:17:2","nodeType":"EventDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"indexed":false,"mutability":"mutable","name":"orderUid","nameLocation":"2544:8:2","nodeType":"VariableDeclaration","scope":666,"src":"2538:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":663,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2537:16:2"},"src":"2514:40:2"}],"scope":668,"src":"190:2366:2","usedErrors":[]}],"src":"46:2511:2"},"id":2},"src/interfaces/ICoWSwapSettlement.sol":{"ast":{"absolutePath":"src/interfaces/ICoWSwapSettlement.sol","exportedSymbols":{"ICoWSwapSettlement":[685]},"id":686,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":669,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ICoWSwapSettlement","contractDependencies":[],"contractKind":"interface","documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"69:209:3","text":"@title CoW Swap Settlement Contract Interface\n @author CoW Swap Developers\n @dev This interface collects the functions of the CoW Swap settlement contract that are used by the ETH flow\n contract."},"fullyImplemented":false,"id":685,"linearizedBaseContracts":[685],"name":"ICoWSwapSettlement","nameLocation":"288:18:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"313:494:3","text":"@dev Map each user order by UID to the amount that has been filled so\n far. If this amount is larger than or equal to the amount traded in the\n order (amount sold for sell orders, amount bought for buy orders) then\n the order cannot be traded anymore. If the order is fill or kill, then\n this value is only used to determine whether the order has already been\n executed.\n @param orderUid The uinique identifier to use to retrieve the filled amount."},"functionSelector":"2479fb6e","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"filledAmount","nameLocation":"821:12:3","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"orderUid","nameLocation":"847:8:3","nodeType":"VariableDeclaration","scope":678,"src":"834:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":672,"name":"bytes","nodeType":"ElementaryTypeName","src":"834:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"833:23:3"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"875:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"874:9:3"},"scope":685,"src":"812:72:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"890:229:3","text":"@dev The address of the vault relayer: the contract that handles withdrawing tokens from the user to the\n settlement contract. A user who wants to sell a token on CoW Swap must approve this contract to spend the token."},"functionSelector":"9b552cc2","id":684,"implemented":false,"kind":"function","modifiers":[],"name":"vaultRelayer","nameLocation":"1133:12:3","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"1145:2:3"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":684,"src":"1166:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"1166:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1165:9:3"},"scope":685,"src":"1124:51:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":686,"src":"278:899:3","usedErrors":[]}],"src":"46:1132:3"},"id":3},"src/interfaces/IWrappedNativeToken.sol":{"ast":{"absolutePath":"src/interfaces/IWrappedNativeToken.sol","exportedSymbols":{"IERC20":[1180],"IWrappedNativeToken":[702]},"id":703,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":687,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:4"},{"absolutePath":"src/vendored/IERC20.sol","file":"../vendored/IERC20.sol","id":688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":703,"sourceUnit":1181,"src":"69:32:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":690,"name":"IERC20","nameLocations":["219:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"219:6:4"},"id":691,"nodeType":"InheritanceSpecifier","src":"219:6:4"}],"canonicalName":"IWrappedNativeToken","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"103:83:4","text":"@title CoW Swap Wrapped Native Token Interface\n @author CoW Swap Developers"},"fullyImplemented":false,"id":702,"linearizedBaseContracts":[702,1180],"name":"IWrappedNativeToken","nameLocation":"196:19:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"232:68:4","text":"@dev Deposit native token in exchange for wrapped netive tokens."},"functionSelector":"d0e30db0","id":695,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"314:7:4","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"321:2:4"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"340:0:4"},"scope":702,"src":"305:36:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"347:144:4","text":"@dev Burn wrapped native tokens in exchange for native tokens.\n @param amount Amount of wrapped tokens to exchange for native tokens."},"functionSelector":"2e1a7d4d","id":701,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"505:8:4","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"amount","nameLocation":"522:6:4","nodeType":"VariableDeclaration","scope":701,"src":"514:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"513:16:4"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[],"src":"538:0:4"},"scope":702,"src":"496:43:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":703,"src":"186:355:4","usedErrors":[]}],"src":"46:496:4"},"id":4},"src/libraries/CoWSwapEip712.sol":{"ast":{"absolutePath":"src/libraries/CoWSwapEip712.sol","exportedSymbols":{"CoWSwapEip712":[748]},"id":749,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":704,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:5"},{"abstract":false,"baseContracts":[],"canonicalName":"CoWSwapEip712","contractDependencies":[],"contractKind":"library","documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"69:242:5","text":"@title CoW Swap EIP-712 Encoding Library\n @author CoW Swap Developers\n @dev The code in this contract was largely taken from:\n <https://raw.githubusercontent.com/cowprotocol/contracts/v1.0.0/src/contracts/mixins/GPv2Signing.sol>"},"fullyImplemented":true,"id":748,"linearizedBaseContracts":[748],"name":"CoWSwapEip712","nameLocation":"319:13:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"339:78:5","text":"@dev The EIP-712 domain type hash used for computing the domain separator."},"id":711,"mutability":"constant","name":"DOMAIN_TYPE_HASH","nameLocation":"447:16:5","nodeType":"VariableDeclaration","scope":748,"src":"422:169:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"422:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"497:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":708,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"474:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"474:117:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"598:73:5","text":"@dev The EIP-712 domain name used for computing the domain separator."},"id":717,"mutability":"constant","name":"DOMAIN_NAME","nameLocation":"701:11:5","nodeType":"VariableDeclaration","scope":748,"src":"676:67:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"676:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"476e6f7369732050726f746f636f6c","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"725:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c","typeString":"literal_string \"Gnosis Protocol\""},"value":"Gnosis Protocol"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c","typeString":"literal_string \"Gnosis Protocol\""}],"id":714,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"715:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"715:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"750:76:5","text":"@dev The EIP-712 domain version used for computing the domain separator."},"id":723,"mutability":"constant","name":"DOMAIN_VERSION","nameLocation":"856:14:5","nodeType":"VariableDeclaration","scope":748,"src":"831:57:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"831:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"7632","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"883:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf","typeString":"literal_string \"v2\""},"value":"v2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf","typeString":"literal_string \"v2\""}],"id":720,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"873:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"873:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":746,"nodeType":"Block","src":"1490:513:5","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"chainId","nameLocation":"1600:7:5","nodeType":"VariableDeclaration","scope":746,"src":"1592:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":733,"nodeType":"VariableDeclarationStatement","src":"1592:15:5"},{"AST":{"nodeType":"YulBlock","src":"1682:44:5","statements":[{"nodeType":"YulAssignment","src":"1696:20:5","value":{"arguments":[],"functionName":{"name":"chainid","nodeType":"YulIdentifier","src":"1707:7:5"},"nodeType":"YulFunctionCall","src":"1707:9:5"},"variableNames":[{"name":"chainId","nodeType":"YulIdentifier","src":"1696:7:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":732,"isOffset":false,"isSlot":false,"src":"1696:7:5","valueSize":1}],"id":734,"nodeType":"InlineAssembly","src":"1673:53:5"},{"expression":{"arguments":[{"arguments":[{"id":738,"name":"DOMAIN_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"1814:16:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":739,"name":"DOMAIN_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"1852:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":740,"name":"DOMAIN_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"1885:14:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":741,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"1921:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":742,"name":"cowSwapAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"1950:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":736,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1782:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1786:6:5","memberName":"encode","nodeType":"MemberAccess","src":"1782:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1782:200:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":735,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1755:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1755:241:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":730,"id":745,"nodeType":"Return","src":"1736:260:5"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"895:481:5","text":"@dev Computes the EIP-712 domain separator of the CoW Swap settlement contract on the current network.\n @param cowSwapAddress The address of the CoW Swap settlement contract for which to compute the domain separator.\n Note that there are no checks to verify that the input address points to an actual contract.\n @return The domain separator of the settlement contract for the input address as computed by the settlement\n contract internally."},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"1390:15:5","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"cowSwapAddress","nameLocation":"1414:14:5","nodeType":"VariableDeclaration","scope":747,"src":"1406:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:24:5"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"1477:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1477:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1476:9:5"},"scope":748,"src":"1381:622:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":749,"src":"311:1694:5","usedErrors":[]}],"src":"46:1960:5"},"id":5},"src/libraries/EthFlowOrder.sol":{"ast":{"absolutePath":"src/libraries/EthFlowOrder.sol","exportedSymbols":{"EthFlowOrder":[865],"GPv2Order":[1102],"IERC20":[1180]},"id":866,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":750,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:6"},{"absolutePath":"src/vendored/GPv2Order.sol","file":"../vendored/GPv2Order.sol","id":751,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":866,"sourceUnit":1103,"src":"69:35:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/vendored/IERC20.sol","file":"../vendored/IERC20.sol","id":752,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":866,"sourceUnit":1181,"src":"105:32:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EthFlowOrder","contractDependencies":[],"contractKind":"library","documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"139:75:6","text":"@title CoW Swap ETH Flow Order Library\n @author CoW Swap Developers"},"fullyImplemented":true,"id":865,"linearizedBaseContracts":[865],"name":"EthFlowOrder","nameLocation":"222:12:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EthFlowOrder.OnchainData","id":760,"members":[{"constant":false,"id":756,"mutability":"mutable","name":"owner","nameLocation":"445:5:6","nodeType":"VariableDeclaration","scope":760,"src":"437:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"validTo","nameLocation":"547:7:6","nodeType":"VariableDeclaration","scope":760,"src":"540:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":758,"name":"uint32","nodeType":"ElementaryTypeName","src":"540:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"OnchainData","nameLocation":"347:11:6","nodeType":"StructDefinition","scope":865,"src":"340:221:6","visibility":"public"},{"canonicalName":"EthFlowOrder.Data","id":789,"members":[{"constant":false,"id":764,"mutability":"mutable","name":"buyToken","nameLocation":"989:8:6","nodeType":"VariableDeclaration","scope":789,"src":"982:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"},"typeName":{"id":763,"nodeType":"UserDefinedTypeName","pathNode":{"id":762,"name":"IERC20","nameLocations":["982:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"982:6:6"},"referencedDeclaration":1180,"src":"982:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"receiver","nameLocation":"1223:8:6","nodeType":"VariableDeclaration","scope":789,"src":"1215:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"sellAmount","nameLocation":"1325:10:6","nodeType":"VariableDeclaration","scope":789,"src":"1317:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"buyAmount","nameLocation":"1447:9:6","nodeType":"VariableDeclaration","scope":789,"src":"1439:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1439:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"appData","nameLocation":"1663:7:6","nodeType":"VariableDeclaration","scope":789,"src":"1655:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1655:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"feeAmount","nameLocation":"1826:9:6","nodeType":"VariableDeclaration","scope":789,"src":"1818:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"validTo","nameLocation":"1980:7:6","nodeType":"VariableDeclaration","scope":789,"src":"1973:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":781,"name":"uint32","nodeType":"ElementaryTypeName","src":"1973:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"partiallyFillable","nameLocation":"2097:17:6","nodeType":"VariableDeclaration","scope":789,"src":"2092:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":784,"name":"bool","nodeType":"ElementaryTypeName","src":"2092:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"quoteId","nameLocation":"2457:7:6","nodeType":"VariableDeclaration","scope":789,"src":"2451:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":787,"name":"int64","nodeType":"ElementaryTypeName","src":"2451:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"name":"Data","nameLocation":"640:4:6","nodeType":"StructDefinition","scope":865,"src":"633:1838:6","visibility":"public"},{"constant":true,"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"2477:91:6","text":"@dev An order that is owned by this address is an order that has not yet been assigned."},"id":796,"mutability":"constant","name":"NO_OWNER","nameLocation":"2599:8:6","nodeType":"VariableDeclaration","scope":865,"src":"2573:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"2573:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2618:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2610:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:6","typeDescriptions":{}}},"id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":true,"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"2627:159:6","text":"@dev An order that is owned by this address is an order that has been invalidated. Note that this address cannot\n be directly used to create orders."},"id":807,"mutability":"constant","name":"INVALIDATED_OWNER","nameLocation":"2817:17:6","nodeType":"VariableDeclaration","scope":865,"src":"2791:72:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"2791:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"expression":{"arguments":[{"id":803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":802,"name":"uint160","nodeType":"ElementaryTypeName","src":"2850:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":801,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2845:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2845:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2859:3:6","memberName":"max","nodeType":"MemberAccess","src":"2845:17:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2837:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"2837:7:6","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2837:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"2870:114:6","text":"@dev Error returned if the receiver of the ETH flow order is unspecified (`GPv2Order.RECEIVER_SAME_AS_OWNER`)."},"errorSelector":"efc9ccdf","id":810,"name":"ReceiverMustBeSet","nameLocation":"2995:17:6","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"3012:2:6"},"src":"2989:26:6"},{"body":{"id":863,"nodeType":"Block","src":"3579:2185:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":823,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3593:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data memory"}},"id":824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3599:8:6","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":767,"src":"3593:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":825,"name":"GPv2Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3611:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GPv2Order_$1102_$","typeString":"type(library GPv2Order)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3621:22:6","memberName":"RECEIVER_SAME_AS_OWNER","nodeType":"MemberAccess","referencedDeclaration":1008,"src":"3611:32:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3593:50:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":832,"nodeType":"IfStatement","src":"3589:547:6","trueBody":{"id":831,"nodeType":"Block","src":"3645:491:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":828,"name":"ReceiverMustBeSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"4106:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"RevertStatement","src":"4099:26:6"}]}},{"expression":{"arguments":[{"id":835,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"4358:18:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"}},{"expression":{"id":836,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4414:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data memory"}},"id":837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4420:8:6","memberName":"buyToken","nodeType":"MemberAccess","referencedDeclaration":764,"src":"4414:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"}},{"expression":{"id":838,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4465:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data memory"}},"id":839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4471:8:6","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":767,"src":"4465:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":840,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4517:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data memory"}},"id":841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4523:10:6","memberName":"sellAmount","nodeType":"MemberAccess","referencedDeclaration":770,"src":"4517:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":842,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4573:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data memory"}},"id":843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4579:9:6","memberName":"buyAmount","nodeType":"MemberAccess","referencedDeclaration":773,"src":"4573:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5042:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":845,"name":"uint32","nodeType":"ElementaryTypeName","src":"5042:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5037:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5037:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5050:3:6","memberName":"max","nodeType":"MemberAccess","src":"5037:16:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":849,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5089:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data memory"}},"id":850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5095:7:6","memberName":"appData","nodeType":"MemberAccess","referencedDeclaration":776,"src":"5089:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":851,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5139:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data memory"}},"id":852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5145:9:6","memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":779,"src":"5139:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":853,"name":"GPv2Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5420:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GPv2Order_$1102_$","typeString":"type(library GPv2Order)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5430:9:6","memberName":"KIND_SELL","nodeType":"MemberAccess","referencedDeclaration":985,"src":"5420:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":855,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5473:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data memory"}},"id":856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5479:17:6","memberName":"partiallyFillable","nodeType":"MemberAccess","referencedDeclaration":785,"src":"5473:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":857,"name":"GPv2Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5624:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GPv2Order_$1102_$","typeString":"type(library GPv2Order)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5634:13:6","memberName":"BALANCE_ERC20","nodeType":"MemberAccess","referencedDeclaration":993,"src":"5624:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":859,"name":"GPv2Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5693:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GPv2Order_$1102_$","typeString":"type(library GPv2Order)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5703:13:6","memberName":"BALANCE_ERC20","nodeType":"MemberAccess","referencedDeclaration":993,"src":"5693:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":833,"name":"GPv2Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"4326:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GPv2Order_$1102_$","typeString":"type(library GPv2Order)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4336:4:6","memberName":"Data","nodeType":"MemberAccess","referencedDeclaration":977,"src":"4326:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Data_$977_storage_ptr_$","typeString":"type(struct GPv2Order.Data storage pointer)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4326:1431:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"functionReturnParameters":822,"id":862,"nodeType":"Return","src":"4307:1450:6"}]},"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"3021:409:6","text":"@dev Transforms an ETH flow order into the CoW Swap order that can be settled by the ETH flow contract.\n @param order The ETH flow order to be converted.\n @param wrappedNativeToken The address of the wrapped native token for the current network (e.g., WETH for\n Ethereum mainet).\n @return The CoW Swap order data that represents the user order in the ETH flow contract."},"id":864,"implemented":true,"kind":"function","modifiers":[],"name":"toCoWSwapOrder","nameLocation":"3444:14:6","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"order","nameLocation":"3471:5:6","nodeType":"VariableDeclaration","scope":864,"src":"3459:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_memory_ptr","typeString":"struct EthFlowOrder.Data"},"typeName":{"id":813,"nodeType":"UserDefinedTypeName","pathNode":{"id":812,"name":"Data","nameLocations":["3459:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"3459:4:6"},"referencedDeclaration":789,"src":"3459:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$789_storage_ptr","typeString":"struct EthFlowOrder.Data"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"wrappedNativeToken","nameLocation":"3485:18:6","nodeType":"VariableDeclaration","scope":864,"src":"3478:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"},"typeName":{"id":816,"nodeType":"UserDefinedTypeName","pathNode":{"id":815,"name":"IERC20","nameLocations":["3478:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"3478:6:6"},"referencedDeclaration":1180,"src":"3478:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"3458:46:6"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"3552:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data"},"typeName":{"id":820,"nodeType":"UserDefinedTypeName","pathNode":{"id":819,"name":"GPv2Order.Data","nameLocations":["3552:9:6","3562:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"3552:14:6"},"referencedDeclaration":977,"src":"3552:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_storage_ptr","typeString":"struct GPv2Order.Data"}},"visibility":"internal"}],"src":"3551:23:6"},"scope":865,"src":"3435:2329:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":866,"src":"214:5552:6","usedErrors":[810]}],"src":"46:5721:6"},"id":6},"src/mixins/CoWSwapOnchainOrders.sol":{"ast":{"absolutePath":"src/mixins/CoWSwapOnchainOrders.sol","exportedSymbols":{"CoWSwapEip712":[748],"CoWSwapOnchainOrders":[927],"GPv2Order":[1102],"ICoWSwapOnchainOrders":[667],"IERC20":[1180]},"id":928,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":867,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:7"},{"absolutePath":"src/vendored/GPv2Order.sol","file":"../vendored/GPv2Order.sol","id":868,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":928,"sourceUnit":1103,"src":"69:35:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/interfaces/ICoWSwapOnchainOrders.sol","file":"../interfaces/ICoWSwapOnchainOrders.sol","id":869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":928,"sourceUnit":668,"src":"105:49:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/libraries/CoWSwapEip712.sol","file":"../libraries/CoWSwapEip712.sol","id":870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":928,"sourceUnit":749,"src":"155:40:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":872,"name":"ICoWSwapOnchainOrders","nameLocations":["318:21:7"],"nodeType":"IdentifierPath","referencedDeclaration":667,"src":"318:21:7"},"id":873,"nodeType":"InheritanceSpecifier","src":"318:21:7"}],"canonicalName":"CoWSwapOnchainOrders","contractDependencies":[],"contractKind":"contract","documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"197:88:7","text":"@title CoW Swap Onchain Order Creator Event Emitter\n @author CoW Swap Developers"},"fullyImplemented":true,"id":927,"linearizedBaseContracts":[927,667],"name":"CoWSwapOnchainOrders","nameLocation":"294:20:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":877,"libraryName":{"id":874,"name":"GPv2Order","nameLocations":["352:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"352:9:7"},"nodeType":"UsingForDirective","src":"346:35:7","typeName":{"id":876,"nodeType":"UserDefinedTypeName","pathNode":{"id":875,"name":"GPv2Order.Data","nameLocations":["366:9:7","376:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"366:14:7"},"referencedDeclaration":977,"src":"366:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_storage_ptr","typeString":"struct GPv2Order.Data"}}},{"global":false,"id":880,"libraryName":{"id":878,"name":"GPv2Order","nameLocations":["392:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"392:9:7"},"nodeType":"UsingForDirective","src":"386:26:7","typeName":{"id":879,"name":"bytes","nodeType":"ElementaryTypeName","src":"406:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":false,"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"418:67:7","text":"@dev The domain separator for the CoW Swap settlement contract."},"id":883,"mutability":"immutable","name":"cowSwapDomainSeparator","nameLocation":"517:22:7","nodeType":"VariableDeclaration","scope":927,"src":"490:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"490:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":896,"nodeType":"Block","src":"734:120:7","statements":[{"expression":{"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":889,"name":"cowSwapDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"744:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":892,"name":"settlementContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"812:25:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":890,"name":"CoWSwapEip712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"769:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoWSwapEip712_$748_$","typeString":"type(library CoWSwapEip712)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"783:15:7","memberName":"domainSeparator","nodeType":"MemberAccess","referencedDeclaration":747,"src":"769:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bytes32_$","typeString":"function (address) view returns (bytes32)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"769:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"744:103:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":895,"nodeType":"ExpressionStatement","src":"744:103:7"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"546:136:7","text":"@param settlementContractAddress The address of CoW Swap's settlement contract on the chain where this contract\n is deployed."},"id":897,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"settlementContractAddress","nameLocation":"707:25:7","nodeType":"VariableDeclaration","scope":897,"src":"699:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"698:35:7"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"734:0:7"},"scope":927,"src":"687:167:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":925,"nodeType":"Block","src":"1389:119:7","statements":[{"eventCall":{"arguments":[{"id":914,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1419:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1427:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},{"id":916,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1434:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_memory_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature memory"}},{"id":917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"1445:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"},{"typeIdentifier":"t_struct$_OnchainSignature_$648_memory_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":913,"name":"OrderPlacement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"1404:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_Data_$977_memory_ptr_$_t_struct$_OnchainSignature_$648_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,struct GPv2Order.Data memory,struct ICoWSwapOnchainOrders.OnchainSignature memory,bytes memory)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1404:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"EmitStatement","src":"1399:51:7"},{"expression":{"arguments":[{"id":922,"name":"cowSwapDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"1478:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":920,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1467:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:7","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":1057,"src":"1467:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Data_$977_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_struct$_Data_$977_memory_ptr_$","typeString":"function (struct GPv2Order.Data memory,bytes32) pure returns (bytes32)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1467:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":912,"id":924,"nodeType":"Return","src":"1460:41:7"}]},"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"860:336:7","text":"@dev Emits an event with all information needed to execute an order onchain and returns the corresponding order\n hash.\n See [`ICoWSwapOnchainOrders.OrderPlacement`] for details on the meaning of each parameter.\n @return The EIP-712 hash of the order data as computed by the CoW Swap settlement contract."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"broadcastOrder","nameLocation":"1210:14:7","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"sender","nameLocation":"1242:6:7","nodeType":"VariableDeclaration","scope":926,"src":"1234:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"order","nameLocation":"1280:5:7","nodeType":"VariableDeclaration","scope":926,"src":"1258:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data"},"typeName":{"id":902,"nodeType":"UserDefinedTypeName","pathNode":{"id":901,"name":"GPv2Order.Data","nameLocations":["1258:9:7","1268:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"1258:14:7"},"referencedDeclaration":977,"src":"1258:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_storage_ptr","typeString":"struct GPv2Order.Data"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"signature","nameLocation":"1319:9:7","nodeType":"VariableDeclaration","scope":926,"src":"1295:33:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_memory_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature"},"typeName":{"id":905,"nodeType":"UserDefinedTypeName","pathNode":{"id":904,"name":"OnchainSignature","nameLocations":["1295:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":648,"src":"1295:16:7"},"referencedDeclaration":648,"src":"1295:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_OnchainSignature_$648_storage_ptr","typeString":"struct ICoWSwapOnchainOrders.OnchainSignature"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"data","nameLocation":"1351:4:7","nodeType":"VariableDeclaration","scope":926,"src":"1338:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":907,"name":"bytes","nodeType":"ElementaryTypeName","src":"1338:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1224:137:7"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"1380:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1380:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1379:9:7"},"scope":927,"src":"1201:307:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":928,"src":"285:1225:7","usedErrors":[]}],"src":"46:1465:7"},"id":7},"src/vendored/GPv2EIP1271.sol":{"ast":{"absolutePath":"src/vendored/GPv2EIP1271.sol","exportedSymbols":{"EIP1271Verifier":[946],"GPv2EIP1271":[934]},"id":947,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":929,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"46:21:8"},{"abstract":false,"baseContracts":[],"canonicalName":"GPv2EIP1271","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":934,"linearizedBaseContracts":[934],"name":"GPv2EIP1271","nameLocation":"299:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"317:205:8","text":"@dev Value returned by a call to `isValidSignature` if the signature\n was verified successfully. The value is defined in EIP-1271 as:\n bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))"},"id":933,"mutability":"constant","name":"MAGICVALUE","nameLocation":"552:10:8","nodeType":"VariableDeclaration","scope":934,"src":"527:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":931,"name":"bytes4","nodeType":"ElementaryTypeName","src":"527:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783136323662613765","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"565:10:8","typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"}],"scope":947,"src":"291:287:8","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"EIP1271Verifier","contractDependencies":[],"contractKind":"interface","documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"580:308:8","text":"@title EIP1271 Interface\n @dev Standardized interface for an implementation of smart contract\n signatures as described in EIP-1271. The code that follows is identical to\n the code in the standard with the exception of formatting and syntax\n changes to adapt the code to our Solidity version."},"fullyImplemented":false,"id":946,"linearizedBaseContracts":[946],"name":"EIP1271Verifier","nameLocation":"898:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"920:445:8","text":"@dev Should return whether the signature provided is valid for the\n provided data\n @param _hash      Hash of the data to be signed\n @param _signature Signature byte array associated with _data\n MUST return the bytes4 magic value 0x1626ba7e when function passes.\n MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for\n solc > 0.5)\n MUST allow external calls"},"functionSelector":"1626ba7e","id":945,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"1379:16:8","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"_hash","nameLocation":"1404:5:8","nodeType":"VariableDeclaration","scope":945,"src":"1396:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1396:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"_signature","nameLocation":"1424:10:8","nodeType":"VariableDeclaration","scope":945,"src":"1411:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":939,"name":"bytes","nodeType":"ElementaryTypeName","src":"1411:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1395:40:8"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"magicValue","nameLocation":"1490:10:8","nodeType":"VariableDeclaration","scope":945,"src":"1483:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":942,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1483:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1482:19:8"},"scope":946,"src":"1370:132:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":947,"src":"888:616:8","usedErrors":[]}],"src":"46:1459:8"},"id":8},"src/vendored/GPv2Order.sol":{"ast":{"absolutePath":"src/vendored/GPv2Order.sol","exportedSymbols":{"GPv2Order":[1102],"IERC20":[1180]},"id":1103,"license":"LGPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":948,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"291:21:9"},{"absolutePath":"src/vendored/IERC20.sol","file":"./IERC20.sol","id":949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":1181,"src":"314:22:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"GPv2Order","contractDependencies":[],"contractKind":"library","documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"338:74:9","text":"@title Gnosis Protocol v2 Order Library\n @author Gnosis Developers"},"fullyImplemented":true,"id":1102,"linearizedBaseContracts":[1102],"name":"GPv2Order","nameLocation":"420:9:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GPv2Order.Data","id":977,"members":[{"constant":false,"id":953,"mutability":"mutable","name":"sellToken","nameLocation":"613:9:9","nodeType":"VariableDeclaration","scope":977,"src":"606:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"},"typeName":{"id":952,"nodeType":"UserDefinedTypeName","pathNode":{"id":951,"name":"IERC20","nameLocations":["606:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"606:6:9"},"referencedDeclaration":1180,"src":"606:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"buyToken","nameLocation":"639:8:9","nodeType":"VariableDeclaration","scope":977,"src":"632:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"},"typeName":{"id":955,"nodeType":"UserDefinedTypeName","pathNode":{"id":954,"name":"IERC20","nameLocations":["632:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"632:6:9"},"referencedDeclaration":1180,"src":"632:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1180","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"receiver","nameLocation":"665:8:9","nodeType":"VariableDeclaration","scope":977,"src":"657:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"sellAmount","nameLocation":"691:10:9","nodeType":"VariableDeclaration","scope":977,"src":"683:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"buyAmount","nameLocation":"719:9:9","nodeType":"VariableDeclaration","scope":977,"src":"711:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"validTo","nameLocation":"745:7:9","nodeType":"VariableDeclaration","scope":977,"src":"738:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":963,"name":"uint32","nodeType":"ElementaryTypeName","src":"738:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"appData","nameLocation":"770:7:9","nodeType":"VariableDeclaration","scope":977,"src":"762:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"762:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"feeAmount","nameLocation":"795:9:9","nodeType":"VariableDeclaration","scope":977,"src":"787:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"kind","nameLocation":"822:4:9","nodeType":"VariableDeclaration","scope":977,"src":"814:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"814:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"partiallyFillable","nameLocation":"841:17:9","nodeType":"VariableDeclaration","scope":977,"src":"836:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":971,"name":"bool","nodeType":"ElementaryTypeName","src":"836:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"sellTokenBalance","nameLocation":"876:16:9","nodeType":"VariableDeclaration","scope":977,"src":"868:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"buyTokenBalance","nameLocation":"910:15:9","nodeType":"VariableDeclaration","scope":977,"src":"902:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"902:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Data","nameLocation":"591:4:9","nodeType":"StructDefinition","scope":1102,"src":"584:348:9","visibility":"public"},{"constant":true,"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"938:706:9","text":"@dev The order EIP-712 type hash for the [`GPv2Order.Data`] struct.\n This value is pre-computed from the following expression:\n ```\n keccak256(\n     \"Order(\" +\n         \"address sellToken,\" +\n         \"address buyToken,\" +\n         \"address receiver,\" +\n         \"uint256 sellAmount,\" +\n         \"uint256 buyAmount,\" +\n         \"uint32 validTo,\" +\n         \"bytes32 appData,\" +\n         \"uint256 feeAmount,\" +\n         \"string kind,\" +\n         \"bool partiallyFillable\" +\n         \"string sellTokenBalance\" +\n         \"string buyTokenBalance\" +\n     \")\"\n )\n ```"},"id":981,"mutability":"constant","name":"TYPE_HASH","nameLocation":"1675:9:9","nodeType":"VariableDeclaration","scope":1102,"src":"1649:115:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1649:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"d5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e489","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1695:69:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1ee2332c9d1f470041c2e791d2aa1df157372e3d8288315979b9a788ce3c47d","typeString":"literal_string hex\"d5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e489\""}},"visibility":"internal"},{"constant":true,"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"1771:334:9","text":"@dev The marker value for a sell order for computing the order struct\n hash. This allows the EIP-712 compatible wallets to display a\n descriptive string for the order kind (instead of 0 or 1).\n This value is pre-computed from the following expression:\n ```\n keccak256(\"sell\")\n ```"},"id":985,"mutability":"constant","name":"KIND_SELL","nameLocation":"2136:9:9","nodeType":"VariableDeclaration","scope":1102,"src":"2110:115:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2156:69:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d83c277d2b4310d0abad2927552752ab5748dbaa5aa198b508bf497a83c4f87","typeString":"literal_string hex\"f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee346775\""}},"visibility":"internal"},{"constant":true,"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"2232:219:9","text":"@dev The OrderKind marker value for a buy order for computing the order\n struct hash.\n This value is pre-computed from the following expression:\n ```\n keccak256(\"buy\")\n ```"},"id":989,"mutability":"constant","name":"KIND_BUY","nameLocation":"2482:8:9","nodeType":"VariableDeclaration","scope":1102,"src":"2456:114:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2456:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2501:69:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d21ad098b26e19ae00a678f44d40b94e22fb051a6d61a0451a70e766f12c62","typeString":"literal_string hex\"6ed88e868af0a1983e3886d5f3e95a2fafbd6c3450bc229e27342283dc429ccc\""}},"visibility":"internal"},{"constant":true,"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"2577:240:9","text":"@dev The TokenBalance marker value for using direct ERC20 balances for\n computing the order struct hash.\n This value is pre-computed from the following expression:\n ```\n keccak256(\"erc20\")\n ```"},"id":993,"mutability":"constant","name":"BALANCE_ERC20","nameLocation":"2848:13:9","nodeType":"VariableDeclaration","scope":1102,"src":"2822:119:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2872:69:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_475b4d124a6a7c7a289b8fc1d11ab5a1c1768431efddb4526a16617ba7fdef42","typeString":"literal_string hex\"5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9\""}},"visibility":"internal"},{"constant":true,"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"2948:305:9","text":"@dev The TokenBalance marker value for using Balancer Vault external\n balances (in order to re-use Vault ERC20 approvals) for computing the\n order struct hash.\n This value is pre-computed from the following expression:\n ```\n keccak256(\"external\")\n ```"},"id":997,"mutability":"constant","name":"BALANCE_EXTERNAL","nameLocation":"3284:16:9","nodeType":"VariableDeclaration","scope":1102,"src":"3258:122:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3258:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"abee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea0632","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"3311:69:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a0e146b8cbac06890281ce116953575d14ed9d7d6207510b0ac9e51d3bf98f9","typeString":"literal_string hex\"abee3b73373acd583a130924aad6dc38cfdc44ba0555ba94ce2ff63980ea0632\""}},"visibility":"internal"},{"constant":true,"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"3387:254:9","text":"@dev The TokenBalance marker value for using Balancer Vault internal\n balances for computing the order struct hash.\n This value is pre-computed from the following expression:\n ```\n keccak256(\"internal\")\n ```"},"id":1001,"mutability":"constant","name":"BALANCE_INTERNAL","nameLocation":"3672:16:9","nodeType":"VariableDeclaration","scope":1102,"src":"3646:122:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3646:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"3699:69:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc9c14cd0db0fe454c86b6c491d0bc53722ad53b3a80adb0038d671565694147","typeString":"literal_string hex\"4ac99ace14ee0a5ef932dc609df0943ab7ac16b7583634612f8dc35a4289a6ce\""}},"visibility":"internal"},{"constant":true,"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"3775:242:9","text":"@dev Marker address used to indicate that the receiver of the trade\n proceeds should the owner of the order.\n This is chosen to be `address(0)` for gas efficiency as it is expected\n to be the most common case."},"id":1008,"mutability":"constant","name":"RECEIVER_SAME_AS_OWNER","nameLocation":"4048:22:9","nodeType":"VariableDeclaration","scope":1102,"src":"4022:61:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"4022:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4081:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4073:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"4073:7:9","typeDescriptions":{}}},"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4073:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":true,"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"4090:55:9","text":"@dev The byte length of an order unique identifier."},"id":1012,"mutability":"constant","name":"UID_LENGTH","nameLocation":"4176:10:9","nodeType":"VariableDeclaration","scope":1102,"src":"4150:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"4150:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3536","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4189:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},"visibility":"internal"},{"body":{"id":1039,"nodeType":"Block","src":"4596:159:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1023,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4610:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4616:8:9","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":958,"src":"4610:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1025,"name":"RECEIVER_SAME_AS_OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4628:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4610:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1037,"nodeType":"Block","src":"4699:50:9","statements":[{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1032,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4713:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1033,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4724:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data memory"}},"id":1034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4730:8:9","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":958,"src":"4724:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4713:25:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1036,"nodeType":"ExpressionStatement","src":"4713:25:9"}]},"id":1038,"nodeType":"IfStatement","src":"4606:143:9","trueBody":{"id":1031,"nodeType":"Block","src":"4652:41:9","statements":[{"expression":{"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1027,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4666:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1028,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"4677:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4666:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1030,"nodeType":"ExpressionStatement","src":"4666:16:9"}]}}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"4198:266:9","text":"@dev Returns the actual receiver for an order. This function checks\n whether or not the [`receiver`] field uses the marker value to indicate\n it is the same as the order owner.\n @return receiver The actual receiver of trade proceeds."},"id":1040,"implemented":true,"kind":"function","modifiers":[],"name":"actualReceiver","nameLocation":"4478:14:9","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"order","nameLocation":"4505:5:9","nodeType":"VariableDeclaration","scope":1040,"src":"4493:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data"},"typeName":{"id":1015,"nodeType":"UserDefinedTypeName","pathNode":{"id":1014,"name":"Data","nameLocations":["4493:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"4493:4:9"},"referencedDeclaration":977,"src":"4493:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_storage_ptr","typeString":"struct GPv2Order.Data"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"owner","nameLocation":"4520:5:9","nodeType":"VariableDeclaration","scope":1040,"src":"4512:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4512:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4492:34:9"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"receiver","nameLocation":"4582:8:9","nodeType":"VariableDeclaration","scope":1040,"src":"4574:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"4574:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4573:18:9"},"scope":1102,"src":"4469:286:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1056,"nodeType":"Block","src":"5170:1460:9","statements":[{"assignments":[1052],"declarations":[{"constant":false,"id":1052,"mutability":"mutable","name":"structHash","nameLocation":"5188:10:9","nodeType":"VariableDeclaration","scope":1056,"src":"5180:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5180:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1053,"nodeType":"VariableDeclarationStatement","src":"5180:18:9"},{"AST":{"nodeType":"YulBlock","src":"5603:225:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5617:31:9","value":{"arguments":[{"name":"order","nodeType":"YulIdentifier","src":"5638:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"5645:2:9","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5634:3:9"},"nodeType":"YulFunctionCall","src":"5634:14:9"},"variables":[{"name":"dataStart","nodeType":"YulTypedName","src":"5621:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5661:28:9","value":{"arguments":[{"name":"dataStart","nodeType":"YulIdentifier","src":"5679:9:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5673:5:9"},"nodeType":"YulFunctionCall","src":"5673:16:9"},"variables":[{"name":"temp","nodeType":"YulTypedName","src":"5665:4:9","type":""}]},{"expression":{"arguments":[{"name":"dataStart","nodeType":"YulIdentifier","src":"5709:9:9"},{"name":"TYPE_HASH","nodeType":"YulIdentifier","src":"5720:9:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5702:6:9"},"nodeType":"YulFunctionCall","src":"5702:28:9"},"nodeType":"YulExpressionStatement","src":"5702:28:9"},{"nodeType":"YulAssignment","src":"5743:39:9","value":{"arguments":[{"name":"dataStart","nodeType":"YulIdentifier","src":"5767:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5778:3:9","type":"","value":"416"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5757:9:9"},"nodeType":"YulFunctionCall","src":"5757:25:9"},"variableNames":[{"name":"structHash","nodeType":"YulIdentifier","src":"5743:10:9"}]},{"expression":{"arguments":[{"name":"dataStart","nodeType":"YulIdentifier","src":"5802:9:9"},{"name":"temp","nodeType":"YulIdentifier","src":"5813:4:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5795:6:9"},"nodeType":"YulFunctionCall","src":"5795:23:9"},"nodeType":"YulExpressionStatement","src":"5795:23:9"}]},"evmVersion":"london","externalReferences":[{"declaration":981,"isOffset":false,"isSlot":false,"src":"5720:9:9","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"5638:5:9","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"5743:10:9","valueSize":1}],"id":1054,"nodeType":"InlineAssembly","src":"5594:234:9"},{"AST":{"nodeType":"YulBlock","src":"6332:292:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6346:36:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6377:4:9","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6371:5:9"},"nodeType":"YulFunctionCall","src":"6371:11:9"},"variables":[{"name":"freeMemoryPointer","nodeType":"YulTypedName","src":"6350:17:9","type":""}]},{"expression":{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"6402:17:9"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"6421:10:9","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6395:6:9"},"nodeType":"YulFunctionCall","src":"6395:37:9"},"nodeType":"YulExpressionStatement","src":"6395:37:9"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"6456:17:9"},{"kind":"number","nodeType":"YulLiteral","src":"6475:1:9","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6452:3:9"},"nodeType":"YulFunctionCall","src":"6452:25:9"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"6479:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6445:6:9"},"nodeType":"YulFunctionCall","src":"6445:50:9"},"nodeType":"YulExpressionStatement","src":"6445:50:9"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"6519:17:9"},{"kind":"number","nodeType":"YulLiteral","src":"6538:2:9","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6515:3:9"},"nodeType":"YulFunctionCall","src":"6515:26:9"},{"name":"structHash","nodeType":"YulIdentifier","src":"6543:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6508:6:9"},"nodeType":"YulFunctionCall","src":"6508:46:9"},"nodeType":"YulExpressionStatement","src":"6508:46:9"},{"nodeType":"YulAssignment","src":"6567:47:9","value":{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"6592:17:9"},{"kind":"number","nodeType":"YulLiteral","src":"6611:2:9","type":"","value":"66"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6582:9:9"},"nodeType":"YulFunctionCall","src":"6582:32:9"},"variableNames":[{"name":"orderDigest","nodeType":"YulIdentifier","src":"6567:11:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1046,"isOffset":false,"isSlot":false,"src":"6479:15:9","valueSize":1},{"declaration":1049,"isOffset":false,"isSlot":false,"src":"6567:11:9","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"6543:10:9","valueSize":1}],"id":1055,"nodeType":"InlineAssembly","src":"6323:301:9"}]},"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"4761:274:9","text":"@dev Return the EIP-712 signing hash for the specified order.\n @param order The order to compute the EIP-712 signing hash for.\n @param domainSeparator The EIP-712 domain separator to use.\n @return orderDigest The 32 byte EIP-712 struct hash."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"5049:4:9","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"order","nameLocation":"5066:5:9","nodeType":"VariableDeclaration","scope":1057,"src":"5054:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_memory_ptr","typeString":"struct GPv2Order.Data"},"typeName":{"id":1043,"nodeType":"UserDefinedTypeName","pathNode":{"id":1042,"name":"Data","nameLocations":["5054:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"5054:4:9"},"referencedDeclaration":977,"src":"5054:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$977_storage_ptr","typeString":"struct GPv2Order.Data"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"domainSeparator","nameLocation":"5081:15:9","nodeType":"VariableDeclaration","scope":1057,"src":"5073:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5073:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5053:44:9"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"orderDigest","nameLocation":"5153:11:9","nodeType":"VariableDeclaration","scope":1057,"src":"5145:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5145:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5144:21:9"},"scope":1102,"src":"5040:1590:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"7425:1581:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1070,"name":"orderUid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"7443:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7452:6:9","memberName":"length","nodeType":"MemberAccess","src":"7443:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1072,"name":"UID_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"7462:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7443:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"475076323a2075696420627566666572206f766572666c6f77","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7474:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf3ee9bc7b6748f422a1179174dd87601433141f626f9880fbda28f36ca64306","typeString":"literal_string \"GPv2: uid buffer overflow\""},"value":"GPv2: uid buffer overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf3ee9bc7b6748f422a1179174dd87601433141f626f9880fbda28f36ca64306","typeString":"literal_string \"GPv2: uid buffer overflow\""}],"id":1069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7435:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"ExpressionStatement","src":"7435:67:9"},{"AST":{"nodeType":"YulBlock","src":"8846:154:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"orderUid","nodeType":"YulIdentifier","src":"8871:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"8881:2:9","type":"","value":"56"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8867:3:9"},"nodeType":"YulFunctionCall","src":"8867:17:9"},{"name":"validTo","nodeType":"YulIdentifier","src":"8886:7:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8860:6:9"},"nodeType":"YulFunctionCall","src":"8860:34:9"},"nodeType":"YulExpressionStatement","src":"8860:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"orderUid","nodeType":"YulIdentifier","src":"8918:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"8928:2:9","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8914:3:9"},"nodeType":"YulFunctionCall","src":"8914:17:9"},{"name":"owner","nodeType":"YulIdentifier","src":"8933:5:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8907:6:9"},"nodeType":"YulFunctionCall","src":"8907:32:9"},"nodeType":"YulExpressionStatement","src":"8907:32:9"},{"expression":{"arguments":[{"arguments":[{"name":"orderUid","nodeType":"YulIdentifier","src":"8963:8:9"},{"kind":"number","nodeType":"YulLiteral","src":"8973:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8959:3:9"},"nodeType":"YulFunctionCall","src":"8959:17:9"},{"name":"orderDigest","nodeType":"YulIdentifier","src":"8978:11:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8952:6:9"},"nodeType":"YulFunctionCall","src":"8952:38:9"},"nodeType":"YulExpressionStatement","src":"8952:38:9"}]},"evmVersion":"london","externalReferences":[{"declaration":1062,"isOffset":false,"isSlot":false,"src":"8978:11:9","valueSize":1},{"declaration":1060,"isOffset":false,"isSlot":false,"src":"8871:8:9","valueSize":1},{"declaration":1060,"isOffset":false,"isSlot":false,"src":"8918:8:9","valueSize":1},{"declaration":1060,"isOffset":false,"isSlot":false,"src":"8963:8:9","valueSize":1},{"declaration":1064,"isOffset":false,"isSlot":false,"src":"8933:5:9","valueSize":1},{"declaration":1066,"isOffset":false,"isSlot":false,"src":"8886:7:9","valueSize":1}],"id":1077,"nodeType":"InlineAssembly","src":"8837:163:9"}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"6636:629:9","text":"@dev Packs order UID parameters into the specified memory location. The\n result is equivalent to `abi.encodePacked(...)` with the difference that\n it allows re-using the memory for packing the order UID.\n This function reverts if the order UID buffer is not the correct size.\n @param orderUid The buffer pack the order UID parameters into.\n @param orderDigest The EIP-712 struct digest derived from the order\n parameters.\n @param owner The address of the user who owns this order.\n @param validTo The epoch time at which the order will stop being valid."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"packOrderUidParams","nameLocation":"7279:18:9","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"orderUid","nameLocation":"7320:8:9","nodeType":"VariableDeclaration","scope":1079,"src":"7307:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1059,"name":"bytes","nodeType":"ElementaryTypeName","src":"7307:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"orderDigest","nameLocation":"7346:11:9","nodeType":"VariableDeclaration","scope":1079,"src":"7338:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7338:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"owner","nameLocation":"7375:5:9","nodeType":"VariableDeclaration","scope":1079,"src":"7367:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"7367:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"validTo","nameLocation":"7397:7:9","nodeType":"VariableDeclaration","scope":1079,"src":"7390:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1065,"name":"uint32","nodeType":"ElementaryTypeName","src":"7390:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"7297:113:9"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"7425:0:9"},"scope":1102,"src":"7270:1736:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"9958:423:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1092,"name":"orderUid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9976:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9985:6:9","memberName":"length","nodeType":"MemberAccess","src":"9976:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1094,"name":"UID_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"9995:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9976:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"475076323a20696e76616c696420756964","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10007:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_96cbd5fd5eabba1486f168d59ae2dbb1a2f5bac68a6f58a978e23efd002fed90","typeString":"literal_string \"GPv2: invalid uid\""},"value":"GPv2: invalid uid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96cbd5fd5eabba1486f168d59ae2dbb1a2f5bac68a6f58a978e23efd002fed90","typeString":"literal_string \"GPv2: invalid uid\""}],"id":1091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9968:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9968:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1098,"nodeType":"ExpressionStatement","src":"9968:59:9"},{"AST":{"nodeType":"YulBlock","src":"10166:209:9","statements":[{"nodeType":"YulAssignment","src":"10180:44:9","value":{"arguments":[{"name":"orderUid.offset","nodeType":"YulIdentifier","src":"10208:15:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10195:12:9"},"nodeType":"YulFunctionCall","src":"10195:29:9"},"variableNames":[{"name":"orderDigest","nodeType":"YulIdentifier","src":"10180:11:9"}]},{"nodeType":"YulAssignment","src":"10237:56:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10250:2:9","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"orderUid.offset","nodeType":"YulIdentifier","src":"10271:15:9"},{"kind":"number","nodeType":"YulLiteral","src":"10288:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10267:3:9"},"nodeType":"YulFunctionCall","src":"10267:24:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10254:12:9"},"nodeType":"YulFunctionCall","src":"10254:38:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10246:3:9"},"nodeType":"YulFunctionCall","src":"10246:47:9"},"variableNames":[{"name":"owner","nodeType":"YulIdentifier","src":"10237:5:9"}]},{"nodeType":"YulAssignment","src":"10306:59:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10321:3:9","type":"","value":"224"},{"arguments":[{"arguments":[{"name":"orderUid.offset","nodeType":"YulIdentifier","src":"10343:15:9"},{"kind":"number","nodeType":"YulLiteral","src":"10360:2:9","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10339:3:9"},"nodeType":"YulFunctionCall","src":"10339:24:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10326:12:9"},"nodeType":"YulFunctionCall","src":"10326:38:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10317:3:9"},"nodeType":"YulFunctionCall","src":"10317:48:9"},"variableNames":[{"name":"validTo","nodeType":"YulIdentifier","src":"10306:7:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1085,"isOffset":false,"isSlot":false,"src":"10180:11:9","valueSize":1},{"declaration":1082,"isOffset":true,"isSlot":false,"src":"10208:15:9","suffix":"offset","valueSize":1},{"declaration":1082,"isOffset":true,"isSlot":false,"src":"10271:15:9","suffix":"offset","valueSize":1},{"declaration":1082,"isOffset":true,"isSlot":false,"src":"10343:15:9","suffix":"offset","valueSize":1},{"declaration":1087,"isOffset":false,"isSlot":false,"src":"10237:5:9","valueSize":1},{"declaration":1089,"isOffset":false,"isSlot":false,"src":"10306:7:9","valueSize":1}],"id":1099,"nodeType":"InlineAssembly","src":"10157:218:9"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"9012:736:9","text":"@dev Extracts specific order information from the standardized unique\n order id of the protocol.\n @param orderUid The unique identifier used to represent an order in\n the protocol. This uid is the packed concatenation of the order digest,\n the validTo order parameter and the address of the user who created the\n order. It is used by the user to interface with the contract directly,\n and not by calls that are triggered by the solvers.\n @return orderDigest The EIP-712 signing digest derived from the order\n parameters.\n @return owner The address of the user who owns this order.\n @return validTo The epoch time at which the order will stop being valid."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"extractOrderUidParams","nameLocation":"9762:21:9","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"orderUid","nameLocation":"9799:8:9","nodeType":"VariableDeclaration","scope":1101,"src":"9784:23:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"9784:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9783:25:9"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"orderDigest","nameLocation":"9877:11:9","nodeType":"VariableDeclaration","scope":1101,"src":"9869:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9869:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"owner","nameLocation":"9910:5:9","nodeType":"VariableDeclaration","scope":1101,"src":"9902:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"9902:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"validTo","nameLocation":"9936:7:9","nodeType":"VariableDeclaration","scope":1101,"src":"9929:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1088,"name":"uint32","nodeType":"ElementaryTypeName","src":"9929:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9855:98:9"},"scope":1102,"src":"9753:628:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1103,"src":"412:9971:9","usedErrors":[]}],"src":"291:10093:9"},"id":9},"src/vendored/IERC20.sol":{"ast":{"absolutePath":"src/vendored/IERC20.sol","exportedSymbols":{"IERC20":[1180]},"id":1181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1104,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"261:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"286:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1180,"linearizedBaseContracts":[1180],"name":"IERC20","nameLocation":"367:6:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"380:66:10","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1111,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"460:11:10","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"471:2:10"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"497:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:10"},"scope":1180,"src":"451:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"512:72:10","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1119,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"598:9:10","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"account","nameLocation":"616:7:10","nodeType":"VariableDeclaration","scope":1119,"src":"608:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"608:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"607:17:10"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1119,"src":"648:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"647:9:10"},"scope":1180,"src":"589:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"663:209:10","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1129,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"886:8:10","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"recipient","nameLocation":"903:9:10","nodeType":"VariableDeclaration","scope":1129,"src":"895:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"amount","nameLocation":"922:6:10","nodeType":"VariableDeclaration","scope":1129,"src":"914:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"894:35:10"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1129,"src":"964:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1126,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"963:6:10"},"scope":1180,"src":"877:93:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"976:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1139,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1254:9:10","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"owner","nameLocation":"1272:5:10","nodeType":"VariableDeclaration","scope":1139,"src":"1264:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"spender","nameLocation":"1287:7:10","nodeType":"VariableDeclaration","scope":1139,"src":"1279:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"1279:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1263:32:10"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"1343:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1342:9:10"},"scope":1180,"src":"1245:107:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"1358:642:10","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1149,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2014:7:10","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"spender","nameLocation":"2030:7:10","nodeType":"VariableDeclaration","scope":1149,"src":"2022:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"2022:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"amount","nameLocation":"2047:6:10","nodeType":"VariableDeclaration","scope":1149,"src":"2039:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2021:33:10"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"2073:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1146,"name":"bool","nodeType":"ElementaryTypeName","src":"2073:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2072:6:10"},"scope":1180,"src":"2005:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"2085:296:10","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1161,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2395:12:10","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"sender","nameLocation":"2425:6:10","nodeType":"VariableDeclaration","scope":1161,"src":"2417:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"2417:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"recipient","nameLocation":"2449:9:10","nodeType":"VariableDeclaration","scope":1161,"src":"2441:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"amount","nameLocation":"2476:6:10","nodeType":"VariableDeclaration","scope":1161,"src":"2468:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2407:81:10"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1161,"src":"2507:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1158,"name":"bool","nodeType":"ElementaryTypeName","src":"2507:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2506:6:10"},"scope":1180,"src":"2386:127:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"2519:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1170,"name":"Transfer","nameLocation":"2688:8:10","nodeType":"EventDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2713:4:10","nodeType":"VariableDeclaration","scope":1170,"src":"2697:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"2697:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2735:2:10","nodeType":"VariableDeclaration","scope":1170,"src":"2719:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"2719:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2747:5:10","nodeType":"VariableDeclaration","scope":1170,"src":"2739:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2696:57:10"},"src":"2682:72:10"},{"anonymous":false,"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"2760:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1179,"name":"Approval","nameLocation":"2919:8:10","nodeType":"EventDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2953:5:10","nodeType":"VariableDeclaration","scope":1179,"src":"2937:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"2937:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1175,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2984:7:10","nodeType":"VariableDeclaration","scope":1179,"src":"2968:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"2968:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3009:5:10","nodeType":"VariableDeclaration","scope":1179,"src":"3001:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"3001:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2927:93:10"},"src":"2913:108:10"}],"scope":1181,"src":"357:2666:10","usedErrors":[]}],"src":"261:2763:10"},"id":10}},"contracts":{"src/CoWSwapEthFlow.sol":{"CoWSwapEthFlow":{"abi":[{"inputs":[{"internalType":"contract ICoWSwapSettlement","name":"_cowSwapSettlement","type":"address"},{"internalType":"contract IWrappedNativeToken","name":"_wrappedNativeToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EthTransferFailed","type":"error"},{"inputs":[],"name":"IncorrectEthAmount","type":"error"},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"NotAllowedToInvalidateOrder","type":"error"},{"inputs":[],"name":"NotAllowedZeroSellAmount","type":"error"},{"inputs":[],"name":"OrderIsAlreadyExpired","type":"error"},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"OrderIsAlreadyOwned","type":"error"},{"inputs":[],"name":"ReceiverMustBeSet","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"orderUid","type":"bytes"}],"name":"OrderInvalidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"components":[{"internalType":"contract IERC20","name":"sellToken","type":"address"},{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"bytes32","name":"kind","type":"bytes32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"bytes32","name":"sellTokenBalance","type":"bytes32"},{"internalType":"bytes32","name":"buyTokenBalance","type":"bytes32"}],"indexed":false,"internalType":"struct GPv2Order.Data","name":"order","type":"tuple"},{"components":[{"internalType":"enum ICoWSwapOnchainOrders.OnchainSigningScheme","name":"scheme","type":"uint8"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false,"internalType":"struct ICoWSwapOnchainOrders.OnchainSignature","name":"signature","type":"tuple"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"OrderPlacement","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"orderUid","type":"bytes"},{"indexed":true,"internalType":"address","name":"refunder","type":"address"}],"name":"OrderRefund","type":"event"},{"inputs":[],"name":"cowSwapSettlement","outputs":[{"internalType":"contract ICoWSwapSettlement","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"int64","name":"quoteId","type":"int64"}],"internalType":"struct EthFlowOrder.Data","name":"order","type":"tuple"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"int64","name":"quoteId","type":"int64"}],"internalType":"struct EthFlowOrder.Data","name":"order","type":"tuple"}],"name":"invalidateOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"int64","name":"quoteId","type":"int64"}],"internalType":"struct EthFlowOrder.Data[]","name":"orderArray","type":"tuple[]"}],"name":"invalidateOrdersIgnoringNotAllowed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"orders","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint32","name":"validTo","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unwrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"wrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wrapAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wrappedNativeToken","outputs":[{"internalType":"contract IWrappedNativeToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_77":{"entryPoint":null,"id":77,"parameterSlots":2,"returnSlots":0},"@_897":{"entryPoint":null,"id":897,"parameterSlots":1,"returnSlots":0},"@domainSeparator_747":{"entryPoint":338,"id":747,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ICoWSwapSettlement_$685t_contract$_IWrappedNativeToken_$702_fromMemory":{"entryPoint":542,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"validator_revert_contract_ICoWSwapSettlement":{"entryPoint":517,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1981:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"79:86:11","statements":[{"body":{"nodeType":"YulBlock","src":"143:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"145:6:11"},"nodeType":"YulFunctionCall","src":"145:12:11"},"nodeType":"YulExpressionStatement","src":"145:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"102:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"113:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"128:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"133:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"124:3:11"},"nodeType":"YulFunctionCall","src":"124:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"137:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"120:3:11"},"nodeType":"YulFunctionCall","src":"120:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"109:3:11"},"nodeType":"YulFunctionCall","src":"109:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"99:2:11"},"nodeType":"YulFunctionCall","src":"99:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"92:6:11"},"nodeType":"YulFunctionCall","src":"92:50:11"},"nodeType":"YulIf","src":"89:70:11"}]},"name":"validator_revert_contract_ICoWSwapSettlement","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68:5:11","type":""}],"src":"14:151:11"},{"body":{"nodeType":"YulBlock","src":"321:327:11","statements":[{"body":{"nodeType":"YulBlock","src":"367:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"376:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"379:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"369:6:11"},"nodeType":"YulFunctionCall","src":"369:12:11"},"nodeType":"YulExpressionStatement","src":"369:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"342:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"351:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"338:3:11"},"nodeType":"YulFunctionCall","src":"338:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"363:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"334:3:11"},"nodeType":"YulFunctionCall","src":"334:32:11"},"nodeType":"YulIf","src":"331:52:11"},{"nodeType":"YulVariableDeclaration","src":"392:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"411:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"405:5:11"},"nodeType":"YulFunctionCall","src":"405:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"396:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"475:5:11"}],"functionName":{"name":"validator_revert_contract_ICoWSwapSettlement","nodeType":"YulIdentifier","src":"430:44:11"},"nodeType":"YulFunctionCall","src":"430:51:11"},"nodeType":"YulExpressionStatement","src":"430:51:11"},{"nodeType":"YulAssignment","src":"490:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"500:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"490:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"514:40:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"539:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"535:3:11"},"nodeType":"YulFunctionCall","src":"535:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"529:5:11"},"nodeType":"YulFunctionCall","src":"529:25:11"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"518:7:11","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"608:7:11"}],"functionName":{"name":"validator_revert_contract_ICoWSwapSettlement","nodeType":"YulIdentifier","src":"563:44:11"},"nodeType":"YulFunctionCall","src":"563:53:11"},"nodeType":"YulExpressionStatement","src":"563:53:11"},{"nodeType":"YulAssignment","src":"625:17:11","value":{"name":"value_1","nodeType":"YulIdentifier","src":"635:7:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"625:6:11"}]}]},"name":"abi_decode_tuple_t_contract$_ICoWSwapSettlement_$685t_contract$_IWrappedNativeToken_$702_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"279:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"290:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"302:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"310:6:11","type":""}],"src":"170:478:11"},{"body":{"nodeType":"YulBlock","src":"734:190:11","statements":[{"body":{"nodeType":"YulBlock","src":"780:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"789:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"792:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"782:6:11"},"nodeType":"YulFunctionCall","src":"782:12:11"},"nodeType":"YulExpressionStatement","src":"782:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"755:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"764:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"751:3:11"},"nodeType":"YulFunctionCall","src":"751:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"776:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"747:3:11"},"nodeType":"YulFunctionCall","src":"747:32:11"},"nodeType":"YulIf","src":"744:52:11"},{"nodeType":"YulVariableDeclaration","src":"805:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"824:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"818:5:11"},"nodeType":"YulFunctionCall","src":"818:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"809:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"888:5:11"}],"functionName":{"name":"validator_revert_contract_ICoWSwapSettlement","nodeType":"YulIdentifier","src":"843:44:11"},"nodeType":"YulFunctionCall","src":"843:51:11"},"nodeType":"YulExpressionStatement","src":"843:51:11"},{"nodeType":"YulAssignment","src":"903:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"913:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:11"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"700:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"711:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"723:6:11","type":""}],"src":"653:271:11"},{"body":{"nodeType":"YulBlock","src":"1058:145:11","statements":[{"nodeType":"YulAssignment","src":"1068:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1080:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1076:3:11"},"nodeType":"YulFunctionCall","src":"1076:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1068:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1110:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1125:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1141:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1146:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1137:3:11"},"nodeType":"YulFunctionCall","src":"1137:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"1150:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1133:3:11"},"nodeType":"YulFunctionCall","src":"1133:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1121:3:11"},"nodeType":"YulFunctionCall","src":"1121:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1103:6:11"},"nodeType":"YulFunctionCall","src":"1103:51:11"},"nodeType":"YulExpressionStatement","src":"1103:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1185:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1170:3:11"},"nodeType":"YulFunctionCall","src":"1170:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"1190:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1163:6:11"},"nodeType":"YulFunctionCall","src":"1163:34:11"},"nodeType":"YulExpressionStatement","src":"1163:34:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1019:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1030:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1038:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1049:4:11","type":""}],"src":"929:274:11"},{"body":{"nodeType":"YulBlock","src":"1286:199:11","statements":[{"body":{"nodeType":"YulBlock","src":"1332:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1344:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1334:6:11"},"nodeType":"YulFunctionCall","src":"1334:12:11"},"nodeType":"YulExpressionStatement","src":"1334:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1307:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1316:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1303:3:11"},"nodeType":"YulFunctionCall","src":"1303:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1328:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1299:3:11"},"nodeType":"YulFunctionCall","src":"1299:32:11"},"nodeType":"YulIf","src":"1296:52:11"},{"nodeType":"YulVariableDeclaration","src":"1357:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1376:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1370:5:11"},"nodeType":"YulFunctionCall","src":"1370:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1361:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1439:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1448:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1451:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1441:6:11"},"nodeType":"YulFunctionCall","src":"1441:12:11"},"nodeType":"YulExpressionStatement","src":"1441:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1408:5:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1429:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1422:6:11"},"nodeType":"YulFunctionCall","src":"1422:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1415:6:11"},"nodeType":"YulFunctionCall","src":"1415:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1405:2:11"},"nodeType":"YulFunctionCall","src":"1405:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1398:6:11"},"nodeType":"YulFunctionCall","src":"1398:40:11"},"nodeType":"YulIf","src":"1395:60:11"},{"nodeType":"YulAssignment","src":"1464:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1474:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1464:6:11"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1252:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1263:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1275:6:11","type":""}],"src":"1208:277:11"},{"body":{"nodeType":"YulBlock","src":"1703:276:11","statements":[{"nodeType":"YulAssignment","src":"1713:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1725:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1736:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1721:3:11"},"nodeType":"YulFunctionCall","src":"1721:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1713:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1756:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"1767:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1749:6:11"},"nodeType":"YulFunctionCall","src":"1749:25:11"},"nodeType":"YulExpressionStatement","src":"1749:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1794:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1805:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1790:3:11"},"nodeType":"YulFunctionCall","src":"1790:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"1810:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1783:6:11"},"nodeType":"YulFunctionCall","src":"1783:34:11"},"nodeType":"YulExpressionStatement","src":"1783:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1837:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1848:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1833:3:11"},"nodeType":"YulFunctionCall","src":"1833:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"1853:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1826:6:11"},"nodeType":"YulFunctionCall","src":"1826:34:11"},"nodeType":"YulExpressionStatement","src":"1826:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1880:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1891:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1876:3:11"},"nodeType":"YulFunctionCall","src":"1876:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"1896:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1869:6:11"},"nodeType":"YulFunctionCall","src":"1869:34:11"},"nodeType":"YulExpressionStatement","src":"1869:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1923:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1934:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1919:3:11"},"nodeType":"YulFunctionCall","src":"1919:19:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1944:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1960:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1965:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1956:3:11"},"nodeType":"YulFunctionCall","src":"1956:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"1969:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1952:3:11"},"nodeType":"YulFunctionCall","src":"1952:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1940:3:11"},"nodeType":"YulFunctionCall","src":"1940:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1912:6:11"},"nodeType":"YulFunctionCall","src":"1912:61:11"},"nodeType":"YulExpressionStatement","src":"1912:61:11"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1640:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1651:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1659:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1667:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1675:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1683:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1694:4:11","type":""}],"src":"1490:489:11"}]},"contents":"{\n    { }\n    function validator_revert_contract_ICoWSwapSettlement(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ICoWSwapSettlement_$685t_contract$_IWrappedNativeToken_$702_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ICoWSwapSettlement(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_ICoWSwapSettlement(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ICoWSwapSettlement(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040523480156200001157600080fd5b5060405162001b2a38038062001b2a83398101604081905262000034916200021e565b816200004b816200015260201b6200089b1760201c565b608052506001600160a01b0380831660a081905290821660c081905260408051634daa966160e11b81529051919263095ea7b3929091639b552cc291600480830192602092919082900301816000875af1158015620000ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d491906200025d565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801562000123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000149919062000284565b505050620002a8565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf606082015246608082018190526001600160a01b03831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b6001600160a01b03811681146200021b57600080fd5b50565b600080604083850312156200023257600080fd5b82516200023f8162000205565b6020840151909250620002528162000205565b809150509250929050565b6000602082840312156200027057600080fd5b81516200027d8162000205565b9392505050565b6000602082840312156200029757600080fd5b815180151581146200027d57600080fd5b60805160a05160c0516118216200030960003960008181610129015281816105ff015281816107ad0152818161082501528181610c3301526110310152600081816102ce0152610f4b015260008181610bf70152610cd901526118216000f3fe6080604052600436106100b55760003560e01c80637bc41b9611610069578063de0e9a3e1161004e578063de0e9a3e1461027c578063ea598cb01461029c578063ec30bb88146102bc57600080fd5b80637bc41b96146101c85780639c3f1e90146101e857600080fd5b8063322bba211161009a578063322bba21146101705780634c84c1c8146101915780634cb76498146101a857600080fd5b80631626ba7e146100c157806317fcb39b1461011757600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100e16100dc36600461126e565b6102f0565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561012357600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61018361017e36600461132b565b6103de565b60405190815260200161010e565b34801561019d57600080fd5b506101a6610720565b005b3480156101b457600080fd5b506101a66101c3366004611344565b61072b565b3480156101d457600080fd5b506101a66101e336600461132b565b610770565b3480156101f457600080fd5b5061024b6102033660046113ba565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835263ffffffff90911660208301520161010e565b34801561028857600080fd5b506101a66102973660046113ba565b61077e565b3480156102a857600080fd5b506101a66102b73660046113ba565b610821565b3480156102c857600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b60008281526020818152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff81168083527401000000000000000000000000000000000000000090910463ffffffff1692820192909252901580159061036f5750805173ffffffffffffffffffffffffffffffffffffffff90811614155b8015610385575042816020015163ffffffff1610155b156103b357507f1626ba7e0000000000000000000000000000000000000000000000000000000090506103d8565b507fffffffff0000000000000000000000000000000000000000000000000000000090505b92915050565b60006103f260a08301356040840135611402565b341461042a576040517f8b6ebb4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160400135600003610468576040517feaec5c9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4261047960e0840160c0850161142e565b63ffffffff1610156104b7576040517f89bb260100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152338152600090602081016104db60e0860160c0870161142e565b63ffffffff169052604080518082019091529091506000908082815260200130604051602001610536919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290529050600061057c61012086016101008701611462565b6020808501516040516105c393920160c09290921b825260e01b7fffffffff00000000000000000000000000000000000000000000000000000000166008820152600c0190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052835190915061063a906106337f000000000000000000000000000000000000000000000000000000000000000061062d368a90038a018a6114b1565b9061095b565b8484610b2a565b60008181526020819052604090205490945073ffffffffffffffffffffffffffffffffffffffff16156106a1576040517f56a1d2b2000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b505060008281526020818152604090912082518154929093015163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff90931692909217179055919050565b61072947610821565b565b60005b8181101561076b5761075983838381811061074b5761074b61154b565b905061012002016000610c2c565b806107638161157a565b91505061072e565b505050565b61077b816001610c2c565b50565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081a565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b604080516101808101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101608201529083015173ffffffffffffffffffffffffffffffffffffffff16610a0a576040517fefc9ccdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff168152602001846040015181526020018460600151815260200163ffffffff80168152602001846080015181526020018460a0015181526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018460e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9815250905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff167fcf5f9de2984132265203b5c335b25727702ca77262ff622e136baa7362bf1da9858585604051610b7693929190611676565b60405180910390a25050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f190100000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006002820152602281019190915260429020919050565b6000610c617f000000000000000000000000000000000000000000000000000000000000000061062d368690038601866114b1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a082209152604080517f190100000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600282015260228101929092526042909120600081815260208181529083902083518085019094525473ffffffffffffffffffffffffffffffffffffffff8082168086527401000000000000000000000000000000000000000090920463ffffffff1692850183905294955091934290911015911480610d8d5750815173ffffffffffffffffffffffffffffffffffffffff16155b80610db75750808015610db75750815173ffffffffffffffffffffffffffffffffffffffff163314155b15610dff578415610df7576040517ff8cc70ce00000000000000000000000000000000000000000000000000000000815260048101849052602401610698565b505050505050565b60008381526020818152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff1790558051603880825260608201909252918201818036833750505060a0860151909150610e7a90829086903090611149565b8115610ebc577fb8bad102ac8bbacfef31ff1c906ec6d951c230b4dce750bb0376b812ad35852a81604051610eaf9190611790565b60405180910390a1610f0b565b3373ffffffffffffffffffffffffffffffffffffffff167f195271068a288191e4b265c641a56b9832919f69e9e7d6c2f31ba40278aeb85a82604051610f029190611790565b60405180910390a25b6040517f2479fb6e00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632479fb6e90610f80908590600401611790565b6020604051808303816000875af1158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc391906117a3565b90506000808760600151838960e001510281610fe157610fe16117bc565b048860e00151039050808389606001510301915050804710156110a4576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815247820360048201819052907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561108a57600080fd5b505af115801561109e573d6000803e3d6000fd5b50505050505b845160405160009173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d80600081146110fd576040519150601f19603f3d011682016040523d82523d6000602084013e611102565b606091505b505090508061113d576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050565b60388451146111b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f77000000000000006044820152606401610698565b60388401526034830152602090910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715611219576112196111c6565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611266576112666111c6565b604052919050565b6000806040838503121561128157600080fd5b8235915060208084013567ffffffffffffffff808211156112a157600080fd5b818601915086601f8301126112b557600080fd5b8135818111156112c7576112c76111c6565b6112f7847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161121f565b9150808252878482850101111561130d57600080fd5b80848401858401376000848284010152508093505050509250929050565b6000610120828403121561133e57600080fd5b50919050565b6000806020838503121561135757600080fd5b823567ffffffffffffffff8082111561136f57600080fd5b818501915085601f83011261138357600080fd5b81358181111561139257600080fd5b866020610120830285010111156113a857600080fd5b60209290920196919550909350505050565b6000602082840312156113cc57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103d8576103d86113d3565b803563ffffffff8116811461142957600080fd5b919050565b60006020828403121561144057600080fd5b61144982611415565b9392505050565b8035600781900b811461142957600080fd5b60006020828403121561147457600080fd5b61144982611450565b803573ffffffffffffffffffffffffffffffffffffffff8116811461142957600080fd5b8035801515811461142957600080fd5b600061012082840312156114c457600080fd5b6114cc6111f5565b6114d58361147d565b81526114e36020840161147d565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261151c60c08401611415565b60c082015261152d60e084016114a1565b60e0820152610100611540818501611450565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115ab576115ab6113d3565b5060010190565b6000815180845260005b818110156115d8576020818501810151868301820152016115bc565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000815160028110611651577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8084525060208201516040602085015261166e60408501826115b2565b949350505050565b835173ffffffffffffffffffffffffffffffffffffffff16815260006101c060208601516116bc602085018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408601516116e4604085018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608401526080860151608084015260a086015161171060a085018263ffffffff169052565b5060c086015160c084015260e086015160e0840152610100808701518185015250610120808701516117458286018215159052565b505061014086810151908401526101608087015190840152610180830181905261177181840186611616565b90508281036101a084015261178681856115b2565b9695505050505050565b60208152600061144960208301846115b2565b6000602082840312156117b557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212200701ad44a33c4e8dc73d93f25a0454fa8a2b003f05d667bc30f8cb8d59fa1a9d64736f6c63430008100033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B2A CODESIZE SUB DUP1 PUSH3 0x1B2A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x21E JUMP JUMPDEST DUP2 PUSH3 0x4B DUP2 PUSH3 0x152 PUSH1 0x20 SHL PUSH3 0x89B OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0xA0 DUP2 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x4DAA9661 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH4 0x95EA7B3 SWAP3 SWAP1 SWAP2 PUSH4 0x9B552CC2 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xD4 SWAP2 SWAP1 PUSH3 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x123 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x149 SWAP2 SWAP1 PUSH3 0x284 JUMP JUMPDEST POP POP POP PUSH3 0x2A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C85C0337EBA1661327F94F3BF46C8A7F9311A563F4D5C948362567F5D8ED60C SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF9446B8E937D86F0BC87CAC73923491692B123CA5F8761908494703758206ADF PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x23F DUP2 PUSH3 0x205 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x252 DUP2 PUSH3 0x205 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x27D DUP2 PUSH3 0x205 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1821 PUSH3 0x309 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x129 ADD MSTORE DUP2 DUP2 PUSH2 0x5FF ADD MSTORE DUP2 DUP2 PUSH2 0x7AD ADD MSTORE DUP2 DUP2 PUSH2 0x825 ADD MSTORE DUP2 DUP2 PUSH2 0xC33 ADD MSTORE PUSH2 0x1031 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2CE ADD MSTORE PUSH2 0xF4B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xBF7 ADD MSTORE PUSH2 0xCD9 ADD MSTORE PUSH2 0x1821 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BC41B96 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0xDE0E9A3E GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xEA598CB0 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xEC30BB88 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BC41B96 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x9C3F1E90 EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x322BBA21 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x322BBA21 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x4C84C1C8 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x4CB76498 EQ PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xBC JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x126E JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x720 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x10E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x36F JUMPI POP DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x385 JUMPI POP TIMESTAMP DUP2 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x3B3 JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x3D8 JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2 PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1402 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8B6EBB4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x0 SUB PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEAEC5C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH2 0x479 PUSH1 0xE0 DUP5 ADD PUSH1 0xC0 DUP6 ADD PUSH2 0x142E JUMP JUMPDEST PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x89BB260100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 DUP2 ADD PUSH2 0x4DB PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x142E JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x536 SWAP2 SWAP1 PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP1 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x57C PUSH2 0x120 DUP7 ADD PUSH2 0x100 DUP8 ADD PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5C3 SWAP4 SWAP3 ADD PUSH1 0xC0 SWAP3 SWAP1 SWAP3 SHL DUP3 MSTORE PUSH1 0xE0 SHL PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x8 DUP3 ADD MSTORE PUSH1 0xC ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP4 MLOAD SWAP1 SWAP2 POP PUSH2 0x63A SWAP1 PUSH2 0x633 PUSH32 0x0 PUSH2 0x62D CALLDATASIZE DUP11 SWAP1 SUB DUP11 ADD DUP11 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 PUSH2 0x95B JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x56A1D2B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP3 SWAP1 SWAP4 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x729 SELFBALANCE PUSH2 0x821 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x76B JUMPI PUSH2 0x759 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x74B JUMPI PUSH2 0x74B PUSH2 0x154B JUMP JUMPDEST SWAP1 POP PUSH2 0x120 MUL ADD PUSH1 0x0 PUSH2 0xC2C JUMP JUMPDEST DUP1 PUSH2 0x763 DUP2 PUSH2 0x157A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x72E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x77B DUP2 PUSH1 0x1 PUSH2 0xC2C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C85C0337EBA1661327F94F3BF46C8A7F9311A563F4D5C948362567F5D8ED60C SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF9446B8E937D86F0BC87CAC73923491692B123CA5F8761908494703758206ADF PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x180 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH32 0xEFC9CCDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xFFFFFFFF DUP1 AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xA0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xF3B277728B3FEE749481EB3E0B3B48980DBBAB78658FC419025CB16EEE346775 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xE0 ADD MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A28E9363BB942B639270062AA6BB295F434BCDFC42C97267BF003F272060DC9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A28E9363BB942B639270062AA6BB295F434BCDFC42C97267BF003F272060DC9 DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF5F9DE2984132265203B5C335B25727702CA77262FF622E136BAA7362BF1DA9 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xB76 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP1 MLOAD PUSH32 0xD5A25BA2E97094AD7D83DC28A6572DA797D6B3E7FC6663BD93EFB789FC17E489 DUP3 MSTORE PUSH2 0x1A0 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x2 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH32 0x0 PUSH2 0x62D CALLDATASIZE DUP7 SWAP1 SUB DUP7 ADD DUP7 PUSH2 0x14B1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP1 MLOAD PUSH32 0xD5A25BA2E97094AD7D83DC28A6572DA797D6B3E7FC6663BD93EFB789FC17E489 DUP3 MSTORE PUSH2 0x1A0 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x2 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x42 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP7 MSTORE PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP3 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE SWAP5 SWAP6 POP SWAP2 SWAP4 TIMESTAMP SWAP1 SWAP2 LT ISZERO SWAP2 EQ DUP1 PUSH2 0xD8D JUMPI POP DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO JUMPDEST DUP1 PUSH2 0xDB7 JUMPI POP DUP1 DUP1 ISZERO PUSH2 0xDB7 JUMPI POP DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xDFF JUMPI DUP5 ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8CC70CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x698 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0x38 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP PUSH1 0xA0 DUP7 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xE7A SWAP1 DUP3 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH2 0x1149 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEBC JUMPI PUSH32 0xB8BAD102AC8BBACFEF31FF1C906EC6D951C230B4DCE750BB0376B812AD35852A DUP2 PUSH1 0x40 MLOAD PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF0B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x195271068A288191E4B265C641A56B9832919F69E9E7D6C2F31BA40278AEB85A DUP3 PUSH1 0x40 MLOAD PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2479FB6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x2479FB6E SWAP1 PUSH2 0xF80 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x17A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP8 PUSH1 0x60 ADD MLOAD DUP4 DUP10 PUSH1 0xE0 ADD MLOAD MUL DUP2 PUSH2 0xFE1 JUMPI PUSH2 0xFE1 PUSH2 0x17BC JUMP JUMPDEST DIV DUP9 PUSH1 0xE0 ADD MLOAD SUB SWAP1 POP DUP1 DUP4 DUP10 PUSH1 0x60 ADD MLOAD SUB ADD SWAP2 POP POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SELFBALANCE DUP3 SUB PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x109E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST DUP5 MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D963F8800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x38 DUP5 MLOAD EQ PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x475076323A2075696420627566666572206F766572666C6F7700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x38 DUP5 ADD MSTORE PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1219 JUMPI PUSH2 0x1219 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1266 JUMPI PUSH2 0x1266 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C7 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x12F7 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x121F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x130D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x136F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH2 0x120 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x13A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0x13D3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1449 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1449 DUP3 PUSH2 0x1450 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14CC PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x14D5 DUP4 PUSH2 0x147D JUMP JUMPDEST DUP2 MSTORE PUSH2 0x14E3 PUSH1 0x20 DUP5 ADD PUSH2 0x147D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x151C PUSH1 0xC0 DUP5 ADD PUSH2 0x1415 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x152D PUSH1 0xE0 DUP5 ADD PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x1540 DUP2 DUP6 ADD PUSH2 0x1450 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x15AB JUMPI PUSH2 0x15AB PUSH2 0x13D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15BC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x2 DUP2 LT PUSH2 0x1651 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP5 MSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x166E PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x15B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C0 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x16BC PUSH1 0x20 DUP6 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP7 ADD MLOAD PUSH2 0x16E4 PUSH1 0x40 DUP6 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH2 0x1710 PUSH1 0xA0 DUP6 ADD DUP3 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP8 ADD MLOAD DUP2 DUP6 ADD MSTORE POP PUSH2 0x120 DUP1 DUP8 ADD MLOAD PUSH2 0x1745 DUP3 DUP7 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x140 DUP7 DUP2 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x160 DUP1 DUP8 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0x1771 DUP2 DUP5 ADD DUP7 PUSH2 0x1616 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1786 DUP2 DUP6 PUSH2 0x15B2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1449 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD ADD 0xAD DIFFICULTY LOG3 EXTCODECOPY 0x4E DUP14 0xC7 RETURNDATASIZE SWAP4 CALLCODE GAS DIV SLOAD STATICCALL DUP11 0x2B STOP EXTCODEHASH SDIV 0xD6 PUSH8 0xBC30F8CB8D59FA1A SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ","sourceMap":"387:11161:0:-:0;;;1729:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1872:18;769:78:7;812:25;769:29;;;;;:78;;:::i;:::-;744:103;;-1:-1:-1;;;;;;1903:38:0;;::::1;;::::0;;;1951:40;;::::1;;::::0;;;2043:32:::1;::::0;;-1:-1:-1;;;2043:32:0;;;;1951:40;;2002:27:::1;::::0;1903:38;;2043:30:::1;::::0;:32:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;::::1;1903:38:::0;2043:32:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2002:114;::::0;-1:-1:-1;;;;;;2002:114:0::1;::::0;;;;;;-1:-1:-1;;;;;1121:32:11;;;2002:114:0::1;::::0;::::1;1103:51:11::0;-1:-1:-1;;1170:18:11;;;1163:34;1076:18;;2002:114:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1729:394:::0;;387:11161;;1381:622:5;1782:200;;;474:117;1782:200;;;1749:25:11;715:28:5;1790:18:11;;;1783:34;;;;873:15:5;1833:18:11;;;1826:34;1707:9:5;1876:18:11;;;1869:34;;;-1:-1:-1;;;;;1940:32:11;;1919:19;;;1912:61;1477:7:5;;1721:19:11;;1782:200:5;;;;;;;;;;;;1755:241;;;;;;1736:260;;;1381:622;;;:::o;14:151:11:-;-1:-1:-1;;;;;109:31:11;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:478::-;302:6;310;363:2;351:9;342:7;338:23;334:32;331:52;;;379:1;376;369:12;331:52;411:9;405:16;430:51;475:5;430:51;:::i;:::-;550:2;535:18;;529:25;500:5;;-1:-1:-1;563:53:11;529:25;563:53;:::i;:::-;635:7;625:17;;;170:478;;;;;:::o;653:271::-;723:6;776:2;764:9;755:7;751:23;747:32;744:52;;;792:1;789;782:12;744:52;824:9;818:16;843:51;888:5;843:51;:::i;:::-;913:5;653:271;-1:-1:-1;;;653:271:11:o;1208:277::-;1275:6;1328:2;1316:9;1307:7;1303:23;1299:32;1296:52;;;1344:1;1341;1334:12;1296:52;1376:9;1370:16;1429:5;1422:13;1415:21;1408:5;1405:32;1395:60;;1451:1;1448;1441:12;1490:489;387:11161:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_81":{"entryPoint":null,"id":81,"parameterSlots":0,"returnSlots":0},"@_invalidateOrder_486":{"entryPoint":3116,"id":486,"parameterSlots":2,"returnSlots":0},"@broadcastOrder_926":{"entryPoint":2858,"id":926,"parameterSlots":4,"returnSlots":1},"@cowSwapSettlement_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@createOrder_243":{"entryPoint":990,"id":243,"parameterSlots":1,"returnSlots":1},"@domainSeparator_747":{"entryPoint":2203,"id":747,"parameterSlots":1,"returnSlots":1},"@hash_1057":{"entryPoint":null,"id":1057,"parameterSlots":2,"returnSlots":1},"@invalidateOrder_285":{"entryPoint":1904,"id":285,"parameterSlots":1,"returnSlots":0},"@invalidateOrdersIgnoringNotAllowed_272":{"entryPoint":1835,"id":272,"parameterSlots":2,"returnSlots":0},"@isValidSignature_544":{"entryPoint":752,"id":544,"parameterSlots":2,"returnSlots":1},"@orders_39":{"entryPoint":null,"id":39,"parameterSlots":0,"returnSlots":0},"@packOrderUidParams_1079":{"entryPoint":4425,"id":1079,"parameterSlots":4,"returnSlots":0},"@toCoWSwapOrder_864":{"entryPoint":2395,"id":864,"parameterSlots":2,"returnSlots":1},"@unwrap_131":{"entryPoint":1918,"id":131,"parameterSlots":1,"returnSlots":0},"@wrapAll_94":{"entryPoint":1824,"id":94,"parameterSlots":0,"returnSlots":0},"@wrap_118":{"entryPoint":2081,"id":118,"parameterSlots":1,"returnSlots":0},"@wrappedNativeToken_33":{"entryPoint":null,"id":33,"parameterSlots":0,"returnSlots":0},"abi_decode_bool":{"entryPoint":5281,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_contract_IERC20":{"entryPoint":5245,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_int64":{"entryPoint":5200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_Data_$789_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":4932,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":5050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":4718,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_int64":{"entryPoint":5218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Data_$789_calldata_ptr":{"entryPoint":4907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Data_$789_memory_ptr":{"entryPoint":5297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":5166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32":{"entryPoint":5141,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":5554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_contract_IWrappedNativeToken":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_OnchainSignature":{"entryPoint":5654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_int64_t_uint32__to_t_int64_t_uint32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ICoWSwapSettlement_$685__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IWrappedNativeToken_$702__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cf3ee9bc7b6748f422a1179174dd87601433141f626f9880fbda28f36ca64306__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Data_$977_memory_ptr_t_struct$_OnchainSignature_$648_memory_ptr_t_bytes_memory_ptr__to_t_struct$_Data_$977_memory_ptr_t_struct$_OnchainSignature_$648_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5750,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":4639,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_1555":{"entryPoint":4597,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5122,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5498,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5075,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6076,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5451,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4550,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12480:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"66:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:11"},"nodeType":"YulFunctionCall","src":"56:88:11"},"nodeType":"YulExpressionStatement","src":"56:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"160:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"163:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"153:6:11"},"nodeType":"YulFunctionCall","src":"153:15:11"},"nodeType":"YulExpressionStatement","src":"153:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"184:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"187:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"177:6:11"},"nodeType":"YulFunctionCall","src":"177:15:11"},"nodeType":"YulExpressionStatement","src":"177:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:184:11"},{"body":{"nodeType":"YulBlock","src":"249:206:11","statements":[{"nodeType":"YulAssignment","src":"259:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"275:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"269:5:11"},"nodeType":"YulFunctionCall","src":"269:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"259:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"287:34:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"309:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"317:3:11","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"305:3:11"},"nodeType":"YulFunctionCall","src":"305:16:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"291:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"396:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"398:16:11"},"nodeType":"YulFunctionCall","src":"398:18:11"},"nodeType":"YulExpressionStatement","src":"398:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"339:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"351:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"336:2:11"},"nodeType":"YulFunctionCall","src":"336:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"375:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"387:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"372:2:11"},"nodeType":"YulFunctionCall","src":"372:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"333:2:11"},"nodeType":"YulFunctionCall","src":"333:62:11"},"nodeType":"YulIf","src":"330:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"434:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"438:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"427:6:11"},"nodeType":"YulFunctionCall","src":"427:22:11"},"nodeType":"YulExpressionStatement","src":"427:22:11"}]},"name":"allocate_memory_1555","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"238:6:11","type":""}],"src":"203:252:11"},{"body":{"nodeType":"YulBlock","src":"505:289:11","statements":[{"nodeType":"YulAssignment","src":"515:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"531:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"525:5:11"},"nodeType":"YulFunctionCall","src":"525:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"515:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"543:117:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"565:6:11"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"581:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"587:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:11"},"nodeType":"YulFunctionCall","src":"577:13:11"},{"kind":"number","nodeType":"YulLiteral","src":"592:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"573:3:11"},"nodeType":"YulFunctionCall","src":"573:86:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"561:3:11"},"nodeType":"YulFunctionCall","src":"561:99:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"547:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"737:16:11"},"nodeType":"YulFunctionCall","src":"737:18:11"},"nodeType":"YulExpressionStatement","src":"737:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"678:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"690:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"675:2:11"},"nodeType":"YulFunctionCall","src":"675:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"714:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"726:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"711:2:11"},"nodeType":"YulFunctionCall","src":"711:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"672:2:11"},"nodeType":"YulFunctionCall","src":"672:62:11"},"nodeType":"YulIf","src":"669:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"773:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"777:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:11"},"nodeType":"YulFunctionCall","src":"766:22:11"},"nodeType":"YulExpressionStatement","src":"766:22:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"485:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"494:6:11","type":""}],"src":"460:334:11"},{"body":{"nodeType":"YulBlock","src":"895:794:11","statements":[{"body":{"nodeType":"YulBlock","src":"941:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"950:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"953:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"943:6:11"},"nodeType":"YulFunctionCall","src":"943:12:11"},"nodeType":"YulExpressionStatement","src":"943:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"916:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"925:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"912:3:11"},"nodeType":"YulFunctionCall","src":"912:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"937:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"908:3:11"},"nodeType":"YulFunctionCall","src":"908:32:11"},"nodeType":"YulIf","src":"905:52:11"},{"nodeType":"YulAssignment","src":"966:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"989:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"976:12:11"},"nodeType":"YulFunctionCall","src":"976:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"966:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1008:12:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1018:2:11","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1012:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1029:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1060:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1071:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1056:3:11"},"nodeType":"YulFunctionCall","src":"1056:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1043:12:11"},"nodeType":"YulFunctionCall","src":"1043:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1033:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1084:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1094:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1088:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1139:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1148:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1151:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1141:6:11"},"nodeType":"YulFunctionCall","src":"1141:12:11"},"nodeType":"YulExpressionStatement","src":"1141:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1127:6:11"},{"name":"_2","nodeType":"YulIdentifier","src":"1135:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1124:2:11"},"nodeType":"YulFunctionCall","src":"1124:14:11"},"nodeType":"YulIf","src":"1121:34:11"},{"nodeType":"YulVariableDeclaration","src":"1164:32:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1178:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1189:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1174:3:11"},"nodeType":"YulFunctionCall","src":"1174:22:11"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1168:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1244:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1253:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1256:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1246:6:11"},"nodeType":"YulFunctionCall","src":"1246:12:11"},"nodeType":"YulExpressionStatement","src":"1246:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1223:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"1227:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1219:3:11"},"nodeType":"YulFunctionCall","src":"1219:13:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1234:7:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1215:3:11"},"nodeType":"YulFunctionCall","src":"1215:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1208:6:11"},"nodeType":"YulFunctionCall","src":"1208:35:11"},"nodeType":"YulIf","src":"1205:55:11"},{"nodeType":"YulVariableDeclaration","src":"1269:26:11","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1292:2:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1279:12:11"},"nodeType":"YulFunctionCall","src":"1279:16:11"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1273:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1318:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1320:16:11"},"nodeType":"YulFunctionCall","src":"1320:18:11"},"nodeType":"YulExpressionStatement","src":"1320:18:11"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1310:2:11"},{"name":"_2","nodeType":"YulIdentifier","src":"1314:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1307:2:11"},"nodeType":"YulFunctionCall","src":"1307:10:11"},"nodeType":"YulIf","src":"1304:36:11"},{"nodeType":"YulVariableDeclaration","src":"1349:125:11","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1390:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"1394:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1386:3:11"},"nodeType":"YulFunctionCall","src":"1386:13:11"},{"kind":"number","nodeType":"YulLiteral","src":"1401:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1382:3:11"},"nodeType":"YulFunctionCall","src":"1382:86:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1470:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1378:3:11"},"nodeType":"YulFunctionCall","src":"1378:95:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1362:15:11"},"nodeType":"YulFunctionCall","src":"1362:112:11"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"1353:5:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1490:5:11"},{"name":"_4","nodeType":"YulIdentifier","src":"1497:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1483:6:11"},"nodeType":"YulFunctionCall","src":"1483:17:11"},"nodeType":"YulExpressionStatement","src":"1483:17:11"},{"body":{"nodeType":"YulBlock","src":"1546:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1555:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1558:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1548:6:11"},"nodeType":"YulFunctionCall","src":"1548:12:11"},"nodeType":"YulExpressionStatement","src":"1548:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1523:2:11"},{"name":"_4","nodeType":"YulIdentifier","src":"1527:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1519:3:11"},"nodeType":"YulFunctionCall","src":"1519:11:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1532:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1515:3:11"},"nodeType":"YulFunctionCall","src":"1515:20:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1537:7:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1512:2:11"},"nodeType":"YulFunctionCall","src":"1512:33:11"},"nodeType":"YulIf","src":"1509:53:11"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1588:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1595:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1584:3:11"},"nodeType":"YulFunctionCall","src":"1584:14:11"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1604:2:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1608:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1600:3:11"},"nodeType":"YulFunctionCall","src":"1600:11:11"},{"name":"_4","nodeType":"YulIdentifier","src":"1613:2:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1571:12:11"},"nodeType":"YulFunctionCall","src":"1571:45:11"},"nodeType":"YulExpressionStatement","src":"1571:45:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1640:5:11"},{"name":"_4","nodeType":"YulIdentifier","src":"1647:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1636:3:11"},"nodeType":"YulFunctionCall","src":"1636:14:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1652:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1632:3:11"},"nodeType":"YulFunctionCall","src":"1632:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1657:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1625:6:11"},"nodeType":"YulFunctionCall","src":"1625:34:11"},"nodeType":"YulExpressionStatement","src":"1625:34:11"},{"nodeType":"YulAssignment","src":"1668:15:11","value":{"name":"array","nodeType":"YulIdentifier","src":"1678:5:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1668:6:11"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"853:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"864:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"876:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"884:6:11","type":""}],"src":"799:890:11"},{"body":{"nodeType":"YulBlock","src":"1793:149:11","statements":[{"nodeType":"YulAssignment","src":"1803:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1815:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1826:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1811:3:11"},"nodeType":"YulFunctionCall","src":"1811:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1803:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1845:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1860:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1868:66:11","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1856:3:11"},"nodeType":"YulFunctionCall","src":"1856:79:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1838:6:11"},"nodeType":"YulFunctionCall","src":"1838:98:11"},"nodeType":"YulExpressionStatement","src":"1838:98:11"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1762:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1773:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1784:4:11","type":""}],"src":"1694:248:11"},{"body":{"nodeType":"YulBlock","src":"2012:83:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2029:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2038:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2045:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2034:3:11"},"nodeType":"YulFunctionCall","src":"2034:54:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2022:6:11"},"nodeType":"YulFunctionCall","src":"2022:67:11"},"nodeType":"YulExpressionStatement","src":"2022:67:11"}]},"name":"abi_encode_contract_IWrappedNativeToken","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1996:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2003:3:11","type":""}],"src":"1947:148:11"},{"body":{"nodeType":"YulBlock","src":"2228:125:11","statements":[{"nodeType":"YulAssignment","src":"2238:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2250:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2261:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2246:3:11"},"nodeType":"YulFunctionCall","src":"2246:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2238:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2280:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2295:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2303:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2291:3:11"},"nodeType":"YulFunctionCall","src":"2291:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:11"},"nodeType":"YulFunctionCall","src":"2273:74:11"},"nodeType":"YulExpressionStatement","src":"2273:74:11"}]},"name":"abi_encode_tuple_t_contract$_IWrappedNativeToken_$702__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2197:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2208:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2219:4:11","type":""}],"src":"2100:253:11"},{"body":{"nodeType":"YulBlock","src":"2451:97:11","statements":[{"body":{"nodeType":"YulBlock","src":"2498:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2507:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2510:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2500:6:11"},"nodeType":"YulFunctionCall","src":"2500:12:11"},"nodeType":"YulExpressionStatement","src":"2500:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2472:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2468:3:11"},"nodeType":"YulFunctionCall","src":"2468:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2493:3:11","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2464:3:11"},"nodeType":"YulFunctionCall","src":"2464:33:11"},"nodeType":"YulIf","src":"2461:53:11"},{"nodeType":"YulAssignment","src":"2523:19:11","value":{"name":"headStart","nodeType":"YulIdentifier","src":"2533:9:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2523:6:11"}]}]},"name":"abi_decode_tuple_t_struct$_Data_$789_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2417:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2428:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2440:6:11","type":""}],"src":"2358:190:11"},{"body":{"nodeType":"YulBlock","src":"2654:76:11","statements":[{"nodeType":"YulAssignment","src":"2664:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2676:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2687:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2672:3:11"},"nodeType":"YulFunctionCall","src":"2672:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2664:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2706:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"2717:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2699:6:11"},"nodeType":"YulFunctionCall","src":"2699:25:11"},"nodeType":"YulExpressionStatement","src":"2699:25:11"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2623:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2634:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2645:4:11","type":""}],"src":"2553:177:11"},{"body":{"nodeType":"YulBlock","src":"2863:515:11","statements":[{"body":{"nodeType":"YulBlock","src":"2909:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2918:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2921:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2911:6:11"},"nodeType":"YulFunctionCall","src":"2911:12:11"},"nodeType":"YulExpressionStatement","src":"2911:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2884:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2893:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2880:3:11"},"nodeType":"YulFunctionCall","src":"2880:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2905:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2876:3:11"},"nodeType":"YulFunctionCall","src":"2876:32:11"},"nodeType":"YulIf","src":"2873:52:11"},{"nodeType":"YulVariableDeclaration","src":"2934:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2961:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2948:12:11"},"nodeType":"YulFunctionCall","src":"2948:23:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2938:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2980:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2990:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2984:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3035:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3044:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3047:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3037:6:11"},"nodeType":"YulFunctionCall","src":"3037:12:11"},"nodeType":"YulExpressionStatement","src":"3037:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3023:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3031:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3020:2:11"},"nodeType":"YulFunctionCall","src":"3020:14:11"},"nodeType":"YulIf","src":"3017:34:11"},{"nodeType":"YulVariableDeclaration","src":"3060:32:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3074:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3085:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3070:3:11"},"nodeType":"YulFunctionCall","src":"3070:22:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3064:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3140:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3149:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3152:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3142:6:11"},"nodeType":"YulFunctionCall","src":"3142:12:11"},"nodeType":"YulExpressionStatement","src":"3142:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3119:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"3123:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3115:3:11"},"nodeType":"YulFunctionCall","src":"3115:13:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3130:7:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3111:3:11"},"nodeType":"YulFunctionCall","src":"3111:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3104:6:11"},"nodeType":"YulFunctionCall","src":"3104:35:11"},"nodeType":"YulIf","src":"3101:55:11"},{"nodeType":"YulVariableDeclaration","src":"3165:30:11","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3192:2:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3179:12:11"},"nodeType":"YulFunctionCall","src":"3179:16:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3169:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3222:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3231:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3234:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3224:6:11"},"nodeType":"YulFunctionCall","src":"3224:12:11"},"nodeType":"YulExpressionStatement","src":"3224:12:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3210:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3218:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3207:2:11"},"nodeType":"YulFunctionCall","src":"3207:14:11"},"nodeType":"YulIf","src":"3204:34:11"},{"body":{"nodeType":"YulBlock","src":"3301:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3310:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3313:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3303:6:11"},"nodeType":"YulFunctionCall","src":"3303:12:11"},"nodeType":"YulExpressionStatement","src":"3303:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3261:2:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3269:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3277:6:11","type":"","value":"0x0120"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3265:3:11"},"nodeType":"YulFunctionCall","src":"3265:19:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3257:3:11"},"nodeType":"YulFunctionCall","src":"3257:28:11"},{"kind":"number","nodeType":"YulLiteral","src":"3287:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3253:3:11"},"nodeType":"YulFunctionCall","src":"3253:37:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3292:7:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3250:2:11"},"nodeType":"YulFunctionCall","src":"3250:50:11"},"nodeType":"YulIf","src":"3247:70:11"},{"nodeType":"YulAssignment","src":"3326:21:11","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3340:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"3344:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3336:3:11"},"nodeType":"YulFunctionCall","src":"3336:11:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3326:6:11"}]},{"nodeType":"YulAssignment","src":"3356:16:11","value":{"name":"length","nodeType":"YulIdentifier","src":"3366:6:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3356:6:11"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_Data_$789_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2821:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2832:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2844:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2852:6:11","type":""}],"src":"2735:643:11"},{"body":{"nodeType":"YulBlock","src":"3453:110:11","statements":[{"body":{"nodeType":"YulBlock","src":"3499:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3508:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3511:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3501:6:11"},"nodeType":"YulFunctionCall","src":"3501:12:11"},"nodeType":"YulExpressionStatement","src":"3501:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3474:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3483:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3470:3:11"},"nodeType":"YulFunctionCall","src":"3470:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3495:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3466:3:11"},"nodeType":"YulFunctionCall","src":"3466:32:11"},"nodeType":"YulIf","src":"3463:52:11"},{"nodeType":"YulAssignment","src":"3524:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3547:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3534:12:11"},"nodeType":"YulFunctionCall","src":"3534:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3524:6:11"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3419:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3430:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3442:6:11","type":""}],"src":"3383:180:11"},{"body":{"nodeType":"YulBlock","src":"3611:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3628:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3637:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3644:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3633:3:11"},"nodeType":"YulFunctionCall","src":"3633:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3621:6:11"},"nodeType":"YulFunctionCall","src":"3621:35:11"},"nodeType":"YulExpressionStatement","src":"3621:35:11"}]},"name":"abi_encode_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3595:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3602:3:11","type":""}],"src":"3568:94:11"},{"body":{"nodeType":"YulBlock","src":"3794:185:11","statements":[{"nodeType":"YulAssignment","src":"3804:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3816:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3827:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3812:3:11"},"nodeType":"YulFunctionCall","src":"3812:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3804:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3846:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3861:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3869:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3857:3:11"},"nodeType":"YulFunctionCall","src":"3857:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3839:6:11"},"nodeType":"YulFunctionCall","src":"3839:74:11"},"nodeType":"YulExpressionStatement","src":"3839:74:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3933:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3944:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3929:3:11"},"nodeType":"YulFunctionCall","src":"3929:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3953:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3961:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3949:3:11"},"nodeType":"YulFunctionCall","src":"3949:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3922:6:11"},"nodeType":"YulFunctionCall","src":"3922:51:11"},"nodeType":"YulExpressionStatement","src":"3922:51:11"}]},"name":"abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3755:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3766:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3774:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3785:4:11","type":""}],"src":"3667:312:11"},{"body":{"nodeType":"YulBlock","src":"4054:110:11","statements":[{"body":{"nodeType":"YulBlock","src":"4100:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4109:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4112:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4102:6:11"},"nodeType":"YulFunctionCall","src":"4102:12:11"},"nodeType":"YulExpressionStatement","src":"4102:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4075:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4084:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4071:3:11"},"nodeType":"YulFunctionCall","src":"4071:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4096:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4067:3:11"},"nodeType":"YulFunctionCall","src":"4067:32:11"},"nodeType":"YulIf","src":"4064:52:11"},{"nodeType":"YulAssignment","src":"4125:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4148:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4135:12:11"},"nodeType":"YulFunctionCall","src":"4135:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4125:6:11"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4020:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4031:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4043:6:11","type":""}],"src":"3984:180:11"},{"body":{"nodeType":"YulBlock","src":"4296:125:11","statements":[{"nodeType":"YulAssignment","src":"4306:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4318:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4329:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4314:3:11"},"nodeType":"YulFunctionCall","src":"4314:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4306:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4348:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4363:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4371:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4359:3:11"},"nodeType":"YulFunctionCall","src":"4359:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4341:6:11"},"nodeType":"YulFunctionCall","src":"4341:74:11"},"nodeType":"YulExpressionStatement","src":"4341:74:11"}]},"name":"abi_encode_tuple_t_contract$_ICoWSwapSettlement_$685__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4265:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4276:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4287:4:11","type":""}],"src":"4169:252:11"},{"body":{"nodeType":"YulBlock","src":"4458:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4475:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4478:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4468:6:11"},"nodeType":"YulFunctionCall","src":"4468:88:11"},"nodeType":"YulExpressionStatement","src":"4468:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4572:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4575:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4565:6:11"},"nodeType":"YulFunctionCall","src":"4565:15:11"},"nodeType":"YulExpressionStatement","src":"4565:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4596:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4599:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4589:6:11"},"nodeType":"YulFunctionCall","src":"4589:15:11"},"nodeType":"YulExpressionStatement","src":"4589:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4426:184:11"},{"body":{"nodeType":"YulBlock","src":"4663:77:11","statements":[{"nodeType":"YulAssignment","src":"4673:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4684:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"4687:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4680:3:11"},"nodeType":"YulFunctionCall","src":"4680:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4673:3:11"}]},{"body":{"nodeType":"YulBlock","src":"4712:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4714:16:11"},"nodeType":"YulFunctionCall","src":"4714:18:11"},"nodeType":"YulExpressionStatement","src":"4714:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4704:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"4707:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4701:2:11"},"nodeType":"YulFunctionCall","src":"4701:10:11"},"nodeType":"YulIf","src":"4698:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4646:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"4649:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4655:3:11","type":""}],"src":"4615:125:11"},{"body":{"nodeType":"YulBlock","src":"4793:115:11","statements":[{"nodeType":"YulAssignment","src":"4803:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4825:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4812:12:11"},"nodeType":"YulFunctionCall","src":"4812:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4803:5:11"}]},{"body":{"nodeType":"YulBlock","src":"4886:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4895:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4898:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4888:6:11"},"nodeType":"YulFunctionCall","src":"4888:12:11"},"nodeType":"YulExpressionStatement","src":"4888:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4854:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4865:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4872:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4861:3:11"},"nodeType":"YulFunctionCall","src":"4861:22:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4851:2:11"},"nodeType":"YulFunctionCall","src":"4851:33:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4844:6:11"},"nodeType":"YulFunctionCall","src":"4844:41:11"},"nodeType":"YulIf","src":"4841:61:11"}]},"name":"abi_decode_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4772:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4783:5:11","type":""}],"src":"4745:163:11"},{"body":{"nodeType":"YulBlock","src":"4982:115:11","statements":[{"body":{"nodeType":"YulBlock","src":"5028:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5037:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5040:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5030:6:11"},"nodeType":"YulFunctionCall","src":"5030:12:11"},"nodeType":"YulExpressionStatement","src":"5030:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5003:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5012:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4999:3:11"},"nodeType":"YulFunctionCall","src":"4999:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5024:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4995:3:11"},"nodeType":"YulFunctionCall","src":"4995:32:11"},"nodeType":"YulIf","src":"4992:52:11"},{"nodeType":"YulAssignment","src":"5053:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5081:9:11"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"5063:17:11"},"nodeType":"YulFunctionCall","src":"5063:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5053:6:11"}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4948:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4959:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4971:6:11","type":""}],"src":"4913:184:11"},{"body":{"nodeType":"YulBlock","src":"5134:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5151:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5154:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5144:6:11"},"nodeType":"YulFunctionCall","src":"5144:88:11"},"nodeType":"YulExpressionStatement","src":"5144:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5248:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5251:4:11","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5241:6:11"},"nodeType":"YulFunctionCall","src":"5241:15:11"},"nodeType":"YulExpressionStatement","src":"5241:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5272:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5275:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5265:6:11"},"nodeType":"YulFunctionCall","src":"5265:15:11"},"nodeType":"YulExpressionStatement","src":"5265:15:11"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"5102:184:11"},{"body":{"nodeType":"YulBlock","src":"5410:145:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5427:3:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5440:2:11","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"5444:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5436:3:11"},"nodeType":"YulFunctionCall","src":"5436:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"5453:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5432:3:11"},"nodeType":"YulFunctionCall","src":"5432:88:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5420:6:11"},"nodeType":"YulFunctionCall","src":"5420:101:11"},"nodeType":"YulExpressionStatement","src":"5420:101:11"},{"nodeType":"YulAssignment","src":"5530:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5541:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5546:2:11","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5537:3:11"},"nodeType":"YulFunctionCall","src":"5537:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5530:3:11"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5386:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5391:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5402:3:11","type":""}],"src":"5291:264:11"},{"body":{"nodeType":"YulBlock","src":"5607:113:11","statements":[{"nodeType":"YulAssignment","src":"5617:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5639:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5626:12:11"},"nodeType":"YulFunctionCall","src":"5626:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5617:5:11"}]},{"body":{"nodeType":"YulBlock","src":"5698:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5707:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5710:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5700:6:11"},"nodeType":"YulFunctionCall","src":"5700:12:11"},"nodeType":"YulExpressionStatement","src":"5700:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5668:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5686:1:11","type":"","value":"7"},{"name":"value","nodeType":"YulIdentifier","src":"5689:5:11"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"5675:10:11"},"nodeType":"YulFunctionCall","src":"5675:20:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5665:2:11"},"nodeType":"YulFunctionCall","src":"5665:31:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5658:6:11"},"nodeType":"YulFunctionCall","src":"5658:39:11"},"nodeType":"YulIf","src":"5655:59:11"}]},"name":"abi_decode_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5586:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5597:5:11","type":""}],"src":"5560:160:11"},{"body":{"nodeType":"YulBlock","src":"5793:114:11","statements":[{"body":{"nodeType":"YulBlock","src":"5839:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5848:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5851:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5841:6:11"},"nodeType":"YulFunctionCall","src":"5841:12:11"},"nodeType":"YulExpressionStatement","src":"5841:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5814:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5823:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5810:3:11"},"nodeType":"YulFunctionCall","src":"5810:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5835:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5806:3:11"},"nodeType":"YulFunctionCall","src":"5806:32:11"},"nodeType":"YulIf","src":"5803:52:11"},{"nodeType":"YulAssignment","src":"5864:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:11"}],"functionName":{"name":"abi_decode_int64","nodeType":"YulIdentifier","src":"5874:16:11"},"nodeType":"YulFunctionCall","src":"5874:27:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5864:6:11"}]}]},"name":"abi_decode_tuple_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5759:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5770:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5782:6:11","type":""}],"src":"5725:182:11"},{"body":{"nodeType":"YulBlock","src":"6053:192:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6070:3:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6079:3:11","type":"","value":"192"},{"name":"value0","nodeType":"YulIdentifier","src":"6084:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6075:3:11"},"nodeType":"YulFunctionCall","src":"6075:16:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6063:6:11"},"nodeType":"YulFunctionCall","src":"6063:29:11"},"nodeType":"YulExpressionStatement","src":"6063:29:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6112:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6117:1:11","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6108:3:11"},"nodeType":"YulFunctionCall","src":"6108:11:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6129:3:11","type":"","value":"224"},{"name":"value1","nodeType":"YulIdentifier","src":"6134:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6125:3:11"},"nodeType":"YulFunctionCall","src":"6125:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"6143:66:11","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6121:3:11"},"nodeType":"YulFunctionCall","src":"6121:89:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6101:6:11"},"nodeType":"YulFunctionCall","src":"6101:110:11"},"nodeType":"YulExpressionStatement","src":"6101:110:11"},{"nodeType":"YulAssignment","src":"6220:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6231:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6236:2:11","type":"","value":"12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6227:3:11"},"nodeType":"YulFunctionCall","src":"6227:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6220:3:11"}]}]},"name":"abi_encode_tuple_packed_t_int64_t_uint32__to_t_int64_t_uint32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6021:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6026:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6034:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6045:3:11","type":""}],"src":"5912:333:11"},{"body":{"nodeType":"YulBlock","src":"6307:147:11","statements":[{"nodeType":"YulAssignment","src":"6317:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6339:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6326:12:11"},"nodeType":"YulFunctionCall","src":"6326:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6317:5:11"}]},{"body":{"nodeType":"YulBlock","src":"6432:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6441:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6444:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6434:6:11"},"nodeType":"YulFunctionCall","src":"6434:12:11"},"nodeType":"YulExpressionStatement","src":"6434:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6368:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6379:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6386:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6375:3:11"},"nodeType":"YulFunctionCall","src":"6375:54:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6365:2:11"},"nodeType":"YulFunctionCall","src":"6365:65:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6358:6:11"},"nodeType":"YulFunctionCall","src":"6358:73:11"},"nodeType":"YulIf","src":"6355:93:11"}]},"name":"abi_decode_contract_IERC20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6286:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6297:5:11","type":""}],"src":"6250:204:11"},{"body":{"nodeType":"YulBlock","src":"6505:114:11","statements":[{"nodeType":"YulAssignment","src":"6515:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6537:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6524:12:11"},"nodeType":"YulFunctionCall","src":"6524:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6515:5:11"}]},{"body":{"nodeType":"YulBlock","src":"6597:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6606:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6609:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6599:6:11"},"nodeType":"YulFunctionCall","src":"6599:12:11"},"nodeType":"YulExpressionStatement","src":"6599:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6566:5:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6587:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6580:6:11"},"nodeType":"YulFunctionCall","src":"6580:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6573:6:11"},"nodeType":"YulFunctionCall","src":"6573:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6563:2:11"},"nodeType":"YulFunctionCall","src":"6563:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6556:6:11"},"nodeType":"YulFunctionCall","src":"6556:40:11"},"nodeType":"YulIf","src":"6553:60:11"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6484:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6495:5:11","type":""}],"src":"6459:160:11"},{"body":{"nodeType":"YulBlock","src":"6715:774:11","statements":[{"body":{"nodeType":"YulBlock","src":"6762:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6771:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6774:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6764:6:11"},"nodeType":"YulFunctionCall","src":"6764:12:11"},"nodeType":"YulExpressionStatement","src":"6764:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6736:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6745:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6732:3:11"},"nodeType":"YulFunctionCall","src":"6732:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6757:3:11","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6728:3:11"},"nodeType":"YulFunctionCall","src":"6728:33:11"},"nodeType":"YulIf","src":"6725:53:11"},{"nodeType":"YulVariableDeclaration","src":"6787:35:11","value":{"arguments":[],"functionName":{"name":"allocate_memory_1555","nodeType":"YulIdentifier","src":"6800:20:11"},"nodeType":"YulFunctionCall","src":"6800:22:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6791:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6838:5:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6872:9:11"}],"functionName":{"name":"abi_decode_contract_IERC20","nodeType":"YulIdentifier","src":"6845:26:11"},"nodeType":"YulFunctionCall","src":"6845:37:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6831:6:11"},"nodeType":"YulFunctionCall","src":"6831:52:11"},"nodeType":"YulExpressionStatement","src":"6831:52:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6903:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6910:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6899:3:11"},"nodeType":"YulFunctionCall","src":"6899:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6957:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:11"},"nodeType":"YulFunctionCall","src":"6942:18:11"}],"functionName":{"name":"abi_decode_contract_IERC20","nodeType":"YulIdentifier","src":"6915:26:11"},"nodeType":"YulFunctionCall","src":"6915:46:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6892:6:11"},"nodeType":"YulFunctionCall","src":"6892:70:11"},"nodeType":"YulExpressionStatement","src":"6892:70:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6982:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6989:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6978:3:11"},"nodeType":"YulFunctionCall","src":"6978:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7011:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7022:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7007:3:11"},"nodeType":"YulFunctionCall","src":"7007:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6994:12:11"},"nodeType":"YulFunctionCall","src":"6994:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6971:6:11"},"nodeType":"YulFunctionCall","src":"6971:56:11"},"nodeType":"YulExpressionStatement","src":"6971:56:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7047:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7054:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7043:3:11"},"nodeType":"YulFunctionCall","src":"7043:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7076:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7087:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7072:3:11"},"nodeType":"YulFunctionCall","src":"7072:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7059:12:11"},"nodeType":"YulFunctionCall","src":"7059:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7036:6:11"},"nodeType":"YulFunctionCall","src":"7036:56:11"},"nodeType":"YulExpressionStatement","src":"7036:56:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7112:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7119:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7108:3:11"},"nodeType":"YulFunctionCall","src":"7108:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7142:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7153:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7138:3:11"},"nodeType":"YulFunctionCall","src":"7138:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7125:12:11"},"nodeType":"YulFunctionCall","src":"7125:33:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7101:6:11"},"nodeType":"YulFunctionCall","src":"7101:58:11"},"nodeType":"YulExpressionStatement","src":"7101:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7179:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7186:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7175:3:11"},"nodeType":"YulFunctionCall","src":"7175:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7209:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7220:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7205:3:11"},"nodeType":"YulFunctionCall","src":"7205:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7192:12:11"},"nodeType":"YulFunctionCall","src":"7192:33:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7168:6:11"},"nodeType":"YulFunctionCall","src":"7168:58:11"},"nodeType":"YulExpressionStatement","src":"7168:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7246:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7253:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:11"},"nodeType":"YulFunctionCall","src":"7242:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7281:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7292:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7277:3:11"},"nodeType":"YulFunctionCall","src":"7277:19:11"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"7259:17:11"},"nodeType":"YulFunctionCall","src":"7259:38:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7235:6:11"},"nodeType":"YulFunctionCall","src":"7235:63:11"},"nodeType":"YulExpressionStatement","src":"7235:63:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7318:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7325:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7314:3:11"},"nodeType":"YulFunctionCall","src":"7314:15:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7351:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7362:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7347:3:11"},"nodeType":"YulFunctionCall","src":"7347:19:11"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"7331:15:11"},"nodeType":"YulFunctionCall","src":"7331:36:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7307:6:11"},"nodeType":"YulFunctionCall","src":"7307:61:11"},"nodeType":"YulExpressionStatement","src":"7307:61:11"},{"nodeType":"YulVariableDeclaration","src":"7377:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7387:3:11","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7381:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7410:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7417:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7406:3:11"},"nodeType":"YulFunctionCall","src":"7406:14:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7443:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7454:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7439:3:11"},"nodeType":"YulFunctionCall","src":"7439:18:11"}],"functionName":{"name":"abi_decode_int64","nodeType":"YulIdentifier","src":"7422:16:11"},"nodeType":"YulFunctionCall","src":"7422:36:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7399:6:11"},"nodeType":"YulFunctionCall","src":"7399:60:11"},"nodeType":"YulExpressionStatement","src":"7399:60:11"},{"nodeType":"YulAssignment","src":"7468:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"7478:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7468:6:11"}]}]},"name":"abi_decode_tuple_t_struct$_Data_$789_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6681:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6692:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6704:6:11","type":""}],"src":"6624:865:11"},{"body":{"nodeType":"YulBlock","src":"7526:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7543:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7546:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7536:6:11"},"nodeType":"YulFunctionCall","src":"7536:88:11"},"nodeType":"YulExpressionStatement","src":"7536:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7640:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7643:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7633:6:11"},"nodeType":"YulFunctionCall","src":"7633:15:11"},"nodeType":"YulExpressionStatement","src":"7633:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7664:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7667:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7657:6:11"},"nodeType":"YulFunctionCall","src":"7657:15:11"},"nodeType":"YulExpressionStatement","src":"7657:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7494:184:11"},{"body":{"nodeType":"YulBlock","src":"7730:148:11","statements":[{"body":{"nodeType":"YulBlock","src":"7821:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7823:16:11"},"nodeType":"YulFunctionCall","src":"7823:18:11"},"nodeType":"YulExpressionStatement","src":"7823:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7746:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7753:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7743:2:11"},"nodeType":"YulFunctionCall","src":"7743:77:11"},"nodeType":"YulIf","src":"7740:103:11"},{"nodeType":"YulAssignment","src":"7852:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7863:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7870:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7859:3:11"},"nodeType":"YulFunctionCall","src":"7859:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7852:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7712:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7722:3:11","type":""}],"src":"7683:195:11"},{"body":{"nodeType":"YulBlock","src":"7984:76:11","statements":[{"nodeType":"YulAssignment","src":"7994:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8006:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8017:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:11"},"nodeType":"YulFunctionCall","src":"8002:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7994:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8036:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"8047:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8029:6:11"},"nodeType":"YulFunctionCall","src":"8029:25:11"},"nodeType":"YulExpressionStatement","src":"8029:25:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7953:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7964:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7975:4:11","type":""}],"src":"7883:177:11"},{"body":{"nodeType":"YulBlock","src":"8256:14:11","statements":[{"nodeType":"YulAssignment","src":"8258:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"8265:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8258:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8240:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8248:3:11","type":""}],"src":"8065:205:11"},{"body":{"nodeType":"YulBlock","src":"8488:299:11","statements":[{"nodeType":"YulAssignment","src":"8498:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8510:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8521:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8506:3:11"},"nodeType":"YulFunctionCall","src":"8506:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8498:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8541:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"8552:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8534:6:11"},"nodeType":"YulFunctionCall","src":"8534:25:11"},"nodeType":"YulExpressionStatement","src":"8534:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8579:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8590:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8575:3:11"},"nodeType":"YulFunctionCall","src":"8575:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"8595:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8568:6:11"},"nodeType":"YulFunctionCall","src":"8568:34:11"},"nodeType":"YulExpressionStatement","src":"8568:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8622:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8633:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8618:3:11"},"nodeType":"YulFunctionCall","src":"8618:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"8638:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8611:6:11"},"nodeType":"YulFunctionCall","src":"8611:34:11"},"nodeType":"YulExpressionStatement","src":"8611:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8665:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8676:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8661:3:11"},"nodeType":"YulFunctionCall","src":"8661:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"8681:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8654:6:11"},"nodeType":"YulFunctionCall","src":"8654:34:11"},"nodeType":"YulExpressionStatement","src":"8654:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8708:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8719:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8704:3:11"},"nodeType":"YulFunctionCall","src":"8704:19:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8729:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8737:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8725:3:11"},"nodeType":"YulFunctionCall","src":"8725:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8697:6:11"},"nodeType":"YulFunctionCall","src":"8697:84:11"},"nodeType":"YulExpressionStatement","src":"8697:84:11"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8425:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8436:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8444:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8452:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8460:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8468:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8479:4:11","type":""}],"src":"8275:512:11"},{"body":{"nodeType":"YulBlock","src":"8833:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8850:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8869:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8862:6:11"},"nodeType":"YulFunctionCall","src":"8862:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8855:6:11"},"nodeType":"YulFunctionCall","src":"8855:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8843:6:11"},"nodeType":"YulFunctionCall","src":"8843:34:11"},"nodeType":"YulExpressionStatement","src":"8843:34:11"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8817:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8824:3:11","type":""}],"src":"8792:91:11"},{"body":{"nodeType":"YulBlock","src":"8937:432:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8947:26:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8967:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8961:5:11"},"nodeType":"YulFunctionCall","src":"8961:12:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8951:6:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8989:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8994:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8982:6:11"},"nodeType":"YulFunctionCall","src":"8982:19:11"},"nodeType":"YulExpressionStatement","src":"8982:19:11"},{"nodeType":"YulVariableDeclaration","src":"9010:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9019:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9014:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9081:110:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9095:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9105:4:11","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9099:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9137:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"9142:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9133:3:11"},"nodeType":"YulFunctionCall","src":"9133:11:11"},{"name":"_1","nodeType":"YulIdentifier","src":"9146:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9129:3:11"},"nodeType":"YulFunctionCall","src":"9129:20:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9165:5:11"},{"name":"i","nodeType":"YulIdentifier","src":"9172:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9161:3:11"},"nodeType":"YulFunctionCall","src":"9161:13:11"},{"name":"_1","nodeType":"YulIdentifier","src":"9176:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9157:3:11"},"nodeType":"YulFunctionCall","src":"9157:22:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9151:5:11"},"nodeType":"YulFunctionCall","src":"9151:29:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9122:6:11"},"nodeType":"YulFunctionCall","src":"9122:59:11"},"nodeType":"YulExpressionStatement","src":"9122:59:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9040:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"9043:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9037:2:11"},"nodeType":"YulFunctionCall","src":"9037:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9051:21:11","statements":[{"nodeType":"YulAssignment","src":"9053:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9062:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"9065:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9058:3:11"},"nodeType":"YulFunctionCall","src":"9058:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9053:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"9033:3:11","statements":[]},"src":"9029:162:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9215:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"9220:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9211:3:11"},"nodeType":"YulFunctionCall","src":"9211:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"9229:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9207:3:11"},"nodeType":"YulFunctionCall","src":"9207:27:11"},{"kind":"number","nodeType":"YulLiteral","src":"9236:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9200:6:11"},"nodeType":"YulFunctionCall","src":"9200:38:11"},"nodeType":"YulExpressionStatement","src":"9200:38:11"},{"nodeType":"YulAssignment","src":"9247:116:11","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9262:3:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9275:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9283:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9271:3:11"},"nodeType":"YulFunctionCall","src":"9271:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"9288:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9267:3:11"},"nodeType":"YulFunctionCall","src":"9267:88:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9258:3:11"},"nodeType":"YulFunctionCall","src":"9258:98:11"},{"kind":"number","nodeType":"YulLiteral","src":"9358:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:11"},"nodeType":"YulFunctionCall","src":"9254:109:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9247:3:11"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8914:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8921:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8929:3:11","type":""}],"src":"8888:481:11"},{"body":{"nodeType":"YulBlock","src":"9441:419:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9451:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9467:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9461:5:11"},"nodeType":"YulFunctionCall","src":"9461:12:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9455:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9511:168:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9532:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9535:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9525:6:11"},"nodeType":"YulFunctionCall","src":"9525:88:11"},"nodeType":"YulExpressionStatement","src":"9525:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9633:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9636:4:11","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9626:6:11"},"nodeType":"YulFunctionCall","src":"9626:15:11"},"nodeType":"YulExpressionStatement","src":"9626:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9661:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9664:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9654:6:11"},"nodeType":"YulFunctionCall","src":"9654:15:11"},"nodeType":"YulExpressionStatement","src":"9654:15:11"}]},"condition":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9495:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"9499:1:11","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9492:2:11"},"nodeType":"YulFunctionCall","src":"9492:9:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9485:6:11"},"nodeType":"YulFunctionCall","src":"9485:17:11"},"nodeType":"YulIf","src":"9482:197:11"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9695:3:11"},{"name":"_1","nodeType":"YulIdentifier","src":"9700:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9688:6:11"},"nodeType":"YulFunctionCall","src":"9688:15:11"},"nodeType":"YulExpressionStatement","src":"9688:15:11"},{"nodeType":"YulVariableDeclaration","src":"9712:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9742:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9749:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9738:3:11"},"nodeType":"YulFunctionCall","src":"9738:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9732:5:11"},"nodeType":"YulFunctionCall","src":"9732:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9716:12:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9775:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9780:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9771:3:11"},"nodeType":"YulFunctionCall","src":"9771:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"9787:4:11","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9764:6:11"},"nodeType":"YulFunctionCall","src":"9764:28:11"},"nodeType":"YulExpressionStatement","src":"9764:28:11"},{"nodeType":"YulAssignment","src":"9801:53:11","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9825:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9843:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9848:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9839:3:11"},"nodeType":"YulFunctionCall","src":"9839:14:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"9808:16:11"},"nodeType":"YulFunctionCall","src":"9808:46:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9801:3:11"}]}]},"name":"abi_encode_struct_OnchainSignature","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9418:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9425:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9433:3:11","type":""}],"src":"9374:486:11"},{"body":{"nodeType":"YulBlock","src":"10148:1376:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10158:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10168:3:11","type":"","value":"448"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10162:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10226:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10220:5:11"},"nodeType":"YulFunctionCall","src":"10220:13:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10235:9:11"}],"functionName":{"name":"abi_encode_contract_IWrappedNativeToken","nodeType":"YulIdentifier","src":"10180:39:11"},"nodeType":"YulFunctionCall","src":"10180:65:11"},"nodeType":"YulExpressionStatement","src":"10180:65:11"},{"nodeType":"YulVariableDeclaration","src":"10254:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10284:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10292:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10280:3:11"},"nodeType":"YulFunctionCall","src":"10280:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10274:5:11"},"nodeType":"YulFunctionCall","src":"10274:24:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10258:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10347:12:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10365:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10376:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10361:3:11"},"nodeType":"YulFunctionCall","src":"10361:20:11"}],"functionName":{"name":"abi_encode_contract_IWrappedNativeToken","nodeType":"YulIdentifier","src":"10307:39:11"},"nodeType":"YulFunctionCall","src":"10307:75:11"},"nodeType":"YulExpressionStatement","src":"10307:75:11"},{"nodeType":"YulVariableDeclaration","src":"10391:46:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10423:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10431:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10419:3:11"},"nodeType":"YulFunctionCall","src":"10419:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10413:5:11"},"nodeType":"YulFunctionCall","src":"10413:24:11"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"10395:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"10486:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10506:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10517:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10502:3:11"},"nodeType":"YulFunctionCall","src":"10502:20:11"}],"functionName":{"name":"abi_encode_contract_IWrappedNativeToken","nodeType":"YulIdentifier","src":"10446:39:11"},"nodeType":"YulFunctionCall","src":"10446:77:11"},"nodeType":"YulExpressionStatement","src":"10446:77:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10543:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10554:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10539:3:11"},"nodeType":"YulFunctionCall","src":"10539:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10571:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10579:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10567:3:11"},"nodeType":"YulFunctionCall","src":"10567:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10561:5:11"},"nodeType":"YulFunctionCall","src":"10561:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10532:6:11"},"nodeType":"YulFunctionCall","src":"10532:54:11"},"nodeType":"YulExpressionStatement","src":"10532:54:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10606:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10617:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10602:3:11"},"nodeType":"YulFunctionCall","src":"10602:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10634:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10642:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10630:3:11"},"nodeType":"YulFunctionCall","src":"10630:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10624:5:11"},"nodeType":"YulFunctionCall","src":"10624:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10595:6:11"},"nodeType":"YulFunctionCall","src":"10595:54:11"},"nodeType":"YulExpressionStatement","src":"10595:54:11"},{"nodeType":"YulVariableDeclaration","src":"10658:46:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10690:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10698:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10686:3:11"},"nodeType":"YulFunctionCall","src":"10686:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10680:5:11"},"nodeType":"YulFunctionCall","src":"10680:24:11"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"10662:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"10731:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10751:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10762:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10747:3:11"},"nodeType":"YulFunctionCall","src":"10747:20:11"}],"functionName":{"name":"abi_encode_uint32","nodeType":"YulIdentifier","src":"10713:17:11"},"nodeType":"YulFunctionCall","src":"10713:55:11"},"nodeType":"YulExpressionStatement","src":"10713:55:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10788:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10799:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10784:3:11"},"nodeType":"YulFunctionCall","src":"10784:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10816:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10824:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10812:3:11"},"nodeType":"YulFunctionCall","src":"10812:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10806:5:11"},"nodeType":"YulFunctionCall","src":"10806:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10777:6:11"},"nodeType":"YulFunctionCall","src":"10777:54:11"},"nodeType":"YulExpressionStatement","src":"10777:54:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10851:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10847:3:11"},"nodeType":"YulFunctionCall","src":"10847:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10879:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10887:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10875:3:11"},"nodeType":"YulFunctionCall","src":"10875:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10869:5:11"},"nodeType":"YulFunctionCall","src":"10869:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10840:6:11"},"nodeType":"YulFunctionCall","src":"10840:54:11"},"nodeType":"YulExpressionStatement","src":"10840:54:11"},{"nodeType":"YulVariableDeclaration","src":"10903:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10913:6:11","type":"","value":"0x0100"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"10907:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10939:9:11"},{"name":"_2","nodeType":"YulIdentifier","src":"10950:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10935:3:11"},"nodeType":"YulFunctionCall","src":"10935:18:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10965:6:11"},{"name":"_2","nodeType":"YulIdentifier","src":"10973:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10961:3:11"},"nodeType":"YulFunctionCall","src":"10961:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10955:5:11"},"nodeType":"YulFunctionCall","src":"10955:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10928:6:11"},"nodeType":"YulFunctionCall","src":"10928:50:11"},"nodeType":"YulExpressionStatement","src":"10928:50:11"},{"nodeType":"YulVariableDeclaration","src":"10987:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10997:6:11","type":"","value":"0x0120"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"10991:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11012:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11044:6:11"},{"name":"_3","nodeType":"YulIdentifier","src":"11052:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11040:3:11"},"nodeType":"YulFunctionCall","src":"11040:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11034:5:11"},"nodeType":"YulFunctionCall","src":"11034:22:11"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"11016:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"11081:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11101:9:11"},{"name":"_3","nodeType":"YulIdentifier","src":"11112:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11097:3:11"},"nodeType":"YulFunctionCall","src":"11097:18:11"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"11065:15:11"},"nodeType":"YulFunctionCall","src":"11065:51:11"},"nodeType":"YulExpressionStatement","src":"11065:51:11"},{"nodeType":"YulVariableDeclaration","src":"11125:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11135:6:11","type":"","value":"0x0140"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"11129:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11161:9:11"},{"name":"_4","nodeType":"YulIdentifier","src":"11172:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11157:3:11"},"nodeType":"YulFunctionCall","src":"11157:18:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11187:6:11"},{"name":"_4","nodeType":"YulIdentifier","src":"11195:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11183:3:11"},"nodeType":"YulFunctionCall","src":"11183:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11177:5:11"},"nodeType":"YulFunctionCall","src":"11177:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11150:6:11"},"nodeType":"YulFunctionCall","src":"11150:50:11"},"nodeType":"YulExpressionStatement","src":"11150:50:11"},{"nodeType":"YulVariableDeclaration","src":"11209:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11219:6:11","type":"","value":"0x0160"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"11213:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11245:9:11"},{"name":"_5","nodeType":"YulIdentifier","src":"11256:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11241:3:11"},"nodeType":"YulFunctionCall","src":"11241:18:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11271:6:11"},{"name":"_5","nodeType":"YulIdentifier","src":"11279:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11267:3:11"},"nodeType":"YulFunctionCall","src":"11267:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11261:5:11"},"nodeType":"YulFunctionCall","src":"11261:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11234:6:11"},"nodeType":"YulFunctionCall","src":"11234:50:11"},"nodeType":"YulExpressionStatement","src":"11234:50:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11304:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11315:3:11","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11300:3:11"},"nodeType":"YulFunctionCall","src":"11300:19:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11321:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11293:6:11"},"nodeType":"YulFunctionCall","src":"11293:31:11"},"nodeType":"YulExpressionStatement","src":"11293:31:11"},{"nodeType":"YulVariableDeclaration","src":"11333:76:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11382:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11394:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11405:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11390:3:11"},"nodeType":"YulFunctionCall","src":"11390:18:11"}],"functionName":{"name":"abi_encode_struct_OnchainSignature","nodeType":"YulIdentifier","src":"11347:34:11"},"nodeType":"YulFunctionCall","src":"11347:62:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11337:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11429:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11440:3:11","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11425:3:11"},"nodeType":"YulFunctionCall","src":"11425:19:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11450:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11458:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11446:3:11"},"nodeType":"YulFunctionCall","src":"11446:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11418:6:11"},"nodeType":"YulFunctionCall","src":"11418:51:11"},"nodeType":"YulExpressionStatement","src":"11418:51:11"},{"nodeType":"YulAssignment","src":"11478:40:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11503:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"11511:6:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"11486:16:11"},"nodeType":"YulFunctionCall","src":"11486:32:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11478:4:11"}]}]},"name":"abi_encode_tuple_t_struct$_Data_$977_memory_ptr_t_struct$_OnchainSignature_$648_memory_ptr_t_bytes_memory_ptr__to_t_struct$_Data_$977_memory_ptr_t_struct$_OnchainSignature_$648_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10101:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10112:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10120:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10128:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10139:4:11","type":""}],"src":"9865:1659:11"},{"body":{"nodeType":"YulBlock","src":"11648:98:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11665:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11676:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11658:6:11"},"nodeType":"YulFunctionCall","src":"11658:21:11"},"nodeType":"YulExpressionStatement","src":"11658:21:11"},{"nodeType":"YulAssignment","src":"11688:52:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11713:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11725:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11736:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11721:3:11"},"nodeType":"YulFunctionCall","src":"11721:18:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"11696:16:11"},"nodeType":"YulFunctionCall","src":"11696:44:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11688:4:11"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11617:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11628:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11639:4:11","type":""}],"src":"11529:217:11"},{"body":{"nodeType":"YulBlock","src":"11832:103:11","statements":[{"body":{"nodeType":"YulBlock","src":"11878:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11887:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11890:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11880:6:11"},"nodeType":"YulFunctionCall","src":"11880:12:11"},"nodeType":"YulExpressionStatement","src":"11880:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11853:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11862:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11849:3:11"},"nodeType":"YulFunctionCall","src":"11849:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"11874:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11845:3:11"},"nodeType":"YulFunctionCall","src":"11845:32:11"},"nodeType":"YulIf","src":"11842:52:11"},{"nodeType":"YulAssignment","src":"11903:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11919:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11913:5:11"},"nodeType":"YulFunctionCall","src":"11913:16:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11903:6:11"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11798:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11809:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11821:6:11","type":""}],"src":"11751:184:11"},{"body":{"nodeType":"YulBlock","src":"11972:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11989:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11992:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11982:6:11"},"nodeType":"YulFunctionCall","src":"11982:88:11"},"nodeType":"YulExpressionStatement","src":"11982:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12086:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12089:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12079:6:11"},"nodeType":"YulFunctionCall","src":"12079:15:11"},"nodeType":"YulExpressionStatement","src":"12079:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12110:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12113:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12103:6:11"},"nodeType":"YulFunctionCall","src":"12103:15:11"},"nodeType":"YulExpressionStatement","src":"12103:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"11940:184:11"},{"body":{"nodeType":"YulBlock","src":"12303:175:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12320:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12331:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12313:6:11"},"nodeType":"YulFunctionCall","src":"12313:21:11"},"nodeType":"YulExpressionStatement","src":"12313:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12354:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12365:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12350:3:11"},"nodeType":"YulFunctionCall","src":"12350:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"12370:2:11","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12343:6:11"},"nodeType":"YulFunctionCall","src":"12343:30:11"},"nodeType":"YulExpressionStatement","src":"12343:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12393:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12404:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12389:3:11"},"nodeType":"YulFunctionCall","src":"12389:18:11"},{"hexValue":"475076323a2075696420627566666572206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"12409:27:11","type":"","value":"GPv2: uid buffer overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12382:6:11"},"nodeType":"YulFunctionCall","src":"12382:55:11"},"nodeType":"YulExpressionStatement","src":"12382:55:11"},{"nodeType":"YulAssignment","src":"12446:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12458:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12469:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12454:3:11"},"nodeType":"YulFunctionCall","src":"12454:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12446:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cf3ee9bc7b6748f422a1179174dd87601433141f626f9880fbda28f36ca64306__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12280:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12294:4:11","type":""}],"src":"12129:349:11"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1555() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 288)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_contract_IWrappedNativeToken(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IWrappedNativeToken_$702__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_struct$_Data_$789_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := headStart\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Data_$789_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 0x0120)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_uint32(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_ICoWSwapSettlement_$685__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        end := add(pos, 20)\n    }\n    function abi_decode_int64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, signextend(7, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_int64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_int64(headStart)\n    }\n    function abi_encode_tuple_packed_t_int64_t_uint32__to_t_int64_t_uint32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(192, value0))\n        mstore(add(pos, 8), and(shl(224, value1), 0xffffffff00000000000000000000000000000000000000000000000000000000))\n        end := add(pos, 12)\n    }\n    function abi_decode_contract_IERC20(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Data_$789_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        let value := allocate_memory_1555()\n        mstore(value, abi_decode_contract_IERC20(headStart))\n        mstore(add(value, 32), abi_decode_contract_IERC20(add(headStart, 32)))\n        mstore(add(value, 64), calldataload(add(headStart, 64)))\n        mstore(add(value, 96), calldataload(add(headStart, 96)))\n        mstore(add(value, 128), calldataload(add(headStart, 128)))\n        mstore(add(value, 160), calldataload(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_uint32(add(headStart, 192)))\n        mstore(add(value, 224), abi_decode_bool(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), abi_decode_int64(add(headStart, _1)))\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_struct_OnchainSignature(value, pos) -> end\n    {\n        let _1 := mload(value)\n        if iszero(lt(_1, 2))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, _1)\n        let memberValue0 := mload(add(value, 0x20))\n        mstore(add(pos, 0x20), 0x40)\n        end := abi_encode_bytes(memberValue0, add(pos, 0x40))\n    }\n    function abi_encode_tuple_t_struct$_Data_$977_memory_ptr_t_struct$_OnchainSignature_$648_memory_ptr_t_bytes_memory_ptr__to_t_struct$_Data_$977_memory_ptr_t_struct$_OnchainSignature_$648_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := 448\n        abi_encode_contract_IWrappedNativeToken(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_contract_IWrappedNativeToken(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_contract_IWrappedNativeToken(memberValue0_1, add(headStart, 0x40))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        let memberValue0_2 := mload(add(value0, 0xa0))\n        abi_encode_uint32(memberValue0_2, add(headStart, 0xa0))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _2 := 0x0100\n        mstore(add(headStart, _2), mload(add(value0, _2)))\n        let _3 := 0x0120\n        let memberValue0_3 := mload(add(value0, _3))\n        abi_encode_bool(memberValue0_3, add(headStart, _3))\n        let _4 := 0x0140\n        mstore(add(headStart, _4), mload(add(value0, _4)))\n        let _5 := 0x0160\n        mstore(add(headStart, _5), mload(add(value0, _5)))\n        mstore(add(headStart, 384), _1)\n        let tail_1 := abi_encode_struct_OnchainSignature(value1, add(headStart, _1))\n        mstore(add(headStart, 416), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value2, tail_1)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_cf3ee9bc7b6748f422a1179174dd87601433141f626f9880fbda28f36ca64306__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"GPv2: uid buffer overflow\")\n        tail := add(headStart, 96)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"29":[{"length":32,"start":718},{"length":32,"start":3915}],"33":[{"length":32,"start":297},{"length":32,"start":1535},{"length":32,"start":1965},{"length":32,"start":2085},{"length":32,"start":3123},{"length":32,"start":4145}],"883":[{"length":32,"start":3063},{"length":32,"start":3289}]},"linkReferences":{},"object":"6080604052600436106100b55760003560e01c80637bc41b9611610069578063de0e9a3e1161004e578063de0e9a3e1461027c578063ea598cb01461029c578063ec30bb88146102bc57600080fd5b80637bc41b96146101c85780639c3f1e90146101e857600080fd5b8063322bba211161009a578063322bba21146101705780634c84c1c8146101915780634cb76498146101a857600080fd5b80631626ba7e146100c157806317fcb39b1461011757600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100e16100dc36600461126e565b6102f0565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561012357600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61018361017e36600461132b565b6103de565b60405190815260200161010e565b34801561019d57600080fd5b506101a6610720565b005b3480156101b457600080fd5b506101a66101c3366004611344565b61072b565b3480156101d457600080fd5b506101a66101e336600461132b565b610770565b3480156101f457600080fd5b5061024b6102033660046113ba565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835263ffffffff90911660208301520161010e565b34801561028857600080fd5b506101a66102973660046113ba565b61077e565b3480156102a857600080fd5b506101a66102b73660046113ba565b610821565b3480156102c857600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b60008281526020818152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff81168083527401000000000000000000000000000000000000000090910463ffffffff1692820192909252901580159061036f5750805173ffffffffffffffffffffffffffffffffffffffff90811614155b8015610385575042816020015163ffffffff1610155b156103b357507f1626ba7e0000000000000000000000000000000000000000000000000000000090506103d8565b507fffffffff0000000000000000000000000000000000000000000000000000000090505b92915050565b60006103f260a08301356040840135611402565b341461042a576040517f8b6ebb4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160400135600003610468576040517feaec5c9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4261047960e0840160c0850161142e565b63ffffffff1610156104b7576040517f89bb260100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152338152600090602081016104db60e0860160c0870161142e565b63ffffffff169052604080518082019091529091506000908082815260200130604051602001610536919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290529050600061057c61012086016101008701611462565b6020808501516040516105c393920160c09290921b825260e01b7fffffffff00000000000000000000000000000000000000000000000000000000166008820152600c0190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052835190915061063a906106337f000000000000000000000000000000000000000000000000000000000000000061062d368a90038a018a6114b1565b9061095b565b8484610b2a565b60008181526020819052604090205490945073ffffffffffffffffffffffffffffffffffffffff16156106a1576040517f56a1d2b2000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b505060008281526020818152604090912082518154929093015163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff90931692909217179055919050565b61072947610821565b565b60005b8181101561076b5761075983838381811061074b5761074b61154b565b905061012002016000610c2c565b806107638161157a565b91505061072e565b505050565b61077b816001610c2c565b50565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081a565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b604080516101808101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101608201529083015173ffffffffffffffffffffffffffffffffffffffff16610a0a576040517fefc9ccdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff168152602001846040015181526020018460600151815260200163ffffffff80168152602001846080015181526020018460a0015181526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018460e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9815250905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff167fcf5f9de2984132265203b5c335b25727702ca77262ff622e136baa7362bf1da9858585604051610b7693929190611676565b60405180910390a25050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f190100000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006002820152602281019190915260429020919050565b6000610c617f000000000000000000000000000000000000000000000000000000000000000061062d368690038601866114b1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a082209152604080517f190100000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600282015260228101929092526042909120600081815260208181529083902083518085019094525473ffffffffffffffffffffffffffffffffffffffff8082168086527401000000000000000000000000000000000000000090920463ffffffff1692850183905294955091934290911015911480610d8d5750815173ffffffffffffffffffffffffffffffffffffffff16155b80610db75750808015610db75750815173ffffffffffffffffffffffffffffffffffffffff163314155b15610dff578415610df7576040517ff8cc70ce00000000000000000000000000000000000000000000000000000000815260048101849052602401610698565b505050505050565b60008381526020818152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff1790558051603880825260608201909252918201818036833750505060a0860151909150610e7a90829086903090611149565b8115610ebc577fb8bad102ac8bbacfef31ff1c906ec6d951c230b4dce750bb0376b812ad35852a81604051610eaf9190611790565b60405180910390a1610f0b565b3373ffffffffffffffffffffffffffffffffffffffff167f195271068a288191e4b265c641a56b9832919f69e9e7d6c2f31ba40278aeb85a82604051610f029190611790565b60405180910390a25b6040517f2479fb6e00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632479fb6e90610f80908590600401611790565b6020604051808303816000875af1158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc391906117a3565b90506000808760600151838960e001510281610fe157610fe16117bc565b048860e00151039050808389606001510301915050804710156110a4576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815247820360048201819052907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561108a57600080fd5b505af115801561109e573d6000803e3d6000fd5b50505050505b845160405160009173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d80600081146110fd576040519150601f19603f3d011682016040523d82523d6000602084013e611102565b606091505b505090508061113d576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050565b60388451146111b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f77000000000000006044820152606401610698565b60388401526034830152602090910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715611219576112196111c6565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611266576112666111c6565b604052919050565b6000806040838503121561128157600080fd5b8235915060208084013567ffffffffffffffff808211156112a157600080fd5b818601915086601f8301126112b557600080fd5b8135818111156112c7576112c76111c6565b6112f7847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161121f565b9150808252878482850101111561130d57600080fd5b80848401858401376000848284010152508093505050509250929050565b6000610120828403121561133e57600080fd5b50919050565b6000806020838503121561135757600080fd5b823567ffffffffffffffff8082111561136f57600080fd5b818501915085601f83011261138357600080fd5b81358181111561139257600080fd5b866020610120830285010111156113a857600080fd5b60209290920196919550909350505050565b6000602082840312156113cc57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103d8576103d86113d3565b803563ffffffff8116811461142957600080fd5b919050565b60006020828403121561144057600080fd5b61144982611415565b9392505050565b8035600781900b811461142957600080fd5b60006020828403121561147457600080fd5b61144982611450565b803573ffffffffffffffffffffffffffffffffffffffff8116811461142957600080fd5b8035801515811461142957600080fd5b600061012082840312156114c457600080fd5b6114cc6111f5565b6114d58361147d565b81526114e36020840161147d565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261151c60c08401611415565b60c082015261152d60e084016114a1565b60e0820152610100611540818501611450565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115ab576115ab6113d3565b5060010190565b6000815180845260005b818110156115d8576020818501810151868301820152016115bc565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000815160028110611651577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8084525060208201516040602085015261166e60408501826115b2565b949350505050565b835173ffffffffffffffffffffffffffffffffffffffff16815260006101c060208601516116bc602085018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408601516116e4604085018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608401526080860151608084015260a086015161171060a085018263ffffffff169052565b5060c086015160c084015260e086015160e0840152610100808701518185015250610120808701516117458286018215159052565b505061014086810151908401526101608087015190840152610180830181905261177181840186611616565b90508281036101a084015261178681856115b2565b9695505050505050565b60208152600061144960208301846115b2565b6000602082840312156117b557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212200701ad44a33c4e8dc73d93f25a0454fa8a2b003f05d667bc30f8cb8d59fa1a9d64736f6c63430008100033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BC41B96 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0xDE0E9A3E GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xDE0E9A3E EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xEA598CB0 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xEC30BB88 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BC41B96 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x9C3F1E90 EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x322BBA21 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x322BBA21 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x4C84C1C8 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x4CB76498 EQ PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xBC JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x126E JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x720 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x10E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x36F JUMPI POP DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x385 JUMPI POP TIMESTAMP DUP2 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x3B3 JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x3D8 JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2 PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1402 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8B6EBB4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x0 SUB PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEAEC5C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH2 0x479 PUSH1 0xE0 DUP5 ADD PUSH1 0xC0 DUP6 ADD PUSH2 0x142E JUMP JUMPDEST PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x89BB260100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 DUP2 ADD PUSH2 0x4DB PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x142E JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x536 SWAP2 SWAP1 PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP1 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x57C PUSH2 0x120 DUP7 ADD PUSH2 0x100 DUP8 ADD PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5C3 SWAP4 SWAP3 ADD PUSH1 0xC0 SWAP3 SWAP1 SWAP3 SHL DUP3 MSTORE PUSH1 0xE0 SHL PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x8 DUP3 ADD MSTORE PUSH1 0xC ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP4 MLOAD SWAP1 SWAP2 POP PUSH2 0x63A SWAP1 PUSH2 0x633 PUSH32 0x0 PUSH2 0x62D CALLDATASIZE DUP11 SWAP1 SUB DUP11 ADD DUP11 PUSH2 0x14B1 JUMP JUMPDEST SWAP1 PUSH2 0x95B JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x56A1D2B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP3 SWAP1 SWAP4 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x729 SELFBALANCE PUSH2 0x821 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x76B JUMPI PUSH2 0x759 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x74B JUMPI PUSH2 0x74B PUSH2 0x154B JUMP JUMPDEST SWAP1 POP PUSH2 0x120 MUL ADD PUSH1 0x0 PUSH2 0xC2C JUMP JUMPDEST DUP1 PUSH2 0x763 DUP2 PUSH2 0x157A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x72E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x77B DUP2 PUSH1 0x1 PUSH2 0xC2C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C85C0337EBA1661327F94F3BF46C8A7F9311A563F4D5C948362567F5D8ED60C SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF9446B8E937D86F0BC87CAC73923491692B123CA5F8761908494703758206ADF PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x180 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH32 0xEFC9CCDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xFFFFFFFF DUP1 AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x80 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xA0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xF3B277728B3FEE749481EB3E0B3B48980DBBAB78658FC419025CB16EEE346775 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xE0 ADD MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A28E9363BB942B639270062AA6BB295F434BCDFC42C97267BF003F272060DC9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A28E9363BB942B639270062AA6BB295F434BCDFC42C97267BF003F272060DC9 DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF5F9DE2984132265203B5C335B25727702CA77262FF622E136BAA7362BF1DA9 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xB76 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP1 MLOAD PUSH32 0xD5A25BA2E97094AD7D83DC28A6572DA797D6B3E7FC6663BD93EFB789FC17E489 DUP3 MSTORE PUSH2 0x1A0 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x2 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH32 0x0 PUSH2 0x62D CALLDATASIZE DUP7 SWAP1 SUB DUP7 ADD DUP7 PUSH2 0x14B1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP1 MLOAD PUSH32 0xD5A25BA2E97094AD7D83DC28A6572DA797D6B3E7FC6663BD93EFB789FC17E489 DUP3 MSTORE PUSH2 0x1A0 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x2 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x42 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP7 MSTORE PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP3 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE SWAP5 SWAP6 POP SWAP2 SWAP4 TIMESTAMP SWAP1 SWAP2 LT ISZERO SWAP2 EQ DUP1 PUSH2 0xD8D JUMPI POP DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO JUMPDEST DUP1 PUSH2 0xDB7 JUMPI POP DUP1 DUP1 ISZERO PUSH2 0xDB7 JUMPI POP DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xDFF JUMPI DUP5 ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8CC70CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x698 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0x38 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP PUSH1 0xA0 DUP7 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xE7A SWAP1 DUP3 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH2 0x1149 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEBC JUMPI PUSH32 0xB8BAD102AC8BBACFEF31FF1C906EC6D951C230B4DCE750BB0376B812AD35852A DUP2 PUSH1 0x40 MLOAD PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF0B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x195271068A288191E4B265C641A56B9832919F69E9E7D6C2F31BA40278AEB85A DUP3 PUSH1 0x40 MLOAD PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2479FB6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0x2479FB6E SWAP1 PUSH2 0xF80 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x17A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP8 PUSH1 0x60 ADD MLOAD DUP4 DUP10 PUSH1 0xE0 ADD MLOAD MUL DUP2 PUSH2 0xFE1 JUMPI PUSH2 0xFE1 PUSH2 0x17BC JUMP JUMPDEST DIV DUP9 PUSH1 0xE0 ADD MLOAD SUB SWAP1 POP DUP1 DUP4 DUP10 PUSH1 0x60 ADD MLOAD SUB ADD SWAP2 POP POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SELFBALANCE DUP3 SUB PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x109E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST DUP5 MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D963F8800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x38 DUP5 MLOAD EQ PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x475076323A2075696420627566666572206F766572666C6F7700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x38 DUP5 ADD MSTORE PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1219 JUMPI PUSH2 0x1219 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1266 JUMPI PUSH2 0x1266 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C7 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0x12F7 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x121F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x130D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x136F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH2 0x120 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x13A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0x13D3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1449 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x7 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1449 DUP3 PUSH2 0x1450 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14CC PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x14D5 DUP4 PUSH2 0x147D JUMP JUMPDEST DUP2 MSTORE PUSH2 0x14E3 PUSH1 0x20 DUP5 ADD PUSH2 0x147D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x151C PUSH1 0xC0 DUP5 ADD PUSH2 0x1415 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x152D PUSH1 0xE0 DUP5 ADD PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x1540 DUP2 DUP6 ADD PUSH2 0x1450 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x15AB JUMPI PUSH2 0x15AB PUSH2 0x13D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15BC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x2 DUP2 LT PUSH2 0x1651 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP5 MSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x166E PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x15B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C0 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x16BC PUSH1 0x20 DUP6 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP7 ADD MLOAD PUSH2 0x16E4 PUSH1 0x40 DUP6 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH2 0x1710 PUSH1 0xA0 DUP6 ADD DUP3 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP8 ADD MLOAD DUP2 DUP6 ADD MSTORE POP PUSH2 0x120 DUP1 DUP8 ADD MLOAD PUSH2 0x1745 DUP3 DUP7 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x140 DUP7 DUP2 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x160 DUP1 DUP8 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0x1771 DUP2 DUP5 ADD DUP7 PUSH2 0x1616 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1786 DUP2 DUP6 PUSH2 0x15B2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1449 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD ADD 0xAD DIFFICULTY LOG3 EXTCODECOPY 0x4E DUP14 0xC7 RETURNDATASIZE SWAP4 CALLCODE GAS DIV SLOAD STATICCALL DUP11 0x2B STOP EXTCODEHASH SDIV 0xD6 PUSH8 0xBC30F8CB8D59FA1A SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ","sourceMap":"387:11161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10767:779;;;;;;;;;;-1:-1:-1;10767:779:0;;;;;:::i;:::-;;:::i;:::-;;;1868:66:11;1856:79;;;1838:98;;1826:2;1811:18;10767:779:0;;;;;;;;938:55;;;;;;;;;;;;;;;;;;2303:42:11;2291:55;;;2273:74;;2261:2;2246:18;938:55:0;2100:253:11;3395:1366:0;;;;;;:::i;:::-;;:::i;:::-;;;2699:25:11;;;2687:2;2672:18;3395:1366:0;2553:177:11;2328:72:0;;;;;;;;;;;;;:::i;:::-;;4803:235;;;;;;;;;;-1:-1:-1;4803:235:0;;;;;:::i;:::-;;:::i;5080:112::-;;;;;;;;;;-1:-1:-1;5080:112:0;;;;;:::i;:::-;;:::i;1490:58::-;;;;;;;;;;-1:-1:-1;1490:58:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:42:11;3857:55;;;3839:74;;3961:10;3949:23;;;3944:2;3929:18;;3922:51;3812:18;1490:58:0;3667:312:11;3260:93:0;;;;;;;;;;-1:-1:-1;3260:93:0;;;;;:::i;:::-;;:::i;2442:776::-;;;;;;;;;;-1:-1:-1;2442:776:0;;;;;:::i;:::-;;:::i;735:53::-;;;;;;;;;;;;;;;10767:779;10924:6;11148:17;;;;;;;;;;;11104:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11193:40;;;;11192:109;;-1:-1:-1;11251:15:0;;2845:17:6;11251:49:0;;;;;11192:109;:221;;;;;11397:15;11376:9;:17;;;:36;;;;11192:221;11175:365;;;-1:-1:-1;11445:22:0;;-1:-1:-1;11438:29:0;;11175:365;-1:-1:-1;11505:24:0;;-1:-1:-1;10767:779:0;;;;;:::o;3395:1366::-;3500:17;3550:34;3569:15;;;;3550:16;;;;:34;:::i;:::-;3537:9;:47;3533:105;;3607:20;;;;;;;;;;;;;;3533:105;3657:5;:16;;;3652:1;:21;3648:85;;3696:26;;;;;;;;;;;;;;3648:85;3817:15;3801:13;;;;;;;;:::i;:::-;:31;;;3797:92;;;3855:23;;;;;;;;;;;;;;3797:92;3945:85;;;;;;;;;3983:10;3945:85;;3899:43;;3945:85;;;4007:13;;;;;;;;:::i;:::-;3945:85;;;;4077:113;;;;;;;;;3899:131;;-1:-1:-1;4041:33:0;;4077:113;4041:33;4077:113;;;;4174:4;4149:31;;;;;;;5440:2:11;5436:15;;;;5453:66;5432:88;5420:101;;5546:2;5537:12;;5291:264;4149:31:0;;;;;;;;;;;;;;4077:113;;4041:149;-1:-1:-1;4307:17:0;4357:13;;;;;;;;:::i;:::-;4384:19;;;;;4327:86;;;;;;6079:3:11;6075:16;;;;6063:29;;6129:3;6125:16;6143:66;6121:89;6117:1;6108:11;;6101:110;6236:2;6227:12;;5912:333;4327:86:0;;;;;;;;;;;;;;4464:17;;4327:86;;-1:-1:-1;4436:150:0;;4495:40;4516:18;4495:20;;;;;;;:5;:20;:::i;:::-;;;:40::i;:::-;4549:9;4572:4;4436:14;:150::i;:::-;2618:1:6;4601:17:0;;;;;;;;;;:23;4424:162;;-1:-1:-1;4601:48:0;:23;:48;4597:116;;4672:30;;;;;;;;2699:25:11;;;2672:18;;4672:30:0;;;;;;;;4597:116;-1:-1:-1;;4723:6:0;:17;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;4730:9;3395:1366;-1:-1:-1;3395:1366:0:o;2328:72::-;2366:27;2371:21;2366:4;:27::i;:::-;2328:72::o;4803:235::-;4926:9;4921:111;4941:21;;;4921:111;;;4983:38;5000:10;;5011:1;5000:13;;;;;;;:::i;:::-;;;;;;5015:5;4983:16;:38::i;:::-;4964:3;;;;:::i;:::-;;;;4921:111;;;;4803:235;;:::o;5080:112::-;5156:29;5173:5;5180:4;5156:16;:29::i;:::-;5080:112;:::o;3260:93::-;3311:35;;;;;;;;2699:25:11;;;3311:18:0;:27;;;;;2672:18:11;;3311:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3260:93;:::o;2442:776::-;2746:12;2780:18;2764:41;;2826:6;2764:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1381:622:5;1782:200;;;474:117;1782:200;;;8534:25:11;715:28:5;8575:18:11;;;8568:34;;;;873:15:5;8618:18:11;;;8611:34;1707:9:5;8661:18:11;;;8654:34;;;8737:42;8725:55;;8704:19;;;8697:84;1477:7:5;;8506:19:11;;1782:200:5;;;;;;;;;;;;1755:241;;;;;;1736:260;;;1381:622;;;:::o;3435:2329:6:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3593:14:6;;;;:50;;3589:547;;4106:19;;;;;;;;;;;;;;3589:547;4326:1431;;;;;;;;4358:18;4326:1431;;;;;;4414:5;:14;;;4326:1431;;;;;;4465:5;:14;;;4326:1431;;;;;;4517:5;:16;;;4326:1431;;;;4573:5;:15;;;4326:1431;;;;5037:16;4326:1431;;;;;;5089:5;:13;;;4326:1431;;;;5139:5;:15;;;4326:1431;;;;5420:19;4326:1431;;;;5473:5;:23;;;4326:1431;;;;;;5624:23;4326:1431;;;;5693:23;4326:1431;;;4307:1450;;3435:2329;;;;:::o;1201:307:7:-;1380:7;1419:6;1404:46;;;1427:5;1434:9;1445:4;1404:46;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;5634:14:9;;5673:16;;5720:9;5702:28;;5778:3;5757:25;;5795:23;;6377:4;6371:11;6421:10;6395:37;;1478:22:7;6475:1:9;6452:25;;6445:50;6538:2;6515:26;;6508:46;;;;6611:2;6582:32;;;1460:41:7;-1:-1:-1;1201:307:7:o;5636:5089:0:-;5767:34;5804:62;5838:18;5804:20;;;;;;;:5;:20;:::i;:62::-;5634:14:9;;;5673:16;;5720:9;5702:28;;5778:3;5757:25;;5795:23;;6377:4;6371:11;;6421:10;6395:37;;5914:22:0;6475:1:9;6452:25;;6445:50;6538:2;6515:26;;6508:46;;;;6611:2;6582:32;;;-1:-1:-1;5992:17:0;;;-1:-1:-1;5992:17:0;;;;;;;5948:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;5634:14:9;;-1:-1:-1;6582:32:9;;6113:15:0;6092:36;;;;;6155:49;;:105;;-1:-1:-1;6220:15:0;;:40;;;6155:105;:166;;;;6277:10;:43;;;;-1:-1:-1;6291:15:0;;:29;;6310:10;6291:29;;6277:43;6138:370;;;6350:23;6346:152;;;6400:38;;;;;;;;2699:25:11;;;2672:18;;6400:38:0;2553:177:11;6346:152:0;6477:7;;;;5636:5089;;:::o;6346:152::-;6518:6;:17;;;;;;;;;;;:56;;;;2845:17:6;6518:56:0;;;6609:31;;4189:2:9;6609:31:0;;;;;;;;;;;;4189:2:9;;6609:31:0;;;-1:-1:-1;;;6741:20:0;;;;6585:55;;-1:-1:-1;6650:121:0;;6585:55;;6691:9;;6722:4;;6650:27;:121::i;:::-;6840:10;6836:401;;;6941:27;6959:8;6941:27;;;;;;:::i;:::-;;;;;;;;6836:401;;;7215:10;7193:33;;;7205:8;7193:33;;;;;;:::i;:::-;;;;;;;;6836:401;7270:40;;;;;7247:20;;7270:30;:17;:30;;;;:40;;7301:8;;7270:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7247:63;;8604:20;9375:23;9505:12;:23;;;9469:12;9444;:22;;;:37;9443:85;;;;;:::i;:::-;;9401:12;:22;;;:128;9375:154;;9888:15;9857:12;9815;:23;;;:54;:88;9784:119;;8634:1280;10046:12;10022:21;:36;10018:255;;;10219:43;;;;;10170:21;10155:36;;10219:43;;;2699:25:11;;;10155:36:0;10219:18;:27;;;;;2672:18:11;;10219:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10060:213;10018:255;10576:15;;10568:76;;10550:12;;10568:29;;;10605:12;;10550;10568:76;10550:12;10568:76;10605:12;10568:29;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10549:95;;;10659:7;10654:65;;10689:19;;;;;;;;;;;;;;10654:65;5757:4968;;;;;;;;5636:5089;;:::o;7270:1736:9:-;4189:2;7443:8;:15;:29;7435:67;;;;;;;12331:2:11;7435:67:9;;;12313:21:11;12370:2;12350:18;;;12343:30;12409:27;12389:18;;;12382:55;12454:18;;7435:67:9;12129:349:11;7435:67:9;8881:2;8867:17;;8860:34;8928:2;8914:17;;8907:32;8973:2;8959:17;;;8952:38;7270:1736::o;14:184:11:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:252;275:2;269:9;317:3;305:16;;351:18;336:34;;372:22;;;333:62;330:88;;;398:18;;:::i;:::-;434:2;427:22;203:252;:::o;460:334::-;531:2;525:9;587:2;577:13;;592:66;573:86;561:99;;690:18;675:34;;711:22;;;672:62;669:88;;;737:18;;:::i;:::-;773:2;766:22;460:334;;-1:-1:-1;460:334:11:o;799:890::-;876:6;884;937:2;925:9;916:7;912:23;908:32;905:52;;;953:1;950;943:12;905:52;989:9;976:23;966:33;;1018:2;1071;1060:9;1056:18;1043:32;1094:18;1135:2;1127:6;1124:14;1121:34;;;1151:1;1148;1141:12;1121:34;1189:6;1178:9;1174:22;1164:32;;1234:7;1227:4;1223:2;1219:13;1215:27;1205:55;;1256:1;1253;1246:12;1205:55;1292:2;1279:16;1314:2;1310;1307:10;1304:36;;;1320:18;;:::i;:::-;1362:112;1470:2;1401:66;1394:4;1390:2;1386:13;1382:86;1378:95;1362:112;:::i;:::-;1349:125;;1497:2;1490:5;1483:17;1537:7;1532:2;1527;1523;1519:11;1515:20;1512:33;1509:53;;;1558:1;1555;1548:12;1509:53;1613:2;1608;1604;1600:11;1595:2;1588:5;1584:14;1571:45;1657:1;1652:2;1647;1640:5;1636:14;1632:23;1625:34;;1678:5;1668:15;;;;;799:890;;;;;:::o;2358:190::-;2440:6;2493:3;2481:9;2472:7;2468:23;2464:33;2461:53;;;2510:1;2507;2500:12;2461:53;-1:-1:-1;2533:9:11;2358:190;-1:-1:-1;2358:190:11:o;2735:643::-;2844:6;2852;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;2961:9;2948:23;2990:18;3031:2;3023:6;3020:14;3017:34;;;3047:1;3044;3037:12;3017:34;3085:6;3074:9;3070:22;3060:32;;3130:7;3123:4;3119:2;3115:13;3111:27;3101:55;;3152:1;3149;3142:12;3101:55;3192:2;3179:16;3218:2;3210:6;3207:14;3204:34;;;3234:1;3231;3224:12;3204:34;3292:7;3287:2;3277:6;3269;3265:19;3261:2;3257:28;3253:37;3250:50;3247:70;;;3313:1;3310;3303:12;3247:70;3344:2;3336:11;;;;;3366:6;;-1:-1:-1;2735:643:11;;-1:-1:-1;;;;2735:643:11:o;3383:180::-;3442:6;3495:2;3483:9;3474:7;3470:23;3466:32;3463:52;;;3511:1;3508;3501:12;3463:52;-1:-1:-1;3534:23:11;;3383:180;-1:-1:-1;3383:180:11:o;4426:184::-;4478:77;4475:1;4468:88;4575:4;4572:1;4565:15;4599:4;4596:1;4589:15;4615:125;4680:9;;;4701:10;;;4698:36;;;4714:18;;:::i;4745:163::-;4812:20;;4872:10;4861:22;;4851:33;;4841:61;;4898:1;4895;4888:12;4841:61;4745:163;;;:::o;4913:184::-;4971:6;5024:2;5012:9;5003:7;4999:23;4995:32;4992:52;;;5040:1;5037;5030:12;4992:52;5063:28;5081:9;5063:28;:::i;:::-;5053:38;4913:184;-1:-1:-1;;;4913:184:11:o;5560:160::-;5626:20;;5686:1;5675:20;;;5665:31;;5655:59;;5710:1;5707;5700:12;5725:182;5782:6;5835:2;5823:9;5814:7;5810:23;5806:32;5803:52;;;5851:1;5848;5841:12;5803:52;5874:27;5891:9;5874:27;:::i;6250:204::-;6326:20;;6386:42;6375:54;;6365:65;;6355:93;;6444:1;6441;6434:12;6459:160;6524:20;;6580:13;;6573:21;6563:32;;6553:60;;6609:1;6606;6599:12;6624:865;6704:6;6757:3;6745:9;6736:7;6732:23;6728:33;6725:53;;;6774:1;6771;6764:12;6725:53;6800:22;;:::i;:::-;6845:37;6872:9;6845:37;:::i;:::-;6838:5;6831:52;6915:46;6957:2;6946:9;6942:18;6915:46;:::i;:::-;6910:2;6903:5;6899:14;6892:70;7022:2;7011:9;7007:18;6994:32;6989:2;6982:5;6978:14;6971:56;7087:2;7076:9;7072:18;7059:32;7054:2;7047:5;7043:14;7036:56;7153:3;7142:9;7138:19;7125:33;7119:3;7112:5;7108:15;7101:58;7220:3;7209:9;7205:19;7192:33;7186:3;7179:5;7175:15;7168:58;7259:38;7292:3;7281:9;7277:19;7259:38;:::i;:::-;7253:3;7246:5;7242:15;7235:63;7331:36;7362:3;7351:9;7347:19;7331:36;:::i;:::-;7325:3;7318:5;7314:15;7307:61;7387:3;7422:36;7454:2;7443:9;7439:18;7422:36;:::i;:::-;7406:14;;;7399:60;7410:5;6624:865;-1:-1:-1;;;6624:865:11:o;7494:184::-;7546:77;7543:1;7536:88;7643:4;7640:1;7633:15;7667:4;7664:1;7657:15;7683:195;7722:3;7753:66;7746:5;7743:77;7740:103;;7823:18;;:::i;:::-;-1:-1:-1;7870:1:11;7859:13;;7683:195::o;8888:481::-;8929:3;8967:5;8961:12;8994:6;8989:3;8982:19;9019:1;9029:162;9043:6;9040:1;9037:13;9029:162;;;9105:4;9161:13;;;9157:22;;9151:29;9133:11;;;9129:20;;9122:59;9058:12;9029:162;;;9033:3;9236:1;9229:4;9220:6;9215:3;9211:16;9207:27;9200:38;9358:4;9288:66;9283:2;9275:6;9271:15;9267:88;9262:3;9258:98;9254:109;9247:116;;;8888:481;;;;:::o;9374:486::-;9433:3;9467:5;9461:12;9499:1;9495:2;9492:9;9482:197;;9535:77;9532:1;9525:88;9636:4;9633:1;9626:15;9664:4;9661:1;9654:15;9482:197;9700:2;9695:3;9688:15;;9749:4;9742:5;9738:16;9732:23;9787:4;9780;9775:3;9771:14;9764:28;9808:46;9848:4;9843:3;9839:14;9825:12;9808:46;:::i;:::-;9801:53;9374:486;-1:-1:-1;;;;9374:486:11:o;9865:1659::-;10220:13;;2045:42;2034:54;2022:67;;10139:4;10168:3;10292:4;10284:6;10280:17;10274:24;10307:75;10376:4;10365:9;10361:20;10347:12;2045:42;2034:54;2022:67;;1947:148;10307:75;;10431:4;10423:6;10419:17;10413:24;10446:77;10517:4;10506:9;10502:20;10486:14;2045:42;2034:54;2022:67;;1947:148;10446:77;;10579:4;10571:6;10567:17;10561:24;10554:4;10543:9;10539:20;10532:54;10642:4;10634:6;10630:17;10624:24;10617:4;10606:9;10602:20;10595:54;10698:4;10690:6;10686:17;10680:24;10713:55;10762:4;10751:9;10747:20;10731:14;3644:10;3633:22;3621:35;;3568:94;10713:55;;10824:4;10816:6;10812:17;10806:24;10799:4;10788:9;10784:20;10777:54;10887:4;10879:6;10875:17;10869:24;10862:4;10851:9;10847:20;10840:54;10913:6;10973:2;10965:6;10961:15;10955:22;10950:2;10939:9;10935:18;10928:50;;10997:6;11052:2;11044:6;11040:15;11034:22;11065:51;11112:2;11101:9;11097:18;11081:14;8862:13;8855:21;8843:34;;8792:91;11065:51;-1:-1:-1;;11135:6:11;11183:15;;;11177:22;11157:18;;;11150:50;11219:6;11267:15;;;11261:22;11241:18;;;11234:50;11315:3;11300:19;;11293:31;;;11347:62;11390:18;;;11382:6;11347:62;:::i;:::-;11333:76;;11458:9;11450:6;11446:22;11440:3;11429:9;11425:19;11418:51;11486:32;11511:6;11503;11486:32;:::i;:::-;11478:40;9865:1659;-1:-1:-1;;;;;;9865:1659:11:o;11529:217::-;11676:2;11665:9;11658:21;11639:4;11696:44;11736:2;11725:9;11721:18;11713:6;11696:44;:::i;11751:184::-;11821:6;11874:2;11862:9;11853:7;11849:23;11845:32;11842:52;;;11890:1;11887;11880:12;11842:52;-1:-1:-1;11913:16:11;;11751:184;-1:-1:-1;11751:184:11:o;11940:::-;11992:77;11989:1;11982:88;12089:4;12086:1;12079:15;12113:4;12110:1;12103:15"},"methodIdentifiers":{"cowSwapSettlement()":"ec30bb88","createOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))":"322bba21","invalidateOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))":"7bc41b96","invalidateOrdersIgnoringNotAllowed((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64)[])":"4cb76498","isValidSignature(bytes32,bytes)":"1626ba7e","orders(bytes32)":"9c3f1e90","unwrap(uint256)":"de0e9a3e","wrap(uint256)":"ea598cb0","wrapAll()":"4c84c1c8","wrappedNativeToken()":"17fcb39b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICoWSwapSettlement\",\"name\":\"_cowSwapSettlement\",\"type\":\"address\"},{\"internalType\":\"contract IWrappedNativeToken\",\"name\":\"_wrappedNativeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EthTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectEthAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"NotAllowedToInvalidateOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllowedZeroSellAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderIsAlreadyExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderIsAlreadyOwned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReceiverMustBeSet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderUid\",\"type\":\"bytes\"}],\"name\":\"OrderInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ICoWSwapOnchainOrders.OnchainSigningScheme\",\"name\":\"scheme\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ICoWSwapOnchainOrders.OnchainSignature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"OrderPlacement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderUid\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refunder\",\"type\":\"address\"}],\"name\":\"OrderRefund\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cowSwapSettlement\",\"outputs\":[{\"internalType\":\"contract ICoWSwapSettlement\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"invalidateOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data[]\",\"name\":\"orderArray\",\"type\":\"tuple[]\"}],\"name\":\"invalidateOrdersIgnoringNotAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"contract IWrappedNativeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"errors\":{\"EthTransferFailed()\":[{\"details\":\"Error thrown when unsuccessfully sending ETH to an address.\"}],\"IncorrectEthAmount()\":[{\"details\":\"Error thrown when trying to create an order without sending the expected amount of ETH to this contract.\"}],\"NotAllowedToInvalidateOrder(bytes32)\":[{\"details\":\"Error thrown if trying to invalidate an order while not allowed.\"}],\"NotAllowedZeroSellAmount()\":[{\"details\":\"Error thrown when trying to create an order with a sell amount == 0\"}],\"OrderIsAlreadyExpired()\":[{\"details\":\"Error thrown when trying to create an order that would be expired at the time of creation\"}],\"OrderIsAlreadyOwned(bytes32)\":[{\"details\":\"Error thrown when trying to create a new order whose order hash is the same as an order hash that was already assigned.\"}],\"ReceiverMustBeSet()\":[{\"details\":\"Error returned if the receiver of the ETH flow order is unspecified (`GPv2Order.RECEIVER_SAME_AS_OWNER`).\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_cowSwapSettlement\":\"The CoW Swap settlement contract.\",\"_wrappedNativeToken\":\"The default native token in the current chain (e.g., WETH on mainnet).\"}},\"createOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))\":{\"details\":\"Function that creates and broadcasts an ETH flow order that sells native ETH. The order is paid for when the caller sends out the transaction. The caller takes ownership of the new order.\",\"params\":{\"order\":\"The data describing the order to be created. See [`EthFlowOrder.Data`] for extra information on each parameter.\"},\"returns\":{\"orderHash\":\"The hash of the CoW Swap order that is created to settle the new ETH order.\"}},\"invalidateOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))\":{\"details\":\"Marks an existing ETH-flow order as invalid and refunds the ETH that hasn't been traded yet. Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\",\"params\":{\"order\":\"Order to be invalidated.\"}},\"invalidateOrdersIgnoringNotAllowed((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64)[])\":{\"details\":\"Marks existing ETH-flow orders as invalid and, for each order, refunds the ETH that hasn't been traded yet. The function call will not revert, if some orders are not refundable. It will silently ignore these orders. Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\",\"params\":{\"orderArray\":\"Array of orders to be invalidated.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"EIP1271-compliant onchain signature verification function. This function is used by the CoW Swap settlement contract to determine if an order that is signed with an EIP1271 signature is valid. As this contract has approved the vault relayer contract, a valid signature for an order means that the order can be traded on CoW Swap.\",\"params\":{\"orderHash\":\"Hash of the order to be signed. This is the EIP-712 signing hash for the specified order as defined in the CoW Swap settlement contract.\",\"signature\":\"Signature byte array. This parameter is unused since as all information needed to verify if an order is already available onchain.\"},\"returns\":{\"_0\":\"Either the EIP-1271 \\\"magic value\\\" indicating success (0x1626ba7e) or a different value indicating failure (0xffffffff).\"}},\"unwrap(uint256)\":{\"details\":\"This function takes the specified amount of the chain's wrapped native token (e.g., WETH for mainnet) and converts it to its unwrapped version (e.g., ETH).\",\"params\":{\"amount\":\"The amount of wrapped native tokens to convert to native tokens.\"}},\"wrap(uint256)\":{\"details\":\"This function takes the specified amount of the chain's native token (e.g., ETH for mainnet) stored by this contract and converts it to its wrapped version (e.g., WETH).\",\"params\":{\"amount\":\"The amount of native tokens to convert to wrapped native tokens.\"}},\"wrapAll()\":{\"details\":\"This function reads the  chain's native token balance of this contract (e.g., ETH for mainnet) and converts\"}},\"stateVariables\":{\"cowSwapSettlement\":{\"details\":\"The address of the CoW Swap settlement contract that will be used to settle orders created by this contract.\"},\"orders\":{\"details\":\"Each ETH flow order as described in [`EthFlowOrder.Data`] can be converted to a CoW Swap order. Distinct CoW Swap orders have non-colliding order hashes. This mapping associates some extra data to a specific CoW Swap order. This data is stored onchain and is used to verify the ownership and validity of an ETH flow order. An ETH flow order can be settled onchain only if converting it to a CoW Swap order and hashing yields valid onchain data.\"},\"wrappedNativeToken\":{\"details\":\"The address of the contract representing the default native token in the current chain (e.g., WETH for Ethereum mainnet).\"}},\"title\":\"CoW Swap ETH Flow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CoWSwapEthFlow.sol\":\"CoWSwapEthFlow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/CoWSwapEthFlow.sol\":{\"keccak256\":\"0xf159f484cde74f4d7b23f90b4f0796b1dac266e962ba708bc45b15ace101e550\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://acf971429e595987d80bb7b288d85e90b5635b5cb4b35506f2ec9a63bba4ebf6\",\"dweb:/ipfs/Qmac83N3DyxFJtrEAyKjiiZxcHJoJHjjHcw4uNtBywLmR8\"]},\"src/interfaces/ICoWSwapEthFlow.sol\":{\"keccak256\":\"0x0b96c0c90c8560ef10a0acea608e9963264817d68ddf055f9bbeec0e3d8674cc\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cea7ba8506406d7e13a84ddca2b7ba9a0f8ee1429dceeea8cb13be3c2ad0904c\",\"dweb:/ipfs/QmaTxrUnxWUPgZExA7mEf1dSoic3oQobt3nDVGnqe47e5z\"]},\"src/interfaces/ICoWSwapOnchainOrders.sol\":{\"keccak256\":\"0x84faba3229db2f641f22b93e5f4fd0c66fead704dfbd3918952ec4e6365ad7b9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://426548c645e531f5bc1a7c5b2cecdee3eba0e2778cbd0086ea483ad9bb12bab8\",\"dweb:/ipfs/QmdqGi919potsKAio5fLTQFL9m24hdKDucgNU3T6nfVpUS\"]},\"src/interfaces/ICoWSwapSettlement.sol\":{\"keccak256\":\"0xcb5007f3259129930d32a273874a955ebf18135294a3a7cbff6e2e03318bb75a\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://dbd6e3f4a8bb893fc562cd44d7ca1d835dd53b7be05091653dfbcdd4f9541451\",\"dweb:/ipfs/Qmdv2KnRjuWB1J1uqVErdUPywGeAuhNwbhz2Reouf9kbi9\"]},\"src/interfaces/IWrappedNativeToken.sol\":{\"keccak256\":\"0x4c882eb1e51f16042510a69f55871d0553d0df69c749f2837d4892c7cc28eef9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ef65eb08eb3a44f383cc6a6cb3663bb651f6c1e24fe821d7f7537dde27fb223f\",\"dweb:/ipfs/QmVzrKmA8o58imqKWfbJ4pjGpTLe82GKZYU3baxVLAd7kW\"]},\"src/libraries/CoWSwapEip712.sol\":{\"keccak256\":\"0x961461c50fbf52171a62f74dcf64dd1b3d2ef2a79fb985edb482e75e6b1c5e0c\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6876c85f117b0c89339170fd365b98809f0e947aab3d3fff62a1c041bed86525\",\"dweb:/ipfs/QmeTPCEAJiYPwLjDErCnboCvgjPyBDo4neHHi7rycB5ra4\"]},\"src/libraries/EthFlowOrder.sol\":{\"keccak256\":\"0x9d0c70204f7743db7c54ab6106be0fef7f0eb6a0a489890e0b0b597a998d29f9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac3dd64f6ef8fde3f7eeb932f624a6176754ad1cd03680b57cf5bf6e84c8bdff\",\"dweb:/ipfs/QmR9o2BGcZhjMkDn1XCdHGaXhYVKhZwfjYDHPJq88UdB3t\"]},\"src/mixins/CoWSwapOnchainOrders.sol\":{\"keccak256\":\"0xbfe4db574a1928958f43534fd69e21a78010b6a9e6d44bd522e068de59399e64\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://720f7392e675b7b09a221f9ba5ea7f6dbfba0b4506907b53164e6f058d3a02b9\",\"dweb:/ipfs/QmeWUDeWPsmZwV4S8ZbxFAx4fDAPHYG8LivYjVWAo2Pn8x\"]},\"src/vendored/GPv2EIP1271.sol\":{\"keccak256\":\"0xf33b34139b7092e93750d56a367c2d2dcf43e44ac7cbe38e9d98110d311dcb8f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://09a6c1eb48cb02369876eb6753bf01e57beca5c964b64473acae18a8d16a4645\",\"dweb:/ipfs/QmXguETpngWGNX4QoqWzq6Qc9zEXWJvgxTmrUYiXBaoSea\"]},\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"}},"src/interfaces/ICoWSwapEthFlow.sol":{"ICoWSwapEthFlow":{"abi":[{"inputs":[],"name":"EthTransferFailed","type":"error"},{"inputs":[],"name":"IncorrectEthAmount","type":"error"},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"NotAllowedToInvalidateOrder","type":"error"},{"inputs":[],"name":"NotAllowedZeroSellAmount","type":"error"},{"inputs":[],"name":"OrderIsAlreadyExpired","type":"error"},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"OrderIsAlreadyOwned","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"orderUid","type":"bytes"},{"indexed":true,"internalType":"address","name":"refunder","type":"address"}],"name":"OrderRefund","type":"event"},{"inputs":[{"components":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"int64","name":"quoteId","type":"int64"}],"internalType":"struct EthFlowOrder.Data","name":"order","type":"tuple"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"int64","name":"quoteId","type":"int64"}],"internalType":"struct EthFlowOrder.Data","name":"order","type":"tuple"}],"name":"invalidateOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"int64","name":"quoteId","type":"int64"}],"internalType":"struct EthFlowOrder.Data[]","name":"orderArray","type":"tuple[]"}],"name":"invalidateOrdersIgnoringNotAllowed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unwrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"wrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wrapAll","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))":"322bba21","invalidateOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))":"7bc41b96","invalidateOrdersIgnoringNotAllowed((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64)[])":"4cb76498","isValidSignature(bytes32,bytes)":"1626ba7e","unwrap(uint256)":"de0e9a3e","wrap(uint256)":"ea598cb0","wrapAll()":"4c84c1c8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EthTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectEthAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"NotAllowedToInvalidateOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllowedZeroSellAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderIsAlreadyExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderIsAlreadyOwned\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderUid\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refunder\",\"type\":\"address\"}],\"name\":\"OrderRefund\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"invalidateOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data[]\",\"name\":\"orderArray\",\"type\":\"tuple[]\"}],\"name\":\"invalidateOrdersIgnoringNotAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"errors\":{\"EthTransferFailed()\":[{\"details\":\"Error thrown when unsuccessfully sending ETH to an address.\"}],\"IncorrectEthAmount()\":[{\"details\":\"Error thrown when trying to create an order without sending the expected amount of ETH to this contract.\"}],\"NotAllowedToInvalidateOrder(bytes32)\":[{\"details\":\"Error thrown if trying to invalidate an order while not allowed.\"}],\"NotAllowedZeroSellAmount()\":[{\"details\":\"Error thrown when trying to create an order with a sell amount == 0\"}],\"OrderIsAlreadyExpired()\":[{\"details\":\"Error thrown when trying to create an order that would be expired at the time of creation\"}],\"OrderIsAlreadyOwned(bytes32)\":[{\"details\":\"Error thrown when trying to create a new order whose order hash is the same as an order hash that was already assigned.\"}]},\"kind\":\"dev\",\"methods\":{\"createOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))\":{\"details\":\"Function that creates and broadcasts an ETH flow order that sells native ETH. The order is paid for when the caller sends out the transaction. The caller takes ownership of the new order.\",\"params\":{\"order\":\"The data describing the order to be created. See [`EthFlowOrder.Data`] for extra information on each parameter.\"},\"returns\":{\"orderHash\":\"The hash of the CoW Swap order that is created to settle the new ETH order.\"}},\"invalidateOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))\":{\"details\":\"Marks an existing ETH-flow order as invalid and refunds the ETH that hasn't been traded yet. Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\",\"params\":{\"order\":\"Order to be invalidated.\"}},\"invalidateOrdersIgnoringNotAllowed((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64)[])\":{\"details\":\"Marks existing ETH-flow orders as invalid and, for each order, refunds the ETH that hasn't been traded yet. The function call will not revert, if some orders are not refundable. It will silently ignore these orders. Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\",\"params\":{\"orderArray\":\"Array of orders to be invalidated.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"EIP1271-compliant onchain signature verification function. This function is used by the CoW Swap settlement contract to determine if an order that is signed with an EIP1271 signature is valid. As this contract has approved the vault relayer contract, a valid signature for an order means that the order can be traded on CoW Swap.\",\"params\":{\"orderHash\":\"Hash of the order to be signed. This is the EIP-712 signing hash for the specified order as defined in the CoW Swap settlement contract.\",\"signature\":\"Signature byte array. This parameter is unused since as all information needed to verify if an order is already available onchain.\"},\"returns\":{\"magicValue\":\"Either the EIP-1271 \\\"magic value\\\" indicating success (0x1626ba7e) or a different value indicating failure (0xffffffff).\"}},\"unwrap(uint256)\":{\"details\":\"This function takes the specified amount of the chain's wrapped native token (e.g., WETH for mainnet) and converts it to its unwrapped version (e.g., ETH).\",\"params\":{\"amount\":\"The amount of wrapped native tokens to convert to native tokens.\"}},\"wrap(uint256)\":{\"details\":\"This function takes the specified amount of the chain's native token (e.g., ETH for mainnet) stored by this contract and converts it to its wrapped version (e.g., WETH).\",\"params\":{\"amount\":\"The amount of native tokens to convert to wrapped native tokens.\"}},\"wrapAll()\":{\"details\":\"This function reads the  chain's native token balance of this contract (e.g., ETH for mainnet) and converts\"}},\"title\":\"CoW Swap ETH Flow Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICoWSwapEthFlow.sol\":\"ICoWSwapEthFlow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/interfaces/ICoWSwapEthFlow.sol\":{\"keccak256\":\"0x0b96c0c90c8560ef10a0acea608e9963264817d68ddf055f9bbeec0e3d8674cc\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cea7ba8506406d7e13a84ddca2b7ba9a0f8ee1429dceeea8cb13be3c2ad0904c\",\"dweb:/ipfs/QmaTxrUnxWUPgZExA7mEf1dSoic3oQobt3nDVGnqe47e5z\"]},\"src/libraries/EthFlowOrder.sol\":{\"keccak256\":\"0x9d0c70204f7743db7c54ab6106be0fef7f0eb6a0a489890e0b0b597a998d29f9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac3dd64f6ef8fde3f7eeb932f624a6176754ad1cd03680b57cf5bf6e84c8bdff\",\"dweb:/ipfs/QmR9o2BGcZhjMkDn1XCdHGaXhYVKhZwfjYDHPJq88UdB3t\"]},\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"},"ICoWSwapEthFlowEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"orderUid","type":"bytes"},{"indexed":true,"internalType":"address","name":"refunder","type":"address"}],"name":"OrderRefund","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderUid\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refunder\",\"type\":\"address\"}],\"name\":\"OrderRefund\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"events\":{\"OrderRefund(bytes,address)\":{\"details\":\"Event emitted to notify that an order was refunded. Note that this event is not fired every time the order is invalidated (even though the user receives all unspent ETH back). This is because we want to differenciate the case where the user invalidates a valid order and when the user receives back the funds from an expired order.\",\"params\":{\"orderUid\":\"CoW Swap's unique order identifier of the order that has been invalidated (and refunded).\",\"refunder\":\"The address that triggered the order refund.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"CoW Swap ETH Flow Event Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICoWSwapEthFlow.sol\":\"ICoWSwapEthFlowEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/interfaces/ICoWSwapEthFlow.sol\":{\"keccak256\":\"0x0b96c0c90c8560ef10a0acea608e9963264817d68ddf055f9bbeec0e3d8674cc\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cea7ba8506406d7e13a84ddca2b7ba9a0f8ee1429dceeea8cb13be3c2ad0904c\",\"dweb:/ipfs/QmaTxrUnxWUPgZExA7mEf1dSoic3oQobt3nDVGnqe47e5z\"]},\"src/libraries/EthFlowOrder.sol\":{\"keccak256\":\"0x9d0c70204f7743db7c54ab6106be0fef7f0eb6a0a489890e0b0b597a998d29f9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac3dd64f6ef8fde3f7eeb932f624a6176754ad1cd03680b57cf5bf6e84c8bdff\",\"dweb:/ipfs/QmR9o2BGcZhjMkDn1XCdHGaXhYVKhZwfjYDHPJq88UdB3t\"]},\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"}},"src/interfaces/ICoWSwapOnchainOrders.sol":{"ICoWSwapOnchainOrders":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"orderUid","type":"bytes"}],"name":"OrderInvalidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"components":[{"internalType":"contract IERC20","name":"sellToken","type":"address"},{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"bytes32","name":"kind","type":"bytes32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"bytes32","name":"sellTokenBalance","type":"bytes32"},{"internalType":"bytes32","name":"buyTokenBalance","type":"bytes32"}],"indexed":false,"internalType":"struct GPv2Order.Data","name":"order","type":"tuple"},{"components":[{"internalType":"enum ICoWSwapOnchainOrders.OnchainSigningScheme","name":"scheme","type":"uint8"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false,"internalType":"struct ICoWSwapOnchainOrders.OnchainSignature","name":"signature","type":"tuple"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"OrderPlacement","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderUid\",\"type\":\"bytes\"}],\"name\":\"OrderInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ICoWSwapOnchainOrders.OnchainSigningScheme\",\"name\":\"scheme\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ICoWSwapOnchainOrders.OnchainSignature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"OrderPlacement\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"events\":{\"OrderInvalidation(bytes)\":{\"details\":\"Event emitted to notify that an order was invalidated.\",\"params\":{\"orderUid\":\"CoW Swap's unique order identifier of the order that has been invalidated.\"}},\"OrderPlacement(address,(address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32),(uint8,bytes),bytes)\":{\"details\":\"Event emitted to broadcast an order onchain.\",\"params\":{\"data\":\"Any extra data that should be passed along with the order. This will be used by the services that collects onchain orders and no specific encoding is enforced on this field. It is supposed to encode extra information that is not included in the order data so that it can be passed along when decoding an onchain order. As an example, a contract that creates orders on behalf of a user could set a different expiration date than the one specified in the order.\",\"order\":\"Information on the order that is created in this transacion. The order is expected to be a valid order for the CoW Swap settlement contract and contain all information needed to settle it in a batch.\",\"sender\":\"The user who triggered the creation of the order. Note that this address does *not* need to be the actual owner of the order and does not need to be related to the order or signature in any way. For example, if a smart contract creates orders on behalf of the user, then the sender would be the user who triggers the creation of the order, while the actual owner of the order would be the smart contract that creates it.\",\"signature\":\"The signature that can be used to verify the newly created order. Note that it is always possible to recover the owner of the order from a valid signature.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"CoW Swap Onchain Order Creator Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICoWSwapOnchainOrders.sol\":\"ICoWSwapOnchainOrders\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/interfaces/ICoWSwapOnchainOrders.sol\":{\"keccak256\":\"0x84faba3229db2f641f22b93e5f4fd0c66fead704dfbd3918952ec4e6365ad7b9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://426548c645e531f5bc1a7c5b2cecdee3eba0e2778cbd0086ea483ad9bb12bab8\",\"dweb:/ipfs/QmdqGi919potsKAio5fLTQFL9m24hdKDucgNU3T6nfVpUS\"]},\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"}},"src/interfaces/ICoWSwapSettlement.sol":{"ICoWSwapSettlement":{"abi":[{"inputs":[{"internalType":"bytes","name":"orderUid","type":"bytes"}],"name":"filledAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vaultRelayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"filledAmount(bytes)":"2479fb6e","vaultRelayer()":"9b552cc2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"orderUid\",\"type\":\"bytes\"}],\"name\":\"filledAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRelayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"details\":\"This interface collects the functions of the CoW Swap settlement contract that are used by the ETH flow contract.\",\"kind\":\"dev\",\"methods\":{\"filledAmount(bytes)\":{\"details\":\"Map each user order by UID to the amount that has been filled so far. If this amount is larger than or equal to the amount traded in the order (amount sold for sell orders, amount bought for buy orders) then the order cannot be traded anymore. If the order is fill or kill, then this value is only used to determine whether the order has already been executed.\",\"params\":{\"orderUid\":\"The uinique identifier to use to retrieve the filled amount.\"}},\"vaultRelayer()\":{\"details\":\"The address of the vault relayer: the contract that handles withdrawing tokens from the user to the settlement contract. A user who wants to sell a token on CoW Swap must approve this contract to spend the token.\"}},\"title\":\"CoW Swap Settlement Contract Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICoWSwapSettlement.sol\":\"ICoWSwapSettlement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/interfaces/ICoWSwapSettlement.sol\":{\"keccak256\":\"0xcb5007f3259129930d32a273874a955ebf18135294a3a7cbff6e2e03318bb75a\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://dbd6e3f4a8bb893fc562cd44d7ca1d835dd53b7be05091653dfbcdd4f9541451\",\"dweb:/ipfs/Qmdv2KnRjuWB1J1uqVErdUPywGeAuhNwbhz2Reouf9kbi9\"]}},\"version\":1}"}},"src/interfaces/IWrappedNativeToken.sol":{"IWrappedNativeToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"deposit()\":{\"details\":\"Deposit native token in exchange for wrapped netive tokens.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256)\":{\"details\":\"Burn wrapped native tokens in exchange for native tokens.\",\"params\":{\"amount\":\"Amount of wrapped tokens to exchange for native tokens.\"}}},\"title\":\"CoW Swap Wrapped Native Token Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IWrappedNativeToken.sol\":\"IWrappedNativeToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/interfaces/IWrappedNativeToken.sol\":{\"keccak256\":\"0x4c882eb1e51f16042510a69f55871d0553d0df69c749f2837d4892c7cc28eef9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ef65eb08eb3a44f383cc6a6cb3663bb651f6c1e24fe821d7f7537dde27fb223f\",\"dweb:/ipfs/QmVzrKmA8o58imqKWfbJ4pjGpTLe82GKZYU3baxVLAd7kW\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"}},"src/libraries/CoWSwapEip712.sol":{"CoWSwapEip712":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3c4e9862f33f311a32bd73c8db3e1dc76ea31bae458f96ce37ae731b8a62eb364736f6c63430008100033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xC4 0xE9 DUP7 0x2F CALLER RETURN GT LOG3 0x2B 0xD7 EXTCODECOPY DUP14 0xB3 0xE1 0xDC PUSH23 0xEA31BAE458F96CE37AE731B8A62EB364736F6C63430008 LT STOP CALLER ","sourceMap":"311:1694:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;311:1694:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3c4e9862f33f311a32bd73c8db3e1dc76ea31bae458f96ce37ae731b8a62eb364736f6c63430008100033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xC4 0xE9 DUP7 0x2F CALLER RETURN GT LOG3 0x2B 0xD7 EXTCODECOPY DUP14 0xB3 0xE1 0xDC PUSH23 0xEA31BAE458F96CE37AE731B8A62EB364736F6C63430008 LT STOP CALLER ","sourceMap":"311:1694:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"details\":\"The code in this contract was largely taken from: <https://raw.githubusercontent.com/cowprotocol/contracts/v1.0.0/src/contracts/mixins/GPv2Signing.sol>\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"DOMAIN_NAME\":{\"details\":\"The EIP-712 domain name used for computing the domain separator.\"},\"DOMAIN_TYPE_HASH\":{\"details\":\"The EIP-712 domain type hash used for computing the domain separator.\"},\"DOMAIN_VERSION\":{\"details\":\"The EIP-712 domain version used for computing the domain separator.\"}},\"title\":\"CoW Swap EIP-712 Encoding Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/CoWSwapEip712.sol\":\"CoWSwapEip712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/libraries/CoWSwapEip712.sol\":{\"keccak256\":\"0x961461c50fbf52171a62f74dcf64dd1b3d2ef2a79fb985edb482e75e6b1c5e0c\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6876c85f117b0c89339170fd365b98809f0e947aab3d3fff62a1c041bed86525\",\"dweb:/ipfs/QmeTPCEAJiYPwLjDErCnboCvgjPyBDo4neHHi7rycB5ra4\"]}},\"version\":1}"}},"src/libraries/EthFlowOrder.sol":{"EthFlowOrder":{"abi":[{"inputs":[],"name":"ReceiverMustBeSet","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220325d108e1322b500472cfee5331f98b7db256d7eb1732c3bf564cac3da9a760b64736f6c63430008100033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x5D LT DUP15 SGT 0x22 0xB5 STOP SELFBALANCE 0x2C INVALID 0xE5 CALLER 0x1F SWAP9 0xB7 0xDB 0x25 PUSH14 0x7EB1732C3BF564CAC3DA9A760B64 PUSH20 0x6F6C634300081000330000000000000000000000 ","sourceMap":"214:5552:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;214:5552:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220325d108e1322b500472cfee5331f98b7db256d7eb1732c3bf564cac3da9a760b64736f6c63430008100033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x5D LT DUP15 SGT 0x22 0xB5 STOP SELFBALANCE 0x2C INVALID 0xE5 CALLER 0x1F SWAP9 0xB7 0xDB 0x25 PUSH14 0x7EB1732C3BF564CAC3DA9A760B64 PUSH20 0x6F6C634300081000330000000000000000000000 ","sourceMap":"214:5552:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReceiverMustBeSet\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"errors\":{\"ReceiverMustBeSet()\":[{\"details\":\"Error returned if the receiver of the ETH flow order is unspecified (`GPv2Order.RECEIVER_SAME_AS_OWNER`).\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"INVALIDATED_OWNER\":{\"details\":\"An order that is owned by this address is an order that has been invalidated. Note that this address cannot be directly used to create orders.\"},\"NO_OWNER\":{\"details\":\"An order that is owned by this address is an order that has not yet been assigned.\"}},\"title\":\"CoW Swap ETH Flow Order Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/EthFlowOrder.sol\":\"EthFlowOrder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/libraries/EthFlowOrder.sol\":{\"keccak256\":\"0x9d0c70204f7743db7c54ab6106be0fef7f0eb6a0a489890e0b0b597a998d29f9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac3dd64f6ef8fde3f7eeb932f624a6176754ad1cd03680b57cf5bf6e84c8bdff\",\"dweb:/ipfs/QmR9o2BGcZhjMkDn1XCdHGaXhYVKhZwfjYDHPJq88UdB3t\"]},\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"}},"src/mixins/CoWSwapOnchainOrders.sol":{"CoWSwapOnchainOrders":{"abi":[{"inputs":[{"internalType":"address","name":"settlementContractAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"orderUid","type":"bytes"}],"name":"OrderInvalidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"components":[{"internalType":"contract IERC20","name":"sellToken","type":"address"},{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"buyAmount","type":"uint256"},{"internalType":"uint32","name":"validTo","type":"uint32"},{"internalType":"bytes32","name":"appData","type":"bytes32"},{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"bytes32","name":"kind","type":"bytes32"},{"internalType":"bool","name":"partiallyFillable","type":"bool"},{"internalType":"bytes32","name":"sellTokenBalance","type":"bytes32"},{"internalType":"bytes32","name":"buyTokenBalance","type":"bytes32"}],"indexed":false,"internalType":"struct GPv2Order.Data","name":"order","type":"tuple"},{"components":[{"internalType":"enum ICoWSwapOnchainOrders.OnchainSigningScheme","name":"scheme","type":"uint8"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false,"internalType":"struct ICoWSwapOnchainOrders.OnchainSignature","name":"signature","type":"tuple"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"OrderPlacement","type":"event"}],"evm":{"bytecode":{"functionDebugData":{"@_897":{"entryPoint":null,"id":897,"parameterSlots":1,"returnSlots":0},"@domainSeparator_747":{"entryPoint":75,"id":747,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:800:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:11","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:11"},"nodeType":"YulFunctionCall","src":"143:12:11"},"nodeType":"YulExpressionStatement","src":"143:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:11"},"nodeType":"YulFunctionCall","src":"112:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:11"},"nodeType":"YulFunctionCall","src":"108:32:11"},"nodeType":"YulIf","src":"105:52:11"},{"nodeType":"YulVariableDeclaration","src":"166:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:11"},"nodeType":"YulFunctionCall","src":"179:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:11"},"nodeType":"YulFunctionCall","src":"260:12:11"},"nodeType":"YulExpressionStatement","src":"260:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:11"},"nodeType":"YulFunctionCall","src":"239:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:11"},"nodeType":"YulFunctionCall","src":"235:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:11"},"nodeType":"YulFunctionCall","src":"224:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:11"},"nodeType":"YulFunctionCall","src":"214:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:11"},"nodeType":"YulFunctionCall","src":"207:50:11"},"nodeType":"YulIf","src":"204:70:11"},{"nodeType":"YulAssignment","src":"283:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:11"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:11","type":""}],"src":"14:290:11"},{"body":{"nodeType":"YulBlock","src":"522:276:11","statements":[{"nodeType":"YulAssignment","src":"532:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"544:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"555:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"540:3:11"},"nodeType":"YulFunctionCall","src":"540:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"532:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"575:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"586:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"568:6:11"},"nodeType":"YulFunctionCall","src":"568:25:11"},"nodeType":"YulExpressionStatement","src":"568:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"613:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"624:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"609:3:11"},"nodeType":"YulFunctionCall","src":"609:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"629:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"602:6:11"},"nodeType":"YulFunctionCall","src":"602:34:11"},"nodeType":"YulExpressionStatement","src":"602:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"656:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"667:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:11"},"nodeType":"YulFunctionCall","src":"652:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"672:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"645:6:11"},"nodeType":"YulFunctionCall","src":"645:34:11"},"nodeType":"YulExpressionStatement","src":"645:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"699:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"710:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"695:3:11"},"nodeType":"YulFunctionCall","src":"695:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"715:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"688:6:11"},"nodeType":"YulFunctionCall","src":"688:34:11"},"nodeType":"YulExpressionStatement","src":"688:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"742:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"753:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"738:3:11"},"nodeType":"YulFunctionCall","src":"738:19:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"763:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"779:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"784:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"775:3:11"},"nodeType":"YulFunctionCall","src":"775:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"788:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"771:3:11"},"nodeType":"YulFunctionCall","src":"771:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"759:3:11"},"nodeType":"YulFunctionCall","src":"759:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"731:6:11"},"nodeType":"YulFunctionCall","src":"731:61:11"},"nodeType":"YulExpressionStatement","src":"731:61:11"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"459:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"470:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"478:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"486:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"494:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"502:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"513:4:11","type":""}],"src":"309:489:11"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161024338038061024383398101604081905261002f916100fe565b6100428161004b60201b6100091760201c565b6080525061012e565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf606082015246608082018190526001600160a01b03831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b60006020828403121561011057600080fd5b81516001600160a01b038116811461012757600080fd5b9392505050565b60805160ff6101446000396000505060ff6000f3fe6080604052600080fd5b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c0016040516020818303038152906040528051906020012091505091905056fea2646970667358221220da0eea0efc58c66dd0ee46f97c6a9e47dfe44b92ee5f26bb1856ac388472ff2c64736f6c63430008100033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x243 CODESIZE SUB DUP1 PUSH2 0x243 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x42 DUP2 PUSH2 0x4B PUSH1 0x20 SHL PUSH2 0x9 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C85C0337EBA1661327F94F3BF46C8A7F9311A563F4D5C948362567F5D8ED60C SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF9446B8E937D86F0BC87CAC73923491692B123CA5F8761908494703758206ADF PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xFF PUSH2 0x144 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0xFF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C85C0337EBA1661327F94F3BF46C8A7F9311A563F4D5C948362567F5D8ED60C SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF9446B8E937D86F0BC87CAC73923491692B123CA5F8761908494703758206ADF PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xE 0xEA 0xE 0xFC PC 0xC6 PUSH14 0xD0EE46F97C6A9E47DFE44B92EE5F 0x26 0xBB XOR JUMP 0xAC CODESIZE DUP5 PUSH19 0xFF2C64736F6C63430008100033000000000000 ","sourceMap":"285:1225:7:-:0;;;687:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;769:78;812:25;769:29;;;;;:78;;:::i;:::-;744:103;;-1:-1:-1;285:1225:7;;1381:622:5;1782:200;;;474:117;1782:200;;;568:25:11;715:28:5;609:18:11;;;602:34;;;;873:15:5;652:18:11;;;645:34;1707:9:5;695:18:11;;;688:34;;;-1:-1:-1;;;;;759:32:11;;738:19;;;731:61;1477:7:5;;540:19:11;;1782:200:5;;;;;;;;;;;;1755:241;;;;;;1736:260;;;1381:622;;;:::o;14:290:11:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:11:o;309:489::-;285:1225:7;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@domainSeparator_747":{"entryPoint":9,"id":747,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:528:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"227:299:11","statements":[{"nodeType":"YulAssignment","src":"237:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"260:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"245:3:11"},"nodeType":"YulFunctionCall","src":"245:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"237:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"280:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"291:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"273:6:11"},"nodeType":"YulFunctionCall","src":"273:25:11"},"nodeType":"YulExpressionStatement","src":"273:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"318:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"329:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"314:3:11"},"nodeType":"YulFunctionCall","src":"314:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"334:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"307:6:11"},"nodeType":"YulFunctionCall","src":"307:34:11"},"nodeType":"YulExpressionStatement","src":"307:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"361:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"372:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"357:3:11"},"nodeType":"YulFunctionCall","src":"357:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"377:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"350:6:11"},"nodeType":"YulFunctionCall","src":"350:34:11"},"nodeType":"YulExpressionStatement","src":"350:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"404:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"415:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"420:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"393:6:11"},"nodeType":"YulFunctionCall","src":"393:34:11"},"nodeType":"YulExpressionStatement","src":"393:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"447:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"458:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"443:3:11"},"nodeType":"YulFunctionCall","src":"443:19:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"468:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"476:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"464:3:11"},"nodeType":"YulFunctionCall","src":"464:55:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"436:6:11"},"nodeType":"YulFunctionCall","src":"436:84:11"},"nodeType":"YulExpressionStatement","src":"436:84:11"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"164:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"175:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"183:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"191:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"199:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"207:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"218:4:11","type":""}],"src":"14:512:11"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fd5b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c0016040516020818303038152906040528051906020012091505091905056fea2646970667358221220da0eea0efc58c66dd0ee46f97c6a9e47dfe44b92ee5f26bb1856ac388472ff2c64736f6c63430008100033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C85C0337EBA1661327F94F3BF46C8A7F9311A563F4D5C948362567F5D8ED60C SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF9446B8E937D86F0BC87CAC73923491692B123CA5F8761908494703758206ADF PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xE 0xEA 0xE 0xFC PC 0xC6 PUSH14 0xD0EE46F97C6A9E47DFE44B92EE5F 0x26 0xBB XOR JUMP 0xAC CODESIZE DUP5 PUSH19 0xFF2C64736F6C63430008100033000000000000 ","sourceMap":"285:1225:7:-:0;;;;;;1381:622:5;1782:200;;;474:117;1782:200;;;273:25:11;715:28:5;314:18:11;;;307:34;;;;873:15:5;357:18:11;;;350:34;1707:9:5;400:18:11;;;393:34;;;476:42;464:55;;443:19;;;436:84;1477:7:5;;245:19:11;;1782:200:5;;;;;;;;;;;;1755:241;;;;;;1736:260;;;1381:622;;;:::o"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderUid\",\"type\":\"bytes\"}],\"name\":\"OrderInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ICoWSwapOnchainOrders.OnchainSigningScheme\",\"name\":\"scheme\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ICoWSwapOnchainOrders.OnchainSignature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"OrderPlacement\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"settlementContractAddress\":\"The address of CoW Swap's settlement contract on the chain where this contract is deployed.\"}}},\"stateVariables\":{\"cowSwapDomainSeparator\":{\"details\":\"The domain separator for the CoW Swap settlement contract.\"}},\"title\":\"CoW Swap Onchain Order Creator Event Emitter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mixins/CoWSwapOnchainOrders.sol\":\"CoWSwapOnchainOrders\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/interfaces/ICoWSwapOnchainOrders.sol\":{\"keccak256\":\"0x84faba3229db2f641f22b93e5f4fd0c66fead704dfbd3918952ec4e6365ad7b9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://426548c645e531f5bc1a7c5b2cecdee3eba0e2778cbd0086ea483ad9bb12bab8\",\"dweb:/ipfs/QmdqGi919potsKAio5fLTQFL9m24hdKDucgNU3T6nfVpUS\"]},\"src/libraries/CoWSwapEip712.sol\":{\"keccak256\":\"0x961461c50fbf52171a62f74dcf64dd1b3d2ef2a79fb985edb482e75e6b1c5e0c\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6876c85f117b0c89339170fd365b98809f0e947aab3d3fff62a1c041bed86525\",\"dweb:/ipfs/QmeTPCEAJiYPwLjDErCnboCvgjPyBDo4neHHi7rycB5ra4\"]},\"src/mixins/CoWSwapOnchainOrders.sol\":{\"keccak256\":\"0xbfe4db574a1928958f43534fd69e21a78010b6a9e6d44bd522e068de59399e64\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://720f7392e675b7b09a221f9ba5ea7f6dbfba0b4506907b53164e6f058d3a02b9\",\"dweb:/ipfs/QmeWUDeWPsmZwV4S8ZbxFAx4fDAPHYG8LivYjVWAo2Pn8x\"]},\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"}},"src/vendored/GPv2EIP1271.sol":{"EIP1271Verifier":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_hash","type":"bytes32"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Standardized interface for an implementation of smart contract signatures as described in EIP-1271. The code that follows is identical to the code in the standard with the exception of formatting and syntax changes to adapt the code to our Solidity version.\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _data MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\"}}},\"title\":\"EIP1271 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendored/GPv2EIP1271.sol\":\"EIP1271Verifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/vendored/GPv2EIP1271.sol\":{\"keccak256\":\"0xf33b34139b7092e93750d56a367c2d2dcf43e44ac7cbe38e9d98110d311dcb8f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://09a6c1eb48cb02369876eb6753bf01e57beca5c964b64473acae18a8d16a4645\",\"dweb:/ipfs/QmXguETpngWGNX4QoqWzq6Qc9zEXWJvgxTmrUYiXBaoSea\"]}},\"version\":1}"},"GPv2EIP1271":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204914940e3fed3c4a635b54b5a64458098983485e5d420fa32d512754919c003764736f6c63430008100033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 EQ SWAP5 0xE EXTCODEHASH 0xED EXTCODECOPY 0x4A PUSH4 0x5B54B5A6 DIFFICULTY PC MULMOD DUP10 DUP4 BASEFEE 0x5E 0x5D TIMESTAMP 0xF LOG3 0x2D MLOAD 0x27 SLOAD SWAP2 SWAP13 STOP CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ","sourceMap":"291:287:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;291:287:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204914940e3fed3c4a635b54b5a64458098983485e5d420fa32d512754919c003764736f6c63430008100033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 EQ SWAP5 0xE EXTCODEHASH 0xED EXTCODECOPY 0x4A PUSH4 0x5B54B5A6 DIFFICULTY PC MULMOD DUP10 DUP4 BASEFEE 0x5E 0x5D TIMESTAMP 0xF LOG3 0x2D MLOAD 0x27 SLOAD SWAP2 SWAP13 STOP CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ","sourceMap":"291:287:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAGICVALUE\":{\"details\":\"Value returned by a call to `isValidSignature` if the signature was verified successfully. The value is defined in EIP-1271 as: bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendored/GPv2EIP1271.sol\":\"GPv2EIP1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/vendored/GPv2EIP1271.sol\":{\"keccak256\":\"0xf33b34139b7092e93750d56a367c2d2dcf43e44ac7cbe38e9d98110d311dcb8f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://09a6c1eb48cb02369876eb6753bf01e57beca5c964b64473acae18a8d16a4645\",\"dweb:/ipfs/QmXguETpngWGNX4QoqWzq6Qc9zEXWJvgxTmrUYiXBaoSea\"]}},\"version\":1}"}},"src/vendored/GPv2Order.sol":{"GPv2Order":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f463482f10ff18ffb6111864b1539160fc72a1f674e2484e8f4aee01f69f34264736f6c63430008100033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F CHAINID CALLVALUE DUP3 CALL 0xF CALL DUP16 0xFB PUSH2 0x1186 0x4B ISZERO CODECOPY AND 0xF 0xC7 0x2A 0x1F PUSH8 0x4E2484E8F4AEE01F PUSH10 0xF34264736F6C63430008 LT STOP CALLER ","sourceMap":"412:9971:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;412:9971:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f463482f10ff18ffb6111864b1539160fc72a1f674e2484e8f4aee01f69f34264736f6c63430008100033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F CHAINID CALLVALUE DUP3 CALL 0xF CALL DUP16 0xFB PUSH2 0x1186 0x4B ISZERO CODECOPY AND 0xF 0xC7 0x2A 0x1F PUSH8 0x4E2484E8F4AEE01F PUSH10 0xF34264736F6C63430008 LT STOP CALLER ","sourceMap":"412:9971:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Gnosis Developers\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"BALANCE_ERC20\":{\"details\":\"The TokenBalance marker value for using direct ERC20 balances for computing the order struct hash. This value is pre-computed from the following expression: ``` keccak256(\\\"erc20\\\") ```\"},\"BALANCE_EXTERNAL\":{\"details\":\"The TokenBalance marker value for using Balancer Vault external balances (in order to re-use Vault ERC20 approvals) for computing the order struct hash. This value is pre-computed from the following expression: ``` keccak256(\\\"external\\\") ```\"},\"BALANCE_INTERNAL\":{\"details\":\"The TokenBalance marker value for using Balancer Vault internal balances for computing the order struct hash. This value is pre-computed from the following expression: ``` keccak256(\\\"internal\\\") ```\"},\"KIND_BUY\":{\"details\":\"The OrderKind marker value for a buy order for computing the order struct hash. This value is pre-computed from the following expression: ``` keccak256(\\\"buy\\\") ```\"},\"KIND_SELL\":{\"details\":\"The marker value for a sell order for computing the order struct hash. This allows the EIP-712 compatible wallets to display a descriptive string for the order kind (instead of 0 or 1). This value is pre-computed from the following expression: ``` keccak256(\\\"sell\\\") ```\"},\"RECEIVER_SAME_AS_OWNER\":{\"details\":\"Marker address used to indicate that the receiver of the trade proceeds should the owner of the order. This is chosen to be `address(0)` for gas efficiency as it is expected to be the most common case.\"},\"TYPE_HASH\":{\"details\":\"The order EIP-712 type hash for the [`GPv2Order.Data`] struct. This value is pre-computed from the following expression: ``` keccak256(     \\\"Order(\\\" +         \\\"address sellToken,\\\" +         \\\"address buyToken,\\\" +         \\\"address receiver,\\\" +         \\\"uint256 sellAmount,\\\" +         \\\"uint256 buyAmount,\\\" +         \\\"uint32 validTo,\\\" +         \\\"bytes32 appData,\\\" +         \\\"uint256 feeAmount,\\\" +         \\\"string kind,\\\" +         \\\"bool partiallyFillable\\\" +         \\\"string sellTokenBalance\\\" +         \\\"string buyTokenBalance\\\" +     \\\")\\\" ) ```\"},\"UID_LENGTH\":{\"details\":\"The byte length of an order unique identifier.\"}},\"title\":\"Gnosis Protocol v2 Order Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendored/GPv2Order.sol\":\"GPv2Order\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"}},"src/vendored/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendored/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}"}}}}}