{"abi":[{"type":"event","name":"OrderRefund","inputs":[{"name":"orderUid","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"refunder","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderUid\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refunder\",\"type\":\"address\"}],\"name\":\"OrderRefund\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"CoW Swap Developers\",\"events\":{\"OrderRefund(bytes,address)\":{\"details\":\"Event emitted to notify that an order was refunded. Note that this event is not fired every time the order is invalidated (even though the user receives all unspent ETH back). This is because we want to differenciate the case where the user invalidates a valid order and when the user receives back the funds from an expired order.\",\"params\":{\"orderUid\":\"CoW Swap's unique order identifier of the order that has been invalidated (and refunded).\",\"refunder\":\"The address that triggered the order refund.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"CoW Swap ETH Flow Event Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICoWSwapEthFlow.sol\":\"ICoWSwapEthFlowEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/interfaces/ICoWSwapEthFlow.sol\":{\"keccak256\":\"0x0b96c0c90c8560ef10a0acea608e9963264817d68ddf055f9bbeec0e3d8674cc\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://cea7ba8506406d7e13a84ddca2b7ba9a0f8ee1429dceeea8cb13be3c2ad0904c\",\"dweb:/ipfs/QmaTxrUnxWUPgZExA7mEf1dSoic3oQobt3nDVGnqe47e5z\"]},\"src/libraries/EthFlowOrder.sol\":{\"keccak256\":\"0x9d0c70204f7743db7c54ab6106be0fef7f0eb6a0a489890e0b0b597a998d29f9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac3dd64f6ef8fde3f7eeb932f624a6176754ad1cd03680b57cf5bf6e84c8bdff\",\"dweb:/ipfs/QmR9o2BGcZhjMkDn1XCdHGaXhYVKhZwfjYDHPJq88UdB3t\"]},\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.16+commit.07a7930e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"orderUid","type":"bytes","indexed":false},{"internalType":"address","name":"refunder","type":"address","indexed":true}],"type":"event","name":"OrderRefund","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ICoWSwapEthFlow.sol":"ICoWSwapEthFlowEvents"},"evmVersion":"london","libraries":{}},"sources":{"src/interfaces/ICoWSwapEthFlow.sol":{"keccak256":"0x0b96c0c90c8560ef10a0acea608e9963264817d68ddf055f9bbeec0e3d8674cc","urls":["bzz-raw://cea7ba8506406d7e13a84ddca2b7ba9a0f8ee1429dceeea8cb13be3c2ad0904c","dweb:/ipfs/QmaTxrUnxWUPgZExA7mEf1dSoic3oQobt3nDVGnqe47e5z"],"license":"LGPL-3.0-or-later"},"src/libraries/EthFlowOrder.sol":{"keccak256":"0x9d0c70204f7743db7c54ab6106be0fef7f0eb6a0a489890e0b0b597a998d29f9","urls":["bzz-raw://ac3dd64f6ef8fde3f7eeb932f624a6176754ad1cd03680b57cf5bf6e84c8bdff","dweb:/ipfs/QmR9o2BGcZhjMkDn1XCdHGaXhYVKhZwfjYDHPJq88UdB3t"],"license":"LGPL-3.0-or-later"},"src/vendored/GPv2Order.sol":{"keccak256":"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2","urls":["bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4","dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR"],"license":"LGPL-3.0-or-later"},"src/vendored/IERC20.sol":{"keccak256":"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c","urls":["bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738","dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog"],"license":"MIT"}},"version":1},"id":25}