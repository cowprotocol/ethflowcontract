{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ICoWSwapSettlement",
          "name": "settlementContractAddress",
          "type": "address"
        },
        {
          "internalType": "contract IWrappedNativeToken",
          "name": "wrappedNativeToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EthTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectEthAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "NotAllowedToDeleteOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAllowedZeroSellAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderIsAlreadyOwned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReceiverMustBeSet",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct GPv2Order.Data",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ICoWSwapOnchainOrders.OnchainSigningScheme",
              "name": "scheme",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct ICoWSwapOnchainOrders.OnchainSignature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "OrderPlacement",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "cowSwapDomainSeparatorPublic",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cowSwapSettlement",
      "outputs": [
        {
          "internalType": "contract ICoWSwapSettlement",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "int64",
              "name": "quoteId",
              "type": "int64"
            }
          ],
          "internalType": "struct EthFlowOrder.Data",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "createOrder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "int64",
              "name": "quoteId",
              "type": "int64"
            }
          ],
          "internalType": "struct EthFlowOrder.Data",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "deleteOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "int64",
              "name": "quoteId",
              "type": "int64"
            }
          ],
          "internalType": "struct EthFlowOrder.Data[]",
          "name": "orderArray",
          "type": "tuple[]"
        }
      ],
      "name": "deleteOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "validTo",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "wrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrapAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeToken",
      "outputs": [
        {
          "internalType": "contract IWrappedNativeToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162001a7b38038062001a7b833981016040819052620000349162000222565b8181816200004d816200015660201b62000cfe1760201c565b608052506001600160a01b0380831660a081905290821660c081905260408051634daa966160e11b81529051919263095ea7b3929091639b552cc291600480830192602092919082900301816000875af1158015620000b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d6919062000261565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801562000125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014b919062000288565b5050505050620002ac565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf606082015246608082018190526001600160a01b03831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b6001600160a01b03811681146200021f57600080fd5b50565b600080604083850312156200023657600080fd5b8251620002438162000209565b6020840151909250620002568162000209565b809150509250929050565b6000602082840312156200027457600080fd5b8151620002818162000209565b9392505050565b6000602082840312156200029b57600080fd5b815180151581146200028157600080fd5b60805160a05160c0516117676200031460003960008181610134015281816105ee0152818161076401528181610acb01528181610c100152610c8801526000818161030c01526109e50152600081816101e20152818161080a015261105a01526117676000f3fe6080604052600436106100c05760003560e01c806368629bf411610074578063de0e9a3e1161004e578063de0e9a3e146102ba578063ea598cb0146102da578063ec30bb88146102fa57600080fd5b806368629bf4146101d35780639c3f1e9014610206578063b52e0d641461029a57600080fd5b8063322bba21116100a5578063322bba211461017b5780634b5b71411461019c5780634c84c1c8146101be57600080fd5b80631626ba7e146100cc57806317fcb39b1461012257600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e73660046111b4565b61032e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561012e57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b61018e610189366004611271565b61041c565b604051908152602001610119565b3480156101a857600080fd5b506101bc6101b736600461128a565b61070f565b005b3480156101ca57600080fd5b506101bc610752565b3480156101df57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061018e565b34801561021257600080fd5b50610269610221366004611300565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835263ffffffff909116602083015201610119565b3480156102a657600080fd5b506101bc6102b5366004611271565b61075d565b3480156102c657600080fd5b506101bc6102d5366004611300565b610be1565b3480156102e657600080fd5b506101bc6102f5366004611300565b610c84565b34801561030657600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b60008281526020818152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff81168083527401000000000000000000000000000000000000000090910463ffffffff169282019290925290158015906103ad5750805173ffffffffffffffffffffffffffffffffffffffff90811614155b80156103c3575042816020015163ffffffff1610155b156103f157507f1626ba7e000000000000000000000000000000000000000000000000000000009050610416565b507fffffffff0000000000000000000000000000000000000000000000000000000090505b92915050565b600061043060a08301356040840135611348565b3414610468576040517f8b6ebb4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81604001356000036104a6576040517feaec5c9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152338152600090602081016104ca60e0860160c08701611374565b63ffffffff169052604080518082019091529091506000908082815260200130604051602001610525919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290529050600061056b610120860161010087016113a8565b6020808501516040516105b293920160c09290921b825260e01b7fffffffff00000000000000000000000000000000000000000000000000000000166008820152600c0190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528351909150610629906106227f000000000000000000000000000000000000000000000000000000000000000061061c368a90038a018a6113f7565b90610dbe565b8484610f8d565b60008181526020819052604090205490945073ffffffffffffffffffffffffffffffffffffffff1615610690576040517f56a1d2b2000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b505060008281526020818152604090912082518154929093015163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff90931692909217179055919050565b60005b8181101561074d5761073b83838381811061072f5761072f611491565b9050610120020161075d565b80610745816114c0565b915050610712565b505050565b61075b47610c84565b565b60006107927f000000000000000000000000000000000000000000000000000000000000000061061c368590038501856113f7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a082209152604080517f190100000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600282015260228101929092526042909120600081815260208181529083902083518085019094525473ffffffffffffffffffffffffffffffffffffffff8082168086527401000000000000000000000000000000000000000090920463ffffffff1692850192909252939450909214806108b95750805173ffffffffffffffffffffffffffffffffffffffff16155b806108f0575042816020015163ffffffff16101580156108f05750805173ffffffffffffffffffffffffffffffffffffffff163314155b1561092a576040517f96d4fcee00000000000000000000000000000000000000000000000000000000815260048101839052602401610687565b60008281526020818152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff1790558051603880825260608201909252918201818036833750505060a08501519091506109a59082908590309061108f565b6040517f2479fb6e00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632479fb6e90610a1a90859060040161155c565b6020604051808303816000875af1158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d919061156f565b90506000808660600151838860e001510281610a7b57610a7b611588565b048760e0015103905080838860600151030191505080471015610b3e576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815247820360048201819052907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610b2457600080fd5b505af1158015610b38573d6000803e3d6000fd5b50505050505b835160405160009173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d8060008114610b97576040519150601f19603f3d011682016040523d82523d6000602084013e610b9c565b606091505b5050905080610bd7576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050505050565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610c7d576040519150601f19603f3d011682016040523d82523d6000602084013e610c7d565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b604080516101808101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101608201529083015173ffffffffffffffffffffffffffffffffffffffff16610e6d576040517fefc9ccdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff168152602001846040015181526020018460600151815260200163ffffffff80168152602001846080015181526020018460a0015181526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018460e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9815250905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff167fcf5f9de2984132265203b5c335b25727702ca77262ff622e136baa7362bf1da9858585604051610fd993929190611617565b60405180910390a25050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f190100000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006002820152602281019190915260429020919050565b60388451146110fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f77000000000000006044820152606401610687565b60388401526034830152602090910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561115f5761115f61110c565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111ac576111ac61110c565b604052919050565b600080604083850312156111c757600080fd5b8235915060208084013567ffffffffffffffff808211156111e757600080fd5b818601915086601f8301126111fb57600080fd5b81358181111561120d5761120d61110c565b61123d847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611165565b9150808252878482850101111561125357600080fd5b80848401858401376000848284010152508093505050509250929050565b6000610120828403121561128457600080fd5b50919050565b6000806020838503121561129d57600080fd5b823567ffffffffffffffff808211156112b557600080fd5b818501915085601f8301126112c957600080fd5b8135818111156112d857600080fd5b866020610120830285010111156112ee57600080fd5b60209290920196919550909350505050565b60006020828403121561131257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561041657610416611319565b803563ffffffff8116811461136f57600080fd5b919050565b60006020828403121561138657600080fd5b61138f8261135b565b9392505050565b8035600781900b811461136f57600080fd5b6000602082840312156113ba57600080fd5b61138f82611396565b803573ffffffffffffffffffffffffffffffffffffffff8116811461136f57600080fd5b8035801515811461136f57600080fd5b6000610120828403121561140a57600080fd5b61141261113b565b61141b836113c3565b8152611429602084016113c3565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261146260c0840161135b565b60c082015261147360e084016113e7565b60e0820152610100611486818501611396565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114f1576114f1611319565b5060010190565b6000815180845260005b8181101561151e57602081850181015186830182015201611502565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061138f60208301846114f8565b60006020828403121561158157600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008151600281106115f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8084525060208201516040602085015261160f60408501826114f8565b949350505050565b835173ffffffffffffffffffffffffffffffffffffffff16815260006101c0602086015161165d602085018273ffffffffffffffffffffffffffffffffffffffff169052565b506040860151611685604085018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608401526080860151608084015260a08601516116b160a085018263ffffffff169052565b5060c086015160c084015260e086015160e0840152610100808701518185015250610120808701516116e68286018215159052565b5050610140868101519084015261016080870151908401526101808301819052611712818401866115b7565b90508281036101a084015261172781856114f8565b969550505050505056fea2646970667358221220cc3e9bee9f87d36c0886e309ab4681c8081c69c7a5247333400ba09e4c845d7664736f6c63430008100033",
    "sourceMap": "236:430:44:-:0;;;291:251;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;434:25;461:18;1872::24;769:78:31;812:25;769:29;;;;;:78;;:::i;:::-;744:103;;-1:-1:-1;;;;;;1903:38:24;;::::1;;::::0;;;1951:40;;::::1;;::::0;;;2043:32:::1;::::0;;-1:-1:-1;;;2043:32:24;;;;1951:40;;2002:27:::1;::::0;1903:38;;2043:30:::1;::::0;:32:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;::::1;1903:38:::0;2043:32:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2002:114;::::0;-1:-1:-1;;;;;;2002:114:24::1;::::0;;;;;;-1:-1:-1;;;;;1125:32:50;;;2002:114:24::1;::::0;::::1;1107:51:50::0;-1:-1:-1;;1174:18:50;;;1167:34;1080:18;;2002:114:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1729:394:::0;;291:251:44;;236:430;;1381:622:29;1782:200;;;474:117;1782:200;;;1753:25:50;715:28:29;1794:18:50;;;1787:34;;;;873:15:29;1837:18:50;;;1830:34;1707:9:29;1880:18:50;;;1873:34;;;-1:-1:-1;;;;;1944:32:50;;1923:19;;;1916:61;1477:7:29;;1725:19:50;;1782:200:29;;;;;;;;;;;;1755:241;;;;;;1736:260;;;1381:622;;;:::o;14:151:50:-;-1:-1:-1;;;;;109:31:50;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:482::-;306:6;314;367:2;355:9;346:7;342:23;338:32;335:52;;;383:1;380;373:12;335:52;415:9;409:16;434:51;479:5;434:51;:::i;:::-;554:2;539:18;;533:25;504:5;;-1:-1:-1;567:53:50;533:25;567:53;:::i;:::-;639:7;629:17;;;170:482;;;;;:::o;657:271::-;727:6;780:2;768:9;759:7;755:23;751:32;748:52;;;796:1;793;786:12;748:52;828:9;822:16;847:51;892:5;847:51;:::i;:::-;917:5;657:271;-1:-1:-1;;;657:271:50:o;1212:277::-;1279:6;1332:2;1320:9;1311:7;1307:23;1303:32;1300:52;;;1348:1;1345;1338:12;1300:52;1380:9;1374:16;1433:5;1426:13;1419:21;1412:5;1409:32;1399:60;;1455:1;1452;1445:12;1494:489;236:430:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100c05760003560e01c806368629bf411610074578063de0e9a3e1161004e578063de0e9a3e146102ba578063ea598cb0146102da578063ec30bb88146102fa57600080fd5b806368629bf4146101d35780639c3f1e9014610206578063b52e0d641461029a57600080fd5b8063322bba21116100a5578063322bba211461017b5780634b5b71411461019c5780634c84c1c8146101be57600080fd5b80631626ba7e146100cc57806317fcb39b1461012257600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e73660046111b4565b61032e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561012e57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b61018e610189366004611271565b61041c565b604051908152602001610119565b3480156101a857600080fd5b506101bc6101b736600461128a565b61070f565b005b3480156101ca57600080fd5b506101bc610752565b3480156101df57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061018e565b34801561021257600080fd5b50610269610221366004611300565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835263ffffffff909116602083015201610119565b3480156102a657600080fd5b506101bc6102b5366004611271565b61075d565b3480156102c657600080fd5b506101bc6102d5366004611300565b610be1565b3480156102e657600080fd5b506101bc6102f5366004611300565b610c84565b34801561030657600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b60008281526020818152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff81168083527401000000000000000000000000000000000000000090910463ffffffff169282019290925290158015906103ad5750805173ffffffffffffffffffffffffffffffffffffffff90811614155b80156103c3575042816020015163ffffffff1610155b156103f157507f1626ba7e000000000000000000000000000000000000000000000000000000009050610416565b507fffffffff0000000000000000000000000000000000000000000000000000000090505b92915050565b600061043060a08301356040840135611348565b3414610468576040517f8b6ebb4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81604001356000036104a6576040517feaec5c9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152338152600090602081016104ca60e0860160c08701611374565b63ffffffff169052604080518082019091529091506000908082815260200130604051602001610525919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290529050600061056b610120860161010087016113a8565b6020808501516040516105b293920160c09290921b825260e01b7fffffffff00000000000000000000000000000000000000000000000000000000166008820152600c0190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528351909150610629906106227f000000000000000000000000000000000000000000000000000000000000000061061c368a90038a018a6113f7565b90610dbe565b8484610f8d565b60008181526020819052604090205490945073ffffffffffffffffffffffffffffffffffffffff1615610690576040517f56a1d2b2000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b505060008281526020818152604090912082518154929093015163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff90931692909217179055919050565b60005b8181101561074d5761073b83838381811061072f5761072f611491565b9050610120020161075d565b80610745816114c0565b915050610712565b505050565b61075b47610c84565b565b60006107927f000000000000000000000000000000000000000000000000000000000000000061061c368590038501856113f7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a082209152604080517f190100000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600282015260228101929092526042909120600081815260208181529083902083518085019094525473ffffffffffffffffffffffffffffffffffffffff8082168086527401000000000000000000000000000000000000000090920463ffffffff1692850192909252939450909214806108b95750805173ffffffffffffffffffffffffffffffffffffffff16155b806108f0575042816020015163ffffffff16101580156108f05750805173ffffffffffffffffffffffffffffffffffffffff163314155b1561092a576040517f96d4fcee00000000000000000000000000000000000000000000000000000000815260048101839052602401610687565b60008281526020818152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff1790558051603880825260608201909252918201818036833750505060a08501519091506109a59082908590309061108f565b6040517f2479fb6e00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632479fb6e90610a1a90859060040161155c565b6020604051808303816000875af1158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d919061156f565b90506000808660600151838860e001510281610a7b57610a7b611588565b048760e0015103905080838860600151030191505080471015610b3e576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815247820360048201819052907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610b2457600080fd5b505af1158015610b38573d6000803e3d6000fd5b50505050505b835160405160009173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d8060008114610b97576040519150601f19603f3d011682016040523d82523d6000602084013e610b9c565b606091505b5050905080610bd7576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050505050565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610c7d576040519150601f19603f3d011682016040523d82523d6000602084013e610c7d565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b604080516101808101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101608201529083015173ffffffffffffffffffffffffffffffffffffffff16610e6d576040517fefc9ccdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff168152602001846040015181526020018460600151815260200163ffffffff80168152602001846080015181526020018460a0015181526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018460e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9815250905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff167fcf5f9de2984132265203b5c335b25727702ca77262ff622e136baa7362bf1da9858585604051610fd993929190611617565b60405180910390a25050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f190100000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006002820152602281019190915260429020919050565b60388451146110fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f77000000000000006044820152606401610687565b60388401526034830152602090910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561115f5761115f61110c565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111ac576111ac61110c565b604052919050565b600080604083850312156111c757600080fd5b8235915060208084013567ffffffffffffffff808211156111e757600080fd5b818601915086601f8301126111fb57600080fd5b81358181111561120d5761120d61110c565b61123d847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611165565b9150808252878482850101111561125357600080fd5b80848401858401376000848284010152508093505050509250929050565b6000610120828403121561128457600080fd5b50919050565b6000806020838503121561129d57600080fd5b823567ffffffffffffffff808211156112b557600080fd5b818501915085601f8301126112c957600080fd5b8135818111156112d857600080fd5b866020610120830285010111156112ee57600080fd5b60209290920196919550909350505050565b60006020828403121561131257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561041657610416611319565b803563ffffffff8116811461136f57600080fd5b919050565b60006020828403121561138657600080fd5b61138f8261135b565b9392505050565b8035600781900b811461136f57600080fd5b6000602082840312156113ba57600080fd5b61138f82611396565b803573ffffffffffffffffffffffffffffffffffffffff8116811461136f57600080fd5b8035801515811461136f57600080fd5b6000610120828403121561140a57600080fd5b61141261113b565b61141b836113c3565b8152611429602084016113c3565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261146260c0840161135b565b60c082015261147360e084016113e7565b60e0820152610100611486818501611396565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114f1576114f1611319565b5060010190565b6000815180845260005b8181101561151e57602081850181015186830182015201611502565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061138f60208301846114f8565b60006020828403121561158157600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008151600281106115f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8084525060208201516040602085015261160f60408501826114f8565b949350505050565b835173ffffffffffffffffffffffffffffffffffffffff16815260006101c0602086015161165d602085018273ffffffffffffffffffffffffffffffffffffffff169052565b506040860151611685604085018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608401526080860151608084015260a08601516116b160a085018263ffffffff169052565b5060c086015160c084015260e086015160e0840152610100808701518185015250610120808701516116e68286018215159052565b5050610140868101519084015261016080870151908401526101808301819052611712818401866115b7565b90508281036101a084015261172781856114f8565b969550505050505056fea2646970667358221220cc3e9bee9f87d36c0886e309ab4681c8081c69c7a5247333400ba09e4c845d7664736f6c63430008100033",
    "sourceMap": "236:430:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9354:779:24;;;;;;;;;;-1:-1:-1;9354:779:24;;;;;:::i;:::-;;:::i;:::-;;;1868:66:50;1856:79;;;1838:98;;1826:2;1811:18;9354:779:24;;;;;;;;938:55;;;;;;;;;;;;;;;;;;2305:42:50;2293:55;;;2275:74;;2263:2;2248:18;938:55:24;2100:255:50;3395:1210:24;;;;;;:::i;:::-;;:::i;:::-;;;2703:25:50;;;2691:2;2676:18;3395:1210:24;2557:177:50;4647:187:24;;;;;;;;;;-1:-1:-1;4647:187:24;;;;;:::i;:::-;;:::i;:::-;;2328:72;;;;;;;;;;;;;:::i;548:116:44:-;;;;;;;;;;-1:-1:-1;635:22:44;548:116;;1490:58:24;;;;;;;;;;-1:-1:-1;1490:58:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:42:50;3863:55;;;3845:74;;3967:10;3955:23;;;3950:2;3935:18;;3928:51;3818:18;1490:58:24;3673:312:50;4876:4436:24;;;;;;;;;;-1:-1:-1;4876:4436:24;;;;;:::i;:::-;;:::i;3260:93::-;;;;;;;;;;-1:-1:-1;3260:93:24;;;;;:::i;:::-;;:::i;2442:776::-;;;;;;;;;;-1:-1:-1;2442:776:24;;;;;:::i;:::-;;:::i;735:53::-;;;;;;;;;;;;;;;9354:779;9511:6;9735:17;;;;;;;;;;;9691:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9780:40;;;;9779:109;;-1:-1:-1;9838:15:24;;2797:17:30;9838:49:24;;;;;9779:109;:221;;;;;9984:15;9963:9;:17;;;:36;;;;9779:221;9762:365;;;-1:-1:-1;10032:22:24;;-1:-1:-1;10025:29:24;;9762:365;-1:-1:-1;10092:24:24;;-1:-1:-1;9354:779:24;;;;;:::o;3395:1210::-;3500:17;3550:34;3569:15;;;;3550:16;;;;:34;:::i;:::-;3537:9;:47;3533:105;;3607:20;;;;;;;;;;;;;;3533:105;3657:5;:16;;;3652:1;:21;3648:85;;3696:26;;;;;;;;;;;;;;3648:85;3789;;;;;;;;;3827:10;3789:85;;3743:43;;3789:85;;;3851:13;;;;;;;;:::i;:::-;3789:85;;;;3921:113;;;;;;;;;3743:131;;-1:-1:-1;3885:33:24;;3921:113;3885:33;3921:113;;;;4018:4;3993:31;;;;;;;5448:2:50;5444:15;;;;5461:66;5440:88;5428:101;;5554:2;5545:12;;5299:264;3993:31:24;;;;;;;;;;;;;;3921:113;;3885:149;-1:-1:-1;4151:17:24;4201:13;;;;;;;;:::i;:::-;4228:19;;;;;4171:86;;;;;;6087:3:50;6083:16;;;;6071:29;;6137:3;6133:16;6151:66;6129:89;6125:1;6116:11;;6109:110;6244:2;6235:12;;5920:333;4171:86:24;;;;;;;;;;;;;;4308:17;;4171:86;;-1:-1:-1;4280:150:24;;4339:40;4360:18;4339:20;;;;;;;:5;:20;:::i;:::-;;;:40::i;:::-;4393:9;4416:4;4280:14;:150::i;:::-;2570:1:30;4445:17:24;;;;;;;;;;:23;4268:162;;-1:-1:-1;4445:48:24;:23;:48;4441:116;;4516:30;;;;;;;;2703:25:50;;;2676:18;;4516:30:24;;;;;;;;4441:116;-1:-1:-1;;4567:6:24;:17;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;4574:9;3395:1210;-1:-1:-1;3395:1210:24:o;4647:187::-;4734:9;4729:99;4749:21;;;4729:99;;;4791:26;4803:10;;4814:1;4803:13;;;;;;;:::i;:::-;;;;;;4791:11;:26::i;:::-;4772:3;;;;:::i;:::-;;;;4729:99;;;;4647:187;;:::o;2328:72::-;2366:27;2371:21;2366:4;:27::i;:::-;2328:72::o;4876:4436::-;4948:34;4985:62;5019:18;4985:20;;;;;;;:5;:20;:::i;:62::-;5634:14:33;;;5673:16;;5720:9;5702:28;;5778:3;5757:25;;5795:23;;6377:4;6371:11;;6421:10;6395:37;;5095:22:24;6475:1:33;6452:25;;6445:50;6538:2;6515:26;;6508:46;;;;6611:2;6582:32;;;-1:-1:-1;5173:17:24;;;-1:-1:-1;5173:17:24;;;;;;;5129:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5634:14:33;;-1:-1:-1;6582:32:33;;5218:49:24;;:105;;-1:-1:-1;5283:15:24;;:40;;;5218:105;:266;;;;5419:15;5398:9;:17;;;:36;;;;:85;;;;-1:-1:-1;5454:15:24;;:29;;5473:10;5454:29;;5398:85;5201:360;;;5516:34;;;;;;;;2703:25:50;;;2676:18;;5516:34:24;2557:177:50;5201:360:24;5571:6;:17;;;;;;;;;;;:56;;;;2797:17:30;5571:56:24;;;5662:31;;4189:2:33;5662:31:24;;;;;;;;;;;;4189:2:33;;5662:31:24;;;-1:-1:-1;;;5794:20:24;;;;5638:55;;-1:-1:-1;5703:121:24;;5638:55;;5744:9;;5775:4;;5703:27;:121::i;:::-;5857:40;;;;;5834:20;;5857:30;:17;:30;;;;:40;;5888:8;;5857:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5834:63;;7191:20;7962:23;8092:12;:23;;;8056:12;8031;:22;;;:37;8030:85;;;;;:::i;:::-;;7988:12;:22;;;:128;7962:154;;8475:15;8444:12;8402;:23;;;:54;:88;8371:119;;7221:1280;8633:12;8609:21;:36;8605:255;;;8806:43;;;;;8757:21;8742:36;;8806:43;;;2703:25:50;;;8742:36:24;8806:18;:27;;;;;2676:18:50;;8806:43:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8647:213;8605:255;9163:15;;9155:76;;9137:12;;9155:29;;;9192:12;;9137;9155:76;9137:12;9155:76;9192:12;9155:29;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9136:95;;;9246:7;9241:65;;9276:19;;;;;;;;;;;;;;9241:65;4938:4374;;;;;;;4876:4436;:::o;3260:93::-;3311:35;;;;;;;;2703:25:50;;;3311:18:24;:27;;;;;2676:18:50;;3311:35:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3260:93;:::o;2442:776::-;2746:12;2780:18;2764:41;;2826:6;2764:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1381:622:29;1782:200;;;474:117;1782:200;;;9630:25:50;715:28:29;9671:18:50;;;9664:34;;;;873:15:29;9714:18:50;;;9707:34;1707:9:29;9757:18:50;;;9750:34;;;9833:42;9821:55;;9800:19;;;9793:84;1477:7:29;;9602:19:50;;1782:200:29;;;;;;;;;;;;1755:241;;;;;;1736:260;;;1381:622;;;:::o;3387:2329:30:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3545:14:30;;;;:50;;3541:547;;4058:19;;;;;;;;;;;;;;3541:547;4278:1431;;;;;;;;4310:18;4278:1431;;;;;;4366:5;:14;;;4278:1431;;;;;;4417:5;:14;;;4278:1431;;;;;;4469:5;:16;;;4278:1431;;;;4525:5;:15;;;4278:1431;;;;4989:16;4278:1431;;;;;;5041:5;:13;;;4278:1431;;;;5091:5;:15;;;4278:1431;;;;5372:19;4278:1431;;;;5425:5;:23;;;4278:1431;;;;;;5576:23;4278:1431;;;;5645:23;4278:1431;;;4259:1450;;3387:2329;;;;:::o;1201:307:31:-;1380:7;1419:6;1404:46;;;1427:5;1434:9;1445:4;1404:46;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;5634:14:33;;5673:16;;5720:9;5702:28;;5778:3;5757:25;;5795:23;;6377:4;6371:11;6421:10;6395:37;;1478:22:31;6475:1:33;6452:25;;6445:50;6538:2;6515:26;;6508:46;;;;6611:2;6582:32;;;1460:41:31;-1:-1:-1;1201:307:31:o;7270:1736:33:-;4189:2;7443:8;:15;:29;7435:67;;;;;;;12349:2:50;7435:67:33;;;12331:21:50;12388:2;12368:18;;;12361:30;12427:27;12407:18;;;12400:55;12472:18;;7435:67:33;12147:349:50;7435:67:33;8881:2;8867:17;;8860:34;8928:2;8914:17;;8907:32;8973:2;8959:17;;;8952:38;7270:1736::o;14:184:50:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:252;275:2;269:9;317:3;305:16;;351:18;336:34;;372:22;;;333:62;330:88;;;398:18;;:::i;:::-;434:2;427:22;203:252;:::o;460:334::-;531:2;525:9;587:2;577:13;;592:66;573:86;561:99;;690:18;675:34;;711:22;;;672:62;669:88;;;737:18;;:::i;:::-;773:2;766:22;460:334;;-1:-1:-1;460:334:50:o;799:890::-;876:6;884;937:2;925:9;916:7;912:23;908:32;905:52;;;953:1;950;943:12;905:52;989:9;976:23;966:33;;1018:2;1071;1060:9;1056:18;1043:32;1094:18;1135:2;1127:6;1124:14;1121:34;;;1151:1;1148;1141:12;1121:34;1189:6;1178:9;1174:22;1164:32;;1234:7;1227:4;1223:2;1219:13;1215:27;1205:55;;1256:1;1253;1246:12;1205:55;1292:2;1279:16;1314:2;1310;1307:10;1304:36;;;1320:18;;:::i;:::-;1362:112;1470:2;1401:66;1394:4;1390:2;1386:13;1382:86;1378:95;1362:112;:::i;:::-;1349:125;;1497:2;1490:5;1483:17;1537:7;1532:2;1527;1523;1519:11;1515:20;1512:33;1509:53;;;1558:1;1555;1548:12;1509:53;1613:2;1608;1604;1600:11;1595:2;1588:5;1584:14;1571:45;1657:1;1652:2;1647;1640:5;1636:14;1632:23;1625:34;;1678:5;1668:15;;;;;799:890;;;;;:::o;2360:192::-;2444:6;2497:3;2485:9;2476:7;2472:23;2468:33;2465:53;;;2514:1;2511;2504:12;2465:53;-1:-1:-1;2537:9:50;2360:192;-1:-1:-1;2360:192:50:o;2739:645::-;2850:6;2858;2911:2;2899:9;2890:7;2886:23;2882:32;2879:52;;;2927:1;2924;2917:12;2879:52;2967:9;2954:23;2996:18;3037:2;3029:6;3026:14;3023:34;;;3053:1;3050;3043:12;3023:34;3091:6;3080:9;3076:22;3066:32;;3136:7;3129:4;3125:2;3121:13;3117:27;3107:55;;3158:1;3155;3148:12;3107:55;3198:2;3185:16;3224:2;3216:6;3213:14;3210:34;;;3240:1;3237;3230:12;3210:34;3298:7;3293:2;3283:6;3275;3271:19;3267:2;3263:28;3259:37;3256:50;3253:70;;;3319:1;3316;3309:12;3253:70;3350:2;3342:11;;;;;3372:6;;-1:-1:-1;2739:645:50;;-1:-1:-1;;;;2739:645:50:o;3389:180::-;3448:6;3501:2;3489:9;3480:7;3476:23;3472:32;3469:52;;;3517:1;3514;3507:12;3469:52;-1:-1:-1;3540:23:50;;3389:180;-1:-1:-1;3389:180:50:o;4434:184::-;4486:77;4483:1;4476:88;4583:4;4580:1;4573:15;4607:4;4604:1;4597:15;4623:125;4688:9;;;4709:10;;;4706:36;;;4722:18;;:::i;4753:163::-;4820:20;;4880:10;4869:22;;4859:33;;4849:61;;4906:1;4903;4896:12;4849:61;4753:163;;;:::o;4921:184::-;4979:6;5032:2;5020:9;5011:7;5007:23;5003:32;5000:52;;;5048:1;5045;5038:12;5000:52;5071:28;5089:9;5071:28;:::i;:::-;5061:38;4921:184;-1:-1:-1;;;4921:184:50:o;5568:160::-;5634:20;;5694:1;5683:20;;;5673:31;;5663:59;;5718:1;5715;5708:12;5733:182;5790:6;5843:2;5831:9;5822:7;5818:23;5814:32;5811:52;;;5859:1;5856;5849:12;5811:52;5882:27;5899:9;5882:27;:::i;6258:204::-;6334:20;;6394:42;6383:54;;6373:65;;6363:93;;6452:1;6449;6442:12;6467:160;6532:20;;6588:13;;6581:21;6571:32;;6561:60;;6617:1;6614;6607:12;6632:867;6714:6;6767:3;6755:9;6746:7;6742:23;6738:33;6735:53;;;6784:1;6781;6774:12;6735:53;6810:22;;:::i;:::-;6855:37;6882:9;6855:37;:::i;:::-;6848:5;6841:52;6925:46;6967:2;6956:9;6952:18;6925:46;:::i;:::-;6920:2;6913:5;6909:14;6902:70;7032:2;7021:9;7017:18;7004:32;6999:2;6992:5;6988:14;6981:56;7097:2;7086:9;7082:18;7069:32;7064:2;7057:5;7053:14;7046:56;7163:3;7152:9;7148:19;7135:33;7129:3;7122:5;7118:15;7111:58;7230:3;7219:9;7215:19;7202:33;7196:3;7189:5;7185:15;7178:58;7269:38;7302:3;7291:9;7287:19;7269:38;:::i;:::-;7263:3;7256:5;7252:15;7245:63;7341:36;7372:3;7361:9;7357:19;7341:36;:::i;:::-;7335:3;7328:5;7324:15;7317:61;7397:3;7432:36;7464:2;7453:9;7449:18;7432:36;:::i;:::-;7416:14;;;7409:60;7420:5;6632:867;-1:-1:-1;;;6632:867:50:o;7504:184::-;7556:77;7553:1;7546:88;7653:4;7650:1;7643:15;7677:4;7674:1;7667:15;7693:195;7732:3;7763:66;7756:5;7753:77;7750:103;;7833:18;;:::i;:::-;-1:-1:-1;7880:1:50;7869:13;;7693:195::o;7893:481::-;7934:3;7972:5;7966:12;7999:6;7994:3;7987:19;8024:1;8034:162;8048:6;8045:1;8042:13;8034:162;;;8110:4;8166:13;;;8162:22;;8156:29;8138:11;;;8134:20;;8127:59;8063:12;8034:162;;;8038:3;8241:1;8234:4;8225:6;8220:3;8216:16;8212:27;8205:38;8363:4;8293:66;8288:2;8280:6;8276:15;8272:88;8267:3;8263:98;8259:109;8252:116;;;7893:481;;;;:::o;8379:217::-;8526:2;8515:9;8508:21;8489:4;8546:44;8586:2;8575:9;8571:18;8563:6;8546:44;:::i;8601:184::-;8671:6;8724:2;8712:9;8703:7;8699:23;8695:32;8692:52;;;8740:1;8737;8730:12;8692:52;-1:-1:-1;8763:16:50;;8601:184;-1:-1:-1;8601:184:50:o;8790:::-;8842:77;8839:1;8832:88;8939:4;8936:1;8929:15;8963:4;8960:1;8953:15;9984:486;10043:3;10077:5;10071:12;10109:1;10105:2;10102:9;10092:197;;10145:77;10142:1;10135:88;10246:4;10243:1;10236:15;10274:4;10271:1;10264:15;10092:197;10310:2;10305:3;10298:15;;10359:4;10352:5;10348:16;10342:23;10397:4;10390;10385:3;10381:14;10374:28;10418:46;10458:4;10453:3;10449:14;10435:12;10418:46;:::i;:::-;10411:53;9984:486;-1:-1:-1;;;;9984:486:50:o;10475:1667::-;10838:13;;2045:42;2034:54;2022:67;;10757:4;10786:3;10910:4;10902:6;10898:17;10892:24;10925:75;10994:4;10983:9;10979:20;10965:12;2045:42;2034:54;2022:67;;1947:148;10925:75;;11049:4;11041:6;11037:17;11031:24;11064:77;11135:4;11124:9;11120:20;11104:14;2045:42;2034:54;2022:67;;1947:148;11064:77;;11197:4;11189:6;11185:17;11179:24;11172:4;11161:9;11157:20;11150:54;11260:4;11252:6;11248:17;11242:24;11235:4;11224:9;11220:20;11213:54;11316:4;11308:6;11304:17;11298:24;11331:55;11380:4;11369:9;11365:20;11349:14;3650:10;3639:22;3627:35;;3574:94;11331:55;;11442:4;11434:6;11430:17;11424:24;11417:4;11406:9;11402:20;11395:54;11505:4;11497:6;11493:17;11487:24;11480:4;11469:9;11465:20;11458:54;11531:6;11591:2;11583:6;11579:15;11573:22;11568:2;11557:9;11553:18;11546:50;;11615:6;11670:2;11662:6;11658:15;11652:22;11683:51;11730:2;11719:9;11715:18;11699:14;9958:13;9951:21;9939:34;;9888:91;11683:51;-1:-1:-1;;11753:6:50;11801:15;;;11795:22;11775:18;;;11768:50;11837:6;11885:15;;;11879:22;11859:18;;;11852:50;11933:3;11918:19;;11911:31;;;11965:62;12008:18;;;12000:6;11965:62;:::i;:::-;11951:76;;12076:9;12068:6;12064:22;12058:3;12047:9;12043:19;12036:51;12104:32;12129:6;12121;12104:32;:::i;:::-;12096:40;10475:1667;-1:-1:-1;;;;;;10475:1667:50:o",
    "linkReferences": {},
    "immutableReferences": {
      "23908": [
        {
          "start": 780,
          "length": 32
        },
        {
          "start": 2533,
          "length": 32
        }
      ],
      "23912": [
        {
          "start": 308,
          "length": 32
        },
        {
          "start": 1518,
          "length": 32
        },
        {
          "start": 1892,
          "length": 32
        },
        {
          "start": 2763,
          "length": 32
        },
        {
          "start": 3088,
          "length": 32
        },
        {
          "start": 3208,
          "length": 32
        }
      ],
      "24694": [
        {
          "start": 482,
          "length": 32
        },
        {
          "start": 2058,
          "length": 32
        },
        {
          "start": 4186,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "cowSwapDomainSeparatorPublic()": "68629bf4",
    "cowSwapSettlement()": "ec30bb88",
    "createOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))": "322bba21",
    "deleteOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))": "b52e0d64",
    "deleteOrders((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64)[])": "4b5b7141",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "orders(bytes32)": "9c3f1e90",
    "unwrap(uint256)": "de0e9a3e",
    "wrap(uint256)": "ea598cb0",
    "wrapAll()": "4c84c1c8",
    "wrappedNativeToken()": "17fcb39b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICoWSwapSettlement\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"contract IWrappedNativeToken\",\"name\":\"wrappedNativeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EthTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectEthAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"NotAllowedToDeleteOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllowedZeroSellAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"OrderIsAlreadyOwned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReceiverMustBeSet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct GPv2Order.Data\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ICoWSwapOnchainOrders.OnchainSigningScheme\",\"name\":\"scheme\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ICoWSwapOnchainOrders.OnchainSignature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"OrderPlacement\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cowSwapDomainSeparatorPublic\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cowSwapSettlement\",\"outputs\":[{\"internalType\":\"contract ICoWSwapSettlement\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"deleteOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"int64\",\"name\":\"quoteId\",\"type\":\"int64\"}],\"internalType\":\"struct EthFlowOrder.Data[]\",\"name\":\"orderArray\",\"type\":\"tuple[]\"}],\"name\":\"deleteOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"contract IWrappedNativeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Wrapper that exposes internal funcions of CoWSwapEthFlow.\",\"errors\":{\"EthTransferFailed()\":[{\"details\":\"Error thrown when unsuccessfully sending ETH to an address.\"}],\"IncorrectEthAmount()\":[{\"details\":\"Error thrown when trying to create an order without sending the expected amount of ETH to this contract.\"}],\"NotAllowedToDeleteOrder(bytes32)\":[{\"details\":\"Error thrown if trying to delete an order while not allowed.\"}],\"NotAllowedZeroSellAmount()\":[{\"details\":\"Error thrown when trying to create an order with a sell amount == 0\"}],\"OrderIsAlreadyOwned(bytes32)\":[{\"details\":\"Error thrown when trying to create a new order whose order hash is the same as an order hash that was already assigned.\"}],\"ReceiverMustBeSet()\":[{\"details\":\"Error returned if the receiver of the ETH flow order is unspecified (`GPv2Order.RECEIVER_SAME_AS_OWNER`).\"}]},\"kind\":\"dev\",\"methods\":{\"createOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))\":{\"details\":\"Function that creates and broadcasts an ETH flow order that sells native ETH. The order is paid for when the caller sends out the transaction. The caller takes ownership of the new order.\",\"params\":{\"order\":\"The data describing the order to be created. See [`EthFlowOrder.Data`] for extra information on each parameter.\"},\"returns\":{\"orderHash\":\"The hash of the CoW Swap order that is created to settle the new ETH order.\"}},\"deleteOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))\":{\"details\":\"Marks an existing ETH-flow order as invalid and refunds the ETH that hasn't been traded yet. Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\",\"params\":{\"order\":\"order to be deleted.\"}},\"deleteOrders((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64)[])\":{\"details\":\"Marks existing ETH-flow orders as invalid and, for each order, refunds the ETH that hasn't been traded yet. Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.\",\"params\":{\"orderArray\":\"Array of orders to be deleted.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"EIP1271-compliant onchain signature verification function. This function is used by the CoW Swap settlement contract to determine if an order that is signed with an EIP1271 signature is valid. As this contract has approved the vault relayer contract, a valid signature for an order means that the order can be traded on CoW Swap.\",\"params\":{\"orderHash\":\"Hash of the order to be signed. This is the EIP-712 signing hash for the specified order as defined in the CoW Swap settlement contract.\",\"signature\":\"Signature byte array. This parameter is unused since as all information needed to verify if an order is already available onchain.\"},\"returns\":{\"_0\":\"Either the EIP-1271 \\\"magic value\\\" indicating success (0x1626ba7e) or a different value indicating failure (0xffffffff).\"}},\"unwrap(uint256)\":{\"details\":\"This function takes the specified amount of the chain's wrapped native token (e.g., WETH for mainnet) and converts it to its unwrapped version (e.g., ETH).\",\"params\":{\"amount\":\"The amount of wrapped native tokens to convert to native tokens.\"}},\"wrap(uint256)\":{\"details\":\"This function takes the specified amount of the chain's native token (e.g., ETH for mainnet) stored by this contract and converts it to its wrapped version (e.g., WETH).\",\"params\":{\"amount\":\"The amount of native tokens to convert to wrapped native tokens.\"}},\"wrapAll()\":{\"details\":\"This function reads the  chain's native token balance of this contract (e.g., ETH for mainnet) and converts\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/lib/CoWSwapEthFlow/CoWSwapEthFlowExposed.sol\":\"CoWSwapEthFlowExposed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/CoWSwapEthFlow.sol\":{\"keccak256\":\"0x2d7e52c11e152d492ad6265986784e8f59a2cd11ecefe9407420aeaa2b2efac1\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://584619ab45659b1cb08f59ad37f0665b24b82ce6ec9d4e5c0f8f8f73b8fa3834\",\"dweb:/ipfs/QmU9LAE9PpBkiwyrsdm9PdP2ttM9g5t7xCC5CsGxNoRFfJ\"]},\"src/interfaces/ICoWSwapEthFlow.sol\":{\"keccak256\":\"0xc65c4f18f892b2fce7a330e48edec26a5580c32407cfac757f8fa4a752a1201f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a0c9f53dff2e89306ba52747f0145e8235d712d85a1ba7f1ef8b733c4b60a39a\",\"dweb:/ipfs/QmVo8Bqd5rwd6iudKzmzST25yQk6HYG96vkuWGCMBcLJzd\"]},\"src/interfaces/ICoWSwapOnchainOrders.sol\":{\"keccak256\":\"0x02231f4b30e831972c9a5ff76f2a455f9c00b45eab2386c3d007993a39bd3068\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5eb13ec36a620370c14985d97833c9195be765af30980efd0a7db44f2edb03fa\",\"dweb:/ipfs/QmVF1w5pTxxEgLbP2SxT3PRwmyyRRCnkVuTkH4ZL3XysSJ\"]},\"src/interfaces/ICoWSwapSettlement.sol\":{\"keccak256\":\"0xcb5007f3259129930d32a273874a955ebf18135294a3a7cbff6e2e03318bb75a\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://dbd6e3f4a8bb893fc562cd44d7ca1d835dd53b7be05091653dfbcdd4f9541451\",\"dweb:/ipfs/Qmdv2KnRjuWB1J1uqVErdUPywGeAuhNwbhz2Reouf9kbi9\"]},\"src/interfaces/IWrappedNativeToken.sol\":{\"keccak256\":\"0x4c882eb1e51f16042510a69f55871d0553d0df69c749f2837d4892c7cc28eef9\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ef65eb08eb3a44f383cc6a6cb3663bb651f6c1e24fe821d7f7537dde27fb223f\",\"dweb:/ipfs/QmVzrKmA8o58imqKWfbJ4pjGpTLe82GKZYU3baxVLAd7kW\"]},\"src/libraries/CoWSwapEip712.sol\":{\"keccak256\":\"0x961461c50fbf52171a62f74dcf64dd1b3d2ef2a79fb985edb482e75e6b1c5e0c\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6876c85f117b0c89339170fd365b98809f0e947aab3d3fff62a1c041bed86525\",\"dweb:/ipfs/QmeTPCEAJiYPwLjDErCnboCvgjPyBDo4neHHi7rycB5ra4\"]},\"src/libraries/EthFlowOrder.sol\":{\"keccak256\":\"0x18b62c81df935c3e2214d982ddfb362382611c4375d4e59e0d3b33dad85e3756\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5ff06800a491f09428351cbf64394d90ee3537262484d7bcd501df44cc74e525\",\"dweb:/ipfs/Qmeuo6ewhbAKfY1mpZfXt4vx1FW67htrAZqQVFnDWknsQy\"]},\"src/mixins/CoWSwapOnchainOrders.sol\":{\"keccak256\":\"0xbfe4db574a1928958f43534fd69e21a78010b6a9e6d44bd522e068de59399e64\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://720f7392e675b7b09a221f9ba5ea7f6dbfba0b4506907b53164e6f058d3a02b9\",\"dweb:/ipfs/QmeWUDeWPsmZwV4S8ZbxFAx4fDAPHYG8LivYjVWAo2Pn8x\"]},\"src/vendored/GPv2EIP1271.sol\":{\"keccak256\":\"0xf33b34139b7092e93750d56a367c2d2dcf43e44ac7cbe38e9d98110d311dcb8f\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://09a6c1eb48cb02369876eb6753bf01e57beca5c964b64473acae18a8d16a4645\",\"dweb:/ipfs/QmXguETpngWGNX4QoqWzq6Qc9zEXWJvgxTmrUYiXBaoSea\"]},\"src/vendored/GPv2Order.sol\":{\"keccak256\":\"0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4\",\"dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR\"]},\"src/vendored/IERC20.sol\":{\"keccak256\":\"0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738\",\"dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog\"]},\"test/lib/CoWSwapEthFlow/CoWSwapEthFlowExposed.sol\":{\"keccak256\":\"0xcea196cded7f542b6769bf07d3fa5df649df47f06bc41d3657a8d362cb138333\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://46fa0382d7922a6aa99eb9b6b559cc4b48c467d4091c8d10e6d29cbc00b5821a\",\"dweb:/ipfs/QmWKrUQxa6iCvqCBCwhfGdHHAdNXo4RpME9D48GxzL5JNF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ICoWSwapSettlement",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "contract IWrappedNativeToken",
              "name": "wrappedNativeToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EthTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectEthAmount"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "NotAllowedToDeleteOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAllowedZeroSellAmount"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "OrderIsAlreadyOwned"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReceiverMustBeSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct GPv2Order.Data",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct ICoWSwapOnchainOrders.OnchainSignature",
              "name": "signature",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum ICoWSwapOnchainOrders.OnchainSigningScheme",
                  "name": "scheme",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderPlacement",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cowSwapDomainSeparatorPublic",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cowSwapSettlement",
          "outputs": [
            {
              "internalType": "contract ICoWSwapSettlement",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct EthFlowOrder.Data",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "int64",
                  "name": "quoteId",
                  "type": "int64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createOrder",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct EthFlowOrder.Data",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "int64",
                  "name": "quoteId",
                  "type": "int64"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteOrder"
        },
        {
          "inputs": [
            {
              "internalType": "struct EthFlowOrder.Data[]",
              "name": "orderArray",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "int64",
                  "name": "quoteId",
                  "type": "int64"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteOrders"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "orders",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrap"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "wrap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "wrapAll"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrappedNativeToken",
          "outputs": [
            {
              "internalType": "contract IWrappedNativeToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))": {
            "details": "Function that creates and broadcasts an ETH flow order that sells native ETH. The order is paid for when the caller sends out the transaction. The caller takes ownership of the new order.",
            "params": {
              "order": "The data describing the order to be created. See [`EthFlowOrder.Data`] for extra information on each parameter."
            },
            "returns": {
              "orderHash": "The hash of the CoW Swap order that is created to settle the new ETH order."
            }
          },
          "deleteOrder((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64))": {
            "details": "Marks an existing ETH-flow order as invalid and refunds the ETH that hasn't been traded yet. Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.",
            "params": {
              "order": "order to be deleted."
            }
          },
          "deleteOrders((address,address,uint256,uint256,bytes32,uint256,uint32,bool,int64)[])": {
            "details": "Marks existing ETH-flow orders as invalid and, for each order, refunds the ETH that hasn't been traded yet. Note that some parameters of the orders are ignored, as for example the order expiration date and the quote id.",
            "params": {
              "orderArray": "Array of orders to be deleted."
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "EIP1271-compliant onchain signature verification function. This function is used by the CoW Swap settlement contract to determine if an order that is signed with an EIP1271 signature is valid. As this contract has approved the vault relayer contract, a valid signature for an order means that the order can be traded on CoW Swap.",
            "params": {
              "orderHash": "Hash of the order to be signed. This is the EIP-712 signing hash for the specified order as defined in the CoW Swap settlement contract.",
              "signature": "Signature byte array. This parameter is unused since as all information needed to verify if an order is already available onchain."
            },
            "returns": {
              "_0": "Either the EIP-1271 \"magic value\" indicating success (0x1626ba7e) or a different value indicating failure (0xffffffff)."
            }
          },
          "unwrap(uint256)": {
            "details": "This function takes the specified amount of the chain's wrapped native token (e.g., WETH for mainnet) and converts it to its unwrapped version (e.g., ETH).",
            "params": {
              "amount": "The amount of wrapped native tokens to convert to native tokens."
            }
          },
          "wrap(uint256)": {
            "details": "This function takes the specified amount of the chain's native token (e.g., ETH for mainnet) stored by this contract and converts it to its wrapped version (e.g., WETH).",
            "params": {
              "amount": "The amount of native tokens to convert to wrapped native tokens."
            }
          },
          "wrapAll()": {
            "details": "This function reads the  chain's native token balance of this contract (e.g., ETH for mainnet) and converts"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/lib/CoWSwapEthFlow/CoWSwapEthFlowExposed.sol": "CoWSwapEthFlowExposed"
      },
      "libraries": {}
    },
    "sources": {
      "src/CoWSwapEthFlow.sol": {
        "keccak256": "0x2d7e52c11e152d492ad6265986784e8f59a2cd11ecefe9407420aeaa2b2efac1",
        "urls": [
          "bzz-raw://584619ab45659b1cb08f59ad37f0665b24b82ce6ec9d4e5c0f8f8f73b8fa3834",
          "dweb:/ipfs/QmU9LAE9PpBkiwyrsdm9PdP2ttM9g5t7xCC5CsGxNoRFfJ"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/interfaces/ICoWSwapEthFlow.sol": {
        "keccak256": "0xc65c4f18f892b2fce7a330e48edec26a5580c32407cfac757f8fa4a752a1201f",
        "urls": [
          "bzz-raw://a0c9f53dff2e89306ba52747f0145e8235d712d85a1ba7f1ef8b733c4b60a39a",
          "dweb:/ipfs/QmVo8Bqd5rwd6iudKzmzST25yQk6HYG96vkuWGCMBcLJzd"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/interfaces/ICoWSwapOnchainOrders.sol": {
        "keccak256": "0x02231f4b30e831972c9a5ff76f2a455f9c00b45eab2386c3d007993a39bd3068",
        "urls": [
          "bzz-raw://5eb13ec36a620370c14985d97833c9195be765af30980efd0a7db44f2edb03fa",
          "dweb:/ipfs/QmVF1w5pTxxEgLbP2SxT3PRwmyyRRCnkVuTkH4ZL3XysSJ"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/interfaces/ICoWSwapSettlement.sol": {
        "keccak256": "0xcb5007f3259129930d32a273874a955ebf18135294a3a7cbff6e2e03318bb75a",
        "urls": [
          "bzz-raw://dbd6e3f4a8bb893fc562cd44d7ca1d835dd53b7be05091653dfbcdd4f9541451",
          "dweb:/ipfs/Qmdv2KnRjuWB1J1uqVErdUPywGeAuhNwbhz2Reouf9kbi9"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/interfaces/IWrappedNativeToken.sol": {
        "keccak256": "0x4c882eb1e51f16042510a69f55871d0553d0df69c749f2837d4892c7cc28eef9",
        "urls": [
          "bzz-raw://ef65eb08eb3a44f383cc6a6cb3663bb651f6c1e24fe821d7f7537dde27fb223f",
          "dweb:/ipfs/QmVzrKmA8o58imqKWfbJ4pjGpTLe82GKZYU3baxVLAd7kW"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/libraries/CoWSwapEip712.sol": {
        "keccak256": "0x961461c50fbf52171a62f74dcf64dd1b3d2ef2a79fb985edb482e75e6b1c5e0c",
        "urls": [
          "bzz-raw://6876c85f117b0c89339170fd365b98809f0e947aab3d3fff62a1c041bed86525",
          "dweb:/ipfs/QmeTPCEAJiYPwLjDErCnboCvgjPyBDo4neHHi7rycB5ra4"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/libraries/EthFlowOrder.sol": {
        "keccak256": "0x18b62c81df935c3e2214d982ddfb362382611c4375d4e59e0d3b33dad85e3756",
        "urls": [
          "bzz-raw://5ff06800a491f09428351cbf64394d90ee3537262484d7bcd501df44cc74e525",
          "dweb:/ipfs/Qmeuo6ewhbAKfY1mpZfXt4vx1FW67htrAZqQVFnDWknsQy"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/mixins/CoWSwapOnchainOrders.sol": {
        "keccak256": "0xbfe4db574a1928958f43534fd69e21a78010b6a9e6d44bd522e068de59399e64",
        "urls": [
          "bzz-raw://720f7392e675b7b09a221f9ba5ea7f6dbfba0b4506907b53164e6f058d3a02b9",
          "dweb:/ipfs/QmeWUDeWPsmZwV4S8ZbxFAx4fDAPHYG8LivYjVWAo2Pn8x"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/vendored/GPv2EIP1271.sol": {
        "keccak256": "0xf33b34139b7092e93750d56a367c2d2dcf43e44ac7cbe38e9d98110d311dcb8f",
        "urls": [
          "bzz-raw://09a6c1eb48cb02369876eb6753bf01e57beca5c964b64473acae18a8d16a4645",
          "dweb:/ipfs/QmXguETpngWGNX4QoqWzq6Qc9zEXWJvgxTmrUYiXBaoSea"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/vendored/GPv2Order.sol": {
        "keccak256": "0x0ce12e72d13c34c1d255d7e5945421e8129e7bea5d93a80f63acf8461535cdc2",
        "urls": [
          "bzz-raw://53a307b0402ecf0b01df8b0cff874c73e7ba79828b7ffb4de27dc324f463b3e4",
          "dweb:/ipfs/QmWdrYo5bGQjKJKJ4p6chrr4UZzuWVi3stFMHHC3rmDgYR"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/vendored/IERC20.sol": {
        "keccak256": "0xcbe49e308e3aecb1ee9fe6a7c412a4d65790a03d676a2e06f6a73c8de7b4f83c",
        "urls": [
          "bzz-raw://a49944b2e03bf8fe6594b9a8cb250d60adf56f88551240982e7a029bfc327738",
          "dweb:/ipfs/QmWjmaZuXwj8zWvgoUng9crWZhAFpLnYciyEnUjFeKbzog"
        ],
        "license": "MIT"
      },
      "test/lib/CoWSwapEthFlow/CoWSwapEthFlowExposed.sol": {
        "keccak256": "0xcea196cded7f542b6769bf07d3fa5df649df47f06bc41d3657a8d362cb138333",
        "urls": [
          "bzz-raw://46fa0382d7922a6aa99eb9b6b559cc4b48c467d4091c8d10e6d29cbc00b5821a",
          "dweb:/ipfs/QmWKrUQxa6iCvqCBCwhfGdHHAdNXo4RpME9D48GxzL5JNF"
        ],
        "license": "LGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/lib/CoWSwapEthFlow/CoWSwapEthFlowExposed.sol",
    "id": 29746,
    "exportedSymbols": {
      "CoWSwapEip712": [
        24559
      ],
      "CoWSwapEthFlow": [
        24375
      ],
      "CoWSwapEthFlowExposed": [
        29745
      ],
      "CoWSwapOnchainOrders": [
        24738
      ],
      "EIP1271Verifier": [
        24757
      ],
      "EthFlowOrder": [
        24676
      ],
      "GPv2EIP1271": [
        24745
      ],
      "GPv2Order": [
        24913
      ],
      "ICoWSwapEthFlow": [
        24449
      ],
      "ICoWSwapOnchainOrders": [
        24478
      ],
      "ICoWSwapSettlement": [
        24496
      ],
      "IERC20": [
        24991
      ],
      "IWrappedNativeToken": [
        24513
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:621:44",
    "nodes": [
      {
        "id": 29717,
        "nodeType": "PragmaDirective",
        "src": "46:21:44",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8"
        ]
      },
      {
        "id": 29718,
        "nodeType": "ImportDirective",
        "src": "69:41:44",
        "nodes": [],
        "absolutePath": "src/CoWSwapEthFlow.sol",
        "file": "../../../src/CoWSwapEthFlow.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29746,
        "sourceUnit": 24376,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29719,
        "nodeType": "ImportDirective",
        "src": "111:56:44",
        "nodes": [],
        "absolutePath": "src/interfaces/ICoWSwapSettlement.sol",
        "file": "../../../src/interfaces/ICoWSwapSettlement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29746,
        "sourceUnit": 24497,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29745,
        "nodeType": "ContractDefinition",
        "src": "236:430:44",
        "nodes": [
          {
            "id": 29736,
            "nodeType": "FunctionDefinition",
            "src": "291:251:44",
            "nodes": [],
            "body": {
              "id": 29735,
              "nodeType": "Block",
              "src": "534:8:44",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 29731,
                    "name": "settlementContractAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29725,
                    "src": "434:25:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoWSwapSettlement_$24496",
                      "typeString": "contract ICoWSwapSettlement"
                    }
                  },
                  {
                    "id": 29732,
                    "name": "wrappedNativeToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29728,
                    "src": "461:18:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWrappedNativeToken_$24513",
                      "typeString": "contract IWrappedNativeToken"
                    }
                  }
                ],
                "id": 29733,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 29730,
                  "name": "CoWSwapEthFlow",
                  "nameLocations": [
                    "419:14:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24375,
                  "src": "419:14:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "419:61:44"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29725,
                  "mutability": "mutable",
                  "name": "settlementContractAddress",
                  "nameLocation": "331:25:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29736,
                  "src": "312:44:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICoWSwapSettlement_$24496",
                    "typeString": "contract ICoWSwapSettlement"
                  },
                  "typeName": {
                    "id": 29724,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29723,
                      "name": "ICoWSwapSettlement",
                      "nameLocations": [
                        "312:18:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24496,
                      "src": "312:18:44"
                    },
                    "referencedDeclaration": 24496,
                    "src": "312:18:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoWSwapSettlement_$24496",
                      "typeString": "contract ICoWSwapSettlement"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29728,
                  "mutability": "mutable",
                  "name": "wrappedNativeToken",
                  "nameLocation": "386:18:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29736,
                  "src": "366:38:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWrappedNativeToken_$24513",
                    "typeString": "contract IWrappedNativeToken"
                  },
                  "typeName": {
                    "id": 29727,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29726,
                      "name": "IWrappedNativeToken",
                      "nameLocations": [
                        "366:19:44"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24513,
                      "src": "366:19:44"
                    },
                    "referencedDeclaration": 24513,
                    "src": "366:19:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWrappedNativeToken_$24513",
                      "typeString": "contract IWrappedNativeToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "302:108:44"
            },
            "returnParameters": {
              "id": 29734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:0:44"
            },
            "scope": 29745,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29744,
            "nodeType": "FunctionDefinition",
            "src": "548:116:44",
            "nodes": [],
            "body": {
              "id": 29743,
              "nodeType": "Block",
              "src": "618:46:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29741,
                    "name": "cowSwapDomainSeparator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24694,
                    "src": "635:22:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 29740,
                  "id": 29742,
                  "nodeType": "Return",
                  "src": "628:29:44"
                }
              ]
            },
            "functionSelector": "68629bf4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cowSwapDomainSeparatorPublic",
            "nameLocation": "557:28:44",
            "parameters": {
              "id": 29737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "585:2:44"
            },
            "returnParameters": {
              "id": 29740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29739,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29744,
                  "src": "609:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29738,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "608:9:44"
            },
            "scope": 29745,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29721,
              "name": "CoWSwapEthFlow",
              "nameLocations": [
                "270:14:44"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24375,
              "src": "270:14:44"
            },
            "id": 29722,
            "nodeType": "InheritanceSpecifier",
            "src": "270:14:44"
          }
        ],
        "canonicalName": "CoWSwapEthFlowExposed",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 29720,
          "nodeType": "StructuredDocumentation",
          "src": "169:67:44",
          "text": "@dev Wrapper that exposes internal funcions of CoWSwapEthFlow."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29745,
          24375,
          24449,
          24757,
          24738,
          24478
        ],
        "name": "CoWSwapEthFlowExposed",
        "nameLocation": "245:21:44",
        "scope": 29746,
        "usedErrors": [
          24384,
          24387,
          24390,
          24395,
          24398,
          24621
        ]
      }
    ],
    "license": "LGPL-3.0-or-later"
  },
  "id": 44
}